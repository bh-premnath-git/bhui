{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Pipeline",
    "type": "object",
    "schemaVersion": "1.0",
    "properties": {
        "name": {
            "type": "string",
            "minLength": 1
        },
        "description": {
            "type": "string"
        },
        "version": {
            "type": "string",
            "minLength": 1
        },
        "engine_type": {
            "type": "string",
            "enum": [
                "pyspark",
                "pyflink",
                "pandas"
            ],
            "description": "The processing engine to use for this pipeline"
        },
        "mode": {
            "type": "string",
            "enum": [
                "DEBUG",
                "ENGINE"
            ],
            "default": "ENGINE"
        },
        "parameters": {
            "type": "array",
            "title": "Pipeline Parameters",
            "items": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "default": []
        },
        "connections": {
            "type": "object",
            "patternProperties": {
                "^[a-zA-Z0-9_]+$": {
                    "type": "object"
                }
            },
            "minProperties": 1
        },
        "sources": {
            "type": "object",
            "patternProperties": {
                "^[a-zA-Z0-9_]+$": {
                    "type": "object"
                }
            },
            "minProperties": 1
        },
        "targets": {
            "type": "object",
            "patternProperties": {
                "^[a-zA-Z0-9_]+$": {
                    "type": "object"
                }
            },
            "minProperties": 1
        },
        "transformations": {
            "type": "array",
            "items": {
                "type": "object"
            },
            "minItems": 1
        },
        "engine_config": {
            "type": "object",
            "description": "Engine-specific configuration settings",
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Engine Configuration",
            "properties": {
                "engine_type": {
                    "type": "string",
                    "enum": [
                        "pyspark",
                        "pyflink",
                        "pandas"
                    ],
                    "description": "The processing engine type"
                },
                "configurations": {
                    "type": "array",
                    "description": "Array of engine-specific configuration properties",
                    "items": {
                        "type": "object",
                        "properties": {
                            "section": {
                                "type": "string",
                                "description": "Configuration section/category"
                            },
                            "property_name": {
                                "type": "string",
                                "description": "Name of the configuration property"
                            },
                            "property_value": {
                                "type": [
                                    "string",
                                    "number",
                                    "boolean"
                                ],
                                "description": "Value of the configuration property"
                            },
                            "default_value": {
                                "type": [
                                    "string",
                                    "number",
                                    "boolean"
                                ],
                                "description": "Default value of the property"
                            },
                            "property_type": {
                                "type": "string",
                                "enum": [
                                    "String",
                                    "Integer",
                                    "Long",
                                    "Double",
                                    "Boolean",
                                    "Duration",
                                    "Enum"
                                ],
                                "description": "Data type of the property"
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of what this property does"
                            },
                            "mode": {
                                "type": "string",
                                "description": "Applicable modes (e.g., 'batch', 'streaming', 'batch, streaming')"
                            },
                            "from_version": {
                                "type": "string",
                                "description": "Version from which this property is available"
                            },
                            "to_version": {
                                "type": "string",
                                "description": "Version until which this property is available"
                            },
                            "possible_values": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Possible values for enum properties"
                            }
                        },
                        "required": [
                            "property_name",
                            "property_value"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "required": [
                "engine_type",
                "configurations"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "engine_type": {
                                "const": "pyspark"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "configurations": {
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "section": {
                                            "type": "string",
                                            "enum": [
                                                "Application Properties",
                                                "Runtime Environment",
                                                "Shuffle Behavior",
                                                "Spark UI",
                                                "Compression and Serialization",
                                                "Memory Management",
                                                "Execution Behavior",
                                                "Networking",
                                                "Scheduling",
                                                "Dynamic Allocation",
                                                "Security",
                                                "Spark SQL",
                                                "Spark Streaming",
                                                "SparkR",
                                                "GraphX",
                                                "Deploy",
                                                "Cluster Managers"
                                            ]
                                        },
                                        "property_name": {
                                            "type": "string",
                                            "pattern": "^spark\\."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "engine_type": {
                                "const": "pyflink"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "configurations": {
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "section": {
                                            "type": "string",
                                            "enum": [
                                                "Execution Options",
                                                "Pipeline Options",
                                                "Optimizer Options",
                                                "Table Options",
                                                "SQL Client Options",
                                                "Runtime Options",
                                                "Checkpointing Options",
                                                "State Backend Options",
                                                "Metrics Options",
                                                "History Server Options",
                                                "Environment Options"
                                            ]
                                        },
                                        "property_name": {
                                            "type": "string",
                                            "pattern": "^table\\.|^sql\\.|^execution\\.|^pipeline\\.|^state\\.|^metrics\\."
                                        },
                                        "mode": {
                                            "type": "string",
                                            "enum": [
                                                "batch",
                                                "streaming",
                                                "batch, streaming"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "engine_type": {
                                "const": "pandas"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "configurations": {
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "section": {
                                            "type": "string",
                                            "enum": [
                                                "General Options",
                                                "Display Options",
                                                "Memory Options",
                                                "Performance Options",
                                                "I/O Options"
                                            ]
                                        },
                                        "property_name": {
                                            "type": "string",
                                            "pattern": "^pandas\\."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            ],
            "definitions": {
                "sparkConfig": {
                    "type": "object",
                    "properties": {
                        "section": {
                            "type": "string",
                            "enum": [
                                "Application Properties",
                                "Runtime Environment",
                                "Shuffle Behavior",
                                "Spark UI",
                                "Compression and Serialization",
                                "Memory Management",
                                "Execution Behavior",
                                "Networking",
                                "Scheduling",
                                "Dynamic Allocation",
                                "Security",
                                "Spark SQL",
                                "Spark Streaming",
                                "SparkR",
                                "GraphX",
                                "Deploy",
                                "Cluster Managers"
                            ]
                        },
                        "property_name": {
                            "type": "string",
                            "pattern": "^spark\\."
                        }
                    }
                },
                "flinkConfig": {
                    "type": "object",
                    "properties": {
                        "section": {
                            "type": "string",
                            "enum": [
                                "Execution Options",
                                "Pipeline Options",
                                "Optimizer Options",
                                "Table Options",
                                "SQL Client Options",
                                "Runtime Options",
                                "Checkpointing Options",
                                "State Backend Options",
                                "Metrics Options",
                                "History Server Options",
                                "Environment Options"
                            ]
                        },
                        "property_name": {
                            "type": "string",
                            "pattern": "^table\\.|^sql\\.|^execution\\.|^pipeline\\.|^state\\.|^metrics\\."
                        },
                        "mode": {
                            "type": "string",
                            "enum": [
                                "batch",
                                "streaming",
                                "batch, streaming"
                            ]
                        }
                    }
                },
                "pandasConfig": {
                    "type": "object",
                    "properties": {
                        "section": {
                            "type": "string",
                            "enum": [
                                "General Options",
                                "Display Options",
                                "Memory Options",
                                "Performance Options",
                                "I/O Options"
                            ]
                        },
                        "property_name": {
                            "type": "string",
                            "pattern": "^pandas\\."
                        }
                    }
                }
            }
        }
    },
    "required": [
        "name",
        "version",
        "engine_type",
        "sources",
        "targets",
        "transformations"
    ],
    "allOf": [
        {
            "if": {
                "properties": {
                    "engine_type": {
                        "const": "pyspark"
                    }
                }
            },
            "then": {
                "properties": {
                    "connections": {
                        "type": "object",
                        "patternProperties": {
                            "^[a-zA-Z0-9_]+$": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "Connection",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "connection_type": {
                                        "type": "string",
                                        "enum": [
                                            "Local",
                                            "GCS",
                                            "S3",
                                            "BigQuery",
                                            "PostgreSQL",
                                            "Snowflake",
                                            "MySQL"
                                        ]
                                    }
                                },
                                "required": [
                                    "name",
                                    "connection_type"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "Local"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "file_path_prefix": {
                                                    "type": "string",
                                                    "default": ""
                                                }
                                            },
                                            "required": [
                                                "file_path_prefix"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "GCS"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "bucket": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "file_path_prefix": {
                                                    "type": "string",
                                                    "default": ""
                                                }
                                            },
                                            "required": [
                                                "bucket",
                                                "file_path_prefix"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "S3"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "bucket": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "file_path_prefix": {
                                                    "type": "string",
                                                    "default": ""
                                                }
                                            },
                                            "required": [
                                                "bucket",
                                                "file_path_prefix"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "BigQuery"
                                                }
                                            }
                                        },
                                        "then": {
                                            "documentationUrl": "N/A",
                                            "supportsIncremental": true,
                                            "supported_sync_modes": [
                                                "overwrite",
                                                "append",
                                                "append_dedup"
                                            ],
                                            "connectionSpecification": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "BigQuery Source Spec",
                                                "type": "object",
                                                "required": [
                                                    "project_id",
                                                    "credentials_json"
                                                ],
                                                "properties": {
                                                    "project_id": {
                                                        "type": "string",
                                                        "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                        "title": "Project ID"
                                                    },
                                                    "dataset_id": {
                                                        "type": "string",
                                                        "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                        "title": "Default Dataset ID"
                                                    },
                                                    "credentials_json": {
                                                        "type": "string",
                                                        "description": "The contents of your Service Account Key JSON file.",
                                                        "title": "Credentials JSON",
                                                        "bh_secret": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "PostgreSQL"
                                                }
                                            }
                                        },
                                        "then": {
                                            "documentationUrl": "N/A",
                                            "connectionSpecification": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "Postgres Source Spec",
                                                "type": "object",
                                                "required": [
                                                    "host",
                                                    "port",
                                                    "database",
                                                    "username"
                                                ],
                                                "properties": {
                                                    "host": {
                                                        "title": "Host",
                                                        "description": "Hostname of the database.",
                                                        "type": "string",
                                                        "order": 0,
                                                        "group": "db"
                                                    },
                                                    "port": {
                                                        "title": "Port",
                                                        "description": "Port of the database.",
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "maximum": 65536,
                                                        "default": 5432,
                                                        "examples": [
                                                            "5432"
                                                        ],
                                                        "order": 1,
                                                        "group": "db"
                                                    },
                                                    "database": {
                                                        "title": "Database Name",
                                                        "description": "Name of the database.",
                                                        "type": "string",
                                                        "order": 2,
                                                        "group": "db"
                                                    },
                                                    "schemas": {
                                                        "title": "Schemas",
                                                        "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 0,
                                                        "uniqueItems": true,
                                                        "default": [
                                                            "public"
                                                        ],
                                                        "order": 3,
                                                        "group": "db"
                                                    },
                                                    "username": {
                                                        "title": "Username",
                                                        "description": "Username to access the database.",
                                                        "type": "string",
                                                        "order": 4,
                                                        "group": "auth"
                                                    },
                                                    "password": {
                                                        "title": "Password",
                                                        "description": "Password associated with the username.",
                                                        "type": "string",
                                                        "bh_secret": true,
                                                        "order": 5,
                                                        "group": "auth",
                                                        "always_show": true
                                                    },
                                                    "jdbc_url_params": {
                                                        "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                        "title": "JDBC URL Parameters (Advanced)",
                                                        "type": "string",
                                                        "order": 6,
                                                        "group": "advanced",
                                                        "pattern_descriptor": "key1=value1&key2=value2"
                                                    },
                                                    "ssl_mode": {
                                                        "title": "SSL Modes",
                                                        "description": "SSL connection modes.",
                                                        "type": "object",
                                                        "order": 8,
                                                        "group": "security",
                                                        "oneOf": [
                                                            {
                                                                "title": "disable",
                                                                "additionalProperties": true,
                                                                "description": "Disables encryption of communication between BigHammer and source database.",
                                                                "required": [
                                                                    "mode"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "disable",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "allow",
                                                                "additionalProperties": true,
                                                                "description": "Enables encryption only when required by the source database.",
                                                                "required": [
                                                                    "mode"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "allow",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "prefer",
                                                                "additionalProperties": true,
                                                                "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                "required": [
                                                                    "mode"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "prefer",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "require",
                                                                "additionalProperties": true,
                                                                "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                "required": [
                                                                    "mode"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "require",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "verify-ca",
                                                                "additionalProperties": true,
                                                                "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                "required": [
                                                                    "mode",
                                                                    "ca_certificate"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "verify-ca",
                                                                        "order": 0
                                                                    },
                                                                    "ca_certificate": {
                                                                        "type": "string",
                                                                        "title": "CA Certificate",
                                                                        "description": "CA certificate",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 1
                                                                    },
                                                                    "client_certificate": {
                                                                        "type": "string",
                                                                        "title": "Client Certificate",
                                                                        "description": "Client certificate",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 2,
                                                                        "always_show": true
                                                                    },
                                                                    "client_key": {
                                                                        "type": "string",
                                                                        "title": "Client Key",
                                                                        "description": "Client key",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 3,
                                                                        "always_show": true
                                                                    },
                                                                    "client_key_password": {
                                                                        "type": "string",
                                                                        "title": "Client key password",
                                                                        "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                        "bh_secret": true,
                                                                        "order": 4
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "verify-full",
                                                                "additionalProperties": true,
                                                                "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                "required": [
                                                                    "mode",
                                                                    "ca_certificate"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "verify-full",
                                                                        "order": 0
                                                                    },
                                                                    "ca_certificate": {
                                                                        "type": "string",
                                                                        "title": "CA Certificate",
                                                                        "description": "CA certificate",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 1
                                                                    },
                                                                    "client_certificate": {
                                                                        "type": "string",
                                                                        "title": "Client Certificate",
                                                                        "description": "Client certificate",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 2,
                                                                        "always_show": true
                                                                    },
                                                                    "client_key": {
                                                                        "type": "string",
                                                                        "title": "Client Key",
                                                                        "description": "Client key",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 3,
                                                                        "always_show": true
                                                                    },
                                                                    "client_key_password": {
                                                                        "type": "string",
                                                                        "title": "Client key password",
                                                                        "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                        "bh_secret": true,
                                                                        "order": 4
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "replication_method": {
                                                        "type": "object",
                                                        "title": "Update Method",
                                                        "description": "Configures how data is extracted from the database.",
                                                        "order": 9,
                                                        "group": "advanced",
                                                        "default": "CDC",
                                                        "display_type": "radio",
                                                        "oneOf": [
                                                            {
                                                                "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                "required": [
                                                                    "method",
                                                                    "replication_slot",
                                                                    "publication"
                                                                ],
                                                                "additionalProperties": true,
                                                                "properties": {
                                                                    "method": {
                                                                        "type": "string",
                                                                        "const": "CDC",
                                                                        "order": 1
                                                                    },
                                                                    "plugin": {
                                                                        "type": "string",
                                                                        "title": "Plugin",
                                                                        "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                        "enum": [
                                                                            "pgoutput"
                                                                        ],
                                                                        "default": "pgoutput",
                                                                        "order": 2
                                                                    },
                                                                    "replication_slot": {
                                                                        "type": "string",
                                                                        "title": "Replication Slot",
                                                                        "description": "A plugin logical replication slot.",
                                                                        "order": 3
                                                                    },
                                                                    "publication": {
                                                                        "type": "string",
                                                                        "title": "Publication",
                                                                        "description": "A Postgres publication used for consuming changes.",
                                                                        "order": 4
                                                                    },
                                                                    "initial_waiting_seconds": {
                                                                        "type": "integer",
                                                                        "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                        "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                        "default": 1200,
                                                                        "order": 5,
                                                                        "min": 120,
                                                                        "max": 2400
                                                                    },
                                                                    "queue_size": {
                                                                        "type": "integer",
                                                                        "title": "Size of the queue (Advanced)",
                                                                        "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                        "default": 10000,
                                                                        "order": 6,
                                                                        "min": 1000,
                                                                        "max": 10000
                                                                    },
                                                                    "lsn_commit_behaviour": {
                                                                        "type": "string",
                                                                        "title": "LSN commit behaviour",
                                                                        "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                        "enum": [
                                                                            "While reading Data",
                                                                            "After loading Data in the destination"
                                                                        ],
                                                                        "default": "After loading Data in the destination",
                                                                        "order": 7
                                                                    },
                                                                    "heartbeat_action_query": {
                                                                        "type": "string",
                                                                        "title": "Debezium heartbeat query (Advanced)",
                                                                        "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                        "default": "",
                                                                        "order": 8
                                                                    },
                                                                    "invalid_cdc_cursor_position_behavior": {
                                                                        "type": "string",
                                                                        "title": "Invalid CDC position behavior (Advanced)",
                                                                        "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                        "enum": [
                                                                            "Fail sync",
                                                                            "Re-sync data"
                                                                        ],
                                                                        "default": "Fail sync",
                                                                        "order": 9
                                                                    },
                                                                    "initial_load_timeout_hours": {
                                                                        "type": "integer",
                                                                        "title": "Initial Load Timeout in Hours (Advanced)",
                                                                        "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                        "default": 8,
                                                                        "min": 4,
                                                                        "max": 24,
                                                                        "order": 10
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "Detect Changes with Xmin System Column",
                                                                "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                "required": [
                                                                    "method"
                                                                ],
                                                                "properties": {
                                                                    "method": {
                                                                        "type": "string",
                                                                        "const": "Xmin",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "Scan Changes with User Defined Cursor",
                                                                "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                "required": [
                                                                    "method"
                                                                ],
                                                                "properties": {
                                                                    "method": {
                                                                        "type": "string",
                                                                        "const": "Standard",
                                                                        "order": 8
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                "groups": [
                                                    {
                                                        "id": "db"
                                                    },
                                                    {
                                                        "id": "auth"
                                                    },
                                                    {
                                                        "id": "security",
                                                        "title": "Security"
                                                    },
                                                    {
                                                        "id": "advanced",
                                                        "title": "Advanced"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "Snowflake"
                                                }
                                            }
                                        },
                                        "then": {
                                            "documentationUrl": "N/A",
                                            "connectionSpecification": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "Snowflake Source Spec",
                                                "type": "object",
                                                "required": [
                                                    "host",
                                                    "role",
                                                    "warehouse",
                                                    "database"
                                                ],
                                                "properties": {
                                                    "credentials": {
                                                        "title": "Authorization Method",
                                                        "type": "object",
                                                        "oneOf": [
                                                            {
                                                                "type": "object",
                                                                "title": "OAuth2.0",
                                                                "order": 0,
                                                                "required": [
                                                                    "client_id",
                                                                    "client_secret",
                                                                    "auth_type"
                                                                ],
                                                                "bh_hidden": true,
                                                                "properties": {
                                                                    "auth_type": {
                                                                        "type": "string",
                                                                        "const": "OAuth",
                                                                        "order": 0
                                                                    },
                                                                    "client_id": {
                                                                        "type": "string",
                                                                        "title": "Client ID",
                                                                        "description": "The Client ID of your Snowflake developer application.",
                                                                        "bh_secret": true,
                                                                        "order": 1
                                                                    },
                                                                    "client_secret": {
                                                                        "type": "string",
                                                                        "title": "Client Secret",
                                                                        "description": "The Client Secret of your Snowflake developer application.",
                                                                        "bh_secret": true,
                                                                        "order": 2
                                                                    },
                                                                    "access_token": {
                                                                        "type": "string",
                                                                        "title": "Access Token",
                                                                        "description": "Access Token for making authenticated requests.",
                                                                        "bh_secret": true,
                                                                        "order": 3
                                                                    },
                                                                    "refresh_token": {
                                                                        "type": "string",
                                                                        "title": "Refresh Token",
                                                                        "description": "Refresh Token for making authenticated requests.",
                                                                        "bh_secret": true,
                                                                        "order": 4
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "Key Pair Authentication",
                                                                "type": "object",
                                                                "order": 1,
                                                                "required": [
                                                                    "username",
                                                                    "private_key"
                                                                ],
                                                                "properties": {
                                                                    "auth_type": {
                                                                        "type": "string",
                                                                        "const": "Key Pair Authentication",
                                                                        "order": 0
                                                                    },
                                                                    "username": {
                                                                        "description": "The username you created to allow BigHammer to access the database.",
                                                                        "examples": [
                                                                            "BH_USER"
                                                                        ],
                                                                        "type": "string",
                                                                        "title": "Username",
                                                                        "order": 1
                                                                    },
                                                                    "private_key": {
                                                                        "type": "string",
                                                                        "title": "Private Key",
                                                                        "description": "RSA Private key to use for Snowflake connection.",
                                                                        "multiline": true,
                                                                        "bh_secret": true,
                                                                        "order": 2
                                                                    },
                                                                    "private_key_password": {
                                                                        "type": "string",
                                                                        "title": "Passphrase",
                                                                        "description": "Passphrase for private key",
                                                                        "bh_secret": true,
                                                                        "order": 3
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "Username and Password",
                                                                "type": "object",
                                                                "required": [
                                                                    "username",
                                                                    "password",
                                                                    "auth_type"
                                                                ],
                                                                "order": 2,
                                                                "properties": {
                                                                    "auth_type": {
                                                                        "type": "string",
                                                                        "const": "username/password",
                                                                        "order": 0
                                                                    },
                                                                    "username": {
                                                                        "description": "The username you created to allow BigHammer to access the database.",
                                                                        "examples": [
                                                                            "BH_USER"
                                                                        ],
                                                                        "type": "string",
                                                                        "title": "Username",
                                                                        "order": 1
                                                                    },
                                                                    "password": {
                                                                        "description": "The password associated with the username.",
                                                                        "type": "string",
                                                                        "bh_secret": true,
                                                                        "title": "Password",
                                                                        "order": 2
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "order": 0
                                                    },
                                                    "host": {
                                                        "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                        "examples": [
                                                            "accountname.us-east-2.aws.snowflakecomputing.com"
                                                        ],
                                                        "type": "string",
                                                        "title": "Account Name",
                                                        "order": 1
                                                    },
                                                    "role": {
                                                        "description": "The role you created for BigHammer to access Snowflake.",
                                                        "examples": [
                                                            "BH_ROLE"
                                                        ],
                                                        "type": "string",
                                                        "title": "Role",
                                                        "order": 2
                                                    },
                                                    "warehouse": {
                                                        "description": "The warehouse you created for BigHammer to access data.",
                                                        "examples": [
                                                            "BH_WAREHOUSE"
                                                        ],
                                                        "type": "string",
                                                        "title": "Warehouse",
                                                        "order": 3
                                                    },
                                                    "database": {
                                                        "description": "The database you created for BigHammer to access data.",
                                                        "examples": [
                                                            "BH_DATABASE"
                                                        ],
                                                        "type": "string",
                                                        "title": "Database",
                                                        "order": 4
                                                    },
                                                    "schema": {
                                                        "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                        "examples": [
                                                            "BH_SCHEMA"
                                                        ],
                                                        "type": "string",
                                                        "title": "Schema",
                                                        "order": 5
                                                    },
                                                    "jdbc_url_params": {
                                                        "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                        "title": "JDBC URL Params",
                                                        "type": "string",
                                                        "order": 6
                                                    }
                                                }
                                            },
                                            "advanced_auth": {
                                                "auth_flow_type": "oauth2.0",
                                                "predicate_key": [
                                                    "credentials",
                                                    "auth_type"
                                                ],
                                                "predicate_value": "OAuth",
                                                "oauth_config_specification": {
                                                    "oauth_user_input_from_connector_config_specification": {
                                                        "type": "object",
                                                        "properties": {
                                                            "host": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "host"
                                                                ]
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "role"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "complete_oauth_output_specification": {
                                                        "type": "object",
                                                        "properties": {
                                                            "access_token": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "credentials",
                                                                    "access_token"
                                                                ]
                                                            },
                                                            "refresh_token": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "credentials",
                                                                    "refresh_token"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "complete_oauth_server_input_specification": {
                                                        "type": "object",
                                                        "properties": {
                                                            "client_id": {
                                                                "type": "string"
                                                            },
                                                            "client_secret": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "complete_oauth_server_output_specification": {
                                                        "type": "object",
                                                        "properties": {
                                                            "client_id": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "credentials",
                                                                    "client_id"
                                                                ]
                                                            },
                                                            "client_secret": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "credentials",
                                                                    "client_secret"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "minProperties": 1
                    },
                    "sources": {
                        "type": "object",
                        "patternProperties": {
                            "^[a-zA-Z0-9_]+$": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "Schema for Source",
                                "type": "object",
                                "title": "Source",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Source Name",
                                        "minLength": 1
                                    },
                                    "source_type": {
                                        "type": "string",
                                        "enum": [
                                            "File",
                                            "Relational"
                                        ]
                                    },
                                    "connection": {
                                        "type": "object",
                                        "ui-hint": "endpoint",
                                        "endpoint": "/connection_registry/connection_config/list/",
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "Connection",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "connection_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Local",
                                                        "GCS",
                                                        "S3",
                                                        "BigQuery",
                                                        "PostgreSQL",
                                                        "Snowflake",
                                                        "MySQL"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "connection_type"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Local"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "GCS"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bucket": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "bucket",
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "S3"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bucket": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "bucket",
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "BigQuery"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "supportsIncremental": true,
                                                        "supported_sync_modes": [
                                                            "overwrite",
                                                            "append",
                                                            "append_dedup"
                                                        ],
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "BigQuery Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "project_id",
                                                                "credentials_json"
                                                            ],
                                                            "properties": {
                                                                "project_id": {
                                                                    "type": "string",
                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                    "title": "Project ID"
                                                                },
                                                                "dataset_id": {
                                                                    "type": "string",
                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                    "title": "Default Dataset ID"
                                                                },
                                                                "credentials_json": {
                                                                    "type": "string",
                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                    "title": "Credentials JSON",
                                                                    "bh_secret": true
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "PostgreSQL"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Postgres Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "host",
                                                                "port",
                                                                "database",
                                                                "username"
                                                            ],
                                                            "properties": {
                                                                "host": {
                                                                    "title": "Host",
                                                                    "description": "Hostname of the database.",
                                                                    "type": "string",
                                                                    "order": 0,
                                                                    "group": "db"
                                                                },
                                                                "port": {
                                                                    "title": "Port",
                                                                    "description": "Port of the database.",
                                                                    "type": "integer",
                                                                    "minimum": 0,
                                                                    "maximum": 65536,
                                                                    "default": 5432,
                                                                    "examples": [
                                                                        "5432"
                                                                    ],
                                                                    "order": 1,
                                                                    "group": "db"
                                                                },
                                                                "database": {
                                                                    "title": "Database Name",
                                                                    "description": "Name of the database.",
                                                                    "type": "string",
                                                                    "order": 2,
                                                                    "group": "db"
                                                                },
                                                                "schemas": {
                                                                    "title": "Schemas",
                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "minItems": 0,
                                                                    "uniqueItems": true,
                                                                    "default": [
                                                                        "public"
                                                                    ],
                                                                    "order": 3,
                                                                    "group": "db"
                                                                },
                                                                "username": {
                                                                    "title": "Username",
                                                                    "description": "Username to access the database.",
                                                                    "type": "string",
                                                                    "order": 4,
                                                                    "group": "auth"
                                                                },
                                                                "password": {
                                                                    "title": "Password",
                                                                    "description": "Password associated with the username.",
                                                                    "type": "string",
                                                                    "bh_secret": true,
                                                                    "order": 5,
                                                                    "group": "auth",
                                                                    "always_show": true
                                                                },
                                                                "jdbc_url_params": {
                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                    "type": "string",
                                                                    "order": 6,
                                                                    "group": "advanced",
                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                },
                                                                "ssl_mode": {
                                                                    "title": "SSL Modes",
                                                                    "description": "SSL connection modes.",
                                                                    "type": "object",
                                                                    "order": 8,
                                                                    "group": "security",
                                                                    "oneOf": [
                                                                        {
                                                                            "title": "disable",
                                                                            "additionalProperties": true,
                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "disable",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "allow",
                                                                            "additionalProperties": true,
                                                                            "description": "Enables encryption only when required by the source database.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "allow",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "prefer",
                                                                            "additionalProperties": true,
                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "prefer",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "require",
                                                                            "additionalProperties": true,
                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "require",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "verify-ca",
                                                                            "additionalProperties": true,
                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                            "required": [
                                                                                "mode",
                                                                                "ca_certificate"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "verify-ca",
                                                                                    "order": 0
                                                                                },
                                                                                "ca_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "CA Certificate",
                                                                                    "description": "CA certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "Client Certificate",
                                                                                    "description": "Client certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 2,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key": {
                                                                                    "type": "string",
                                                                                    "title": "Client Key",
                                                                                    "description": "Client key",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 3,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Client key password",
                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "verify-full",
                                                                            "additionalProperties": true,
                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                            "required": [
                                                                                "mode",
                                                                                "ca_certificate"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "verify-full",
                                                                                    "order": 0
                                                                                },
                                                                                "ca_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "CA Certificate",
                                                                                    "description": "CA certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "Client Certificate",
                                                                                    "description": "Client certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 2,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key": {
                                                                                    "type": "string",
                                                                                    "title": "Client Key",
                                                                                    "description": "Client key",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 3,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Client key password",
                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "replication_method": {
                                                                    "type": "object",
                                                                    "title": "Update Method",
                                                                    "description": "Configures how data is extracted from the database.",
                                                                    "order": 9,
                                                                    "group": "advanced",
                                                                    "default": "CDC",
                                                                    "display_type": "radio",
                                                                    "oneOf": [
                                                                        {
                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                            "required": [
                                                                                "method",
                                                                                "replication_slot",
                                                                                "publication"
                                                                            ],
                                                                            "additionalProperties": true,
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "CDC",
                                                                                    "order": 1
                                                                                },
                                                                                "plugin": {
                                                                                    "type": "string",
                                                                                    "title": "Plugin",
                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                    "enum": [
                                                                                        "pgoutput"
                                                                                    ],
                                                                                    "default": "pgoutput",
                                                                                    "order": 2
                                                                                },
                                                                                "replication_slot": {
                                                                                    "type": "string",
                                                                                    "title": "Replication Slot",
                                                                                    "description": "A plugin logical replication slot.",
                                                                                    "order": 3
                                                                                },
                                                                                "publication": {
                                                                                    "type": "string",
                                                                                    "title": "Publication",
                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                    "order": 4
                                                                                },
                                                                                "initial_waiting_seconds": {
                                                                                    "type": "integer",
                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                    "default": 1200,
                                                                                    "order": 5,
                                                                                    "min": 120,
                                                                                    "max": 2400
                                                                                },
                                                                                "queue_size": {
                                                                                    "type": "integer",
                                                                                    "title": "Size of the queue (Advanced)",
                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                    "default": 10000,
                                                                                    "order": 6,
                                                                                    "min": 1000,
                                                                                    "max": 10000
                                                                                },
                                                                                "lsn_commit_behaviour": {
                                                                                    "type": "string",
                                                                                    "title": "LSN commit behaviour",
                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                    "enum": [
                                                                                        "While reading Data",
                                                                                        "After loading Data in the destination"
                                                                                    ],
                                                                                    "default": "After loading Data in the destination",
                                                                                    "order": 7
                                                                                },
                                                                                "heartbeat_action_query": {
                                                                                    "type": "string",
                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                    "default": "",
                                                                                    "order": 8
                                                                                },
                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                    "type": "string",
                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                    "enum": [
                                                                                        "Fail sync",
                                                                                        "Re-sync data"
                                                                                    ],
                                                                                    "default": "Fail sync",
                                                                                    "order": 9
                                                                                },
                                                                                "initial_load_timeout_hours": {
                                                                                    "type": "integer",
                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                    "default": 8,
                                                                                    "min": 4,
                                                                                    "max": 24,
                                                                                    "order": 10
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Detect Changes with Xmin System Column",
                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                            "required": [
                                                                                "method"
                                                                            ],
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "Xmin",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                            "required": [
                                                                                "method"
                                                                            ],
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "Standard",
                                                                                    "order": 8
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "groups": [
                                                                {
                                                                    "id": "db"
                                                                },
                                                                {
                                                                    "id": "auth"
                                                                },
                                                                {
                                                                    "id": "security",
                                                                    "title": "Security"
                                                                },
                                                                {
                                                                    "id": "advanced",
                                                                    "title": "Advanced"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Snowflake"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Snowflake Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "host",
                                                                "role",
                                                                "warehouse",
                                                                "database"
                                                            ],
                                                            "properties": {
                                                                "credentials": {
                                                                    "title": "Authorization Method",
                                                                    "type": "object",
                                                                    "oneOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "title": "OAuth2.0",
                                                                            "order": 0,
                                                                            "required": [
                                                                                "client_id",
                                                                                "client_secret",
                                                                                "auth_type"
                                                                            ],
                                                                            "bh_hidden": true,
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "OAuth",
                                                                                    "order": 0
                                                                                },
                                                                                "client_id": {
                                                                                    "type": "string",
                                                                                    "title": "Client ID",
                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                    "bh_secret": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_secret": {
                                                                                    "type": "string",
                                                                                    "title": "Client Secret",
                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                    "bh_secret": true,
                                                                                    "order": 2
                                                                                },
                                                                                "access_token": {
                                                                                    "type": "string",
                                                                                    "title": "Access Token",
                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                    "bh_secret": true,
                                                                                    "order": 3
                                                                                },
                                                                                "refresh_token": {
                                                                                    "type": "string",
                                                                                    "title": "Refresh Token",
                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Key Pair Authentication",
                                                                            "type": "object",
                                                                            "order": 1,
                                                                            "required": [
                                                                                "username",
                                                                                "private_key"
                                                                            ],
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "Key Pair Authentication",
                                                                                    "order": 0
                                                                                },
                                                                                "username": {
                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                    "examples": [
                                                                                        "BH_USER"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Username",
                                                                                    "order": 1
                                                                                },
                                                                                "private_key": {
                                                                                    "type": "string",
                                                                                    "title": "Private Key",
                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                    "multiline": true,
                                                                                    "bh_secret": true,
                                                                                    "order": 2
                                                                                },
                                                                                "private_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Passphrase",
                                                                                    "description": "Passphrase for private key",
                                                                                    "bh_secret": true,
                                                                                    "order": 3
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Username and Password",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "username",
                                                                                "password",
                                                                                "auth_type"
                                                                            ],
                                                                            "order": 2,
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "username/password",
                                                                                    "order": 0
                                                                                },
                                                                                "username": {
                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                    "examples": [
                                                                                        "BH_USER"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Username",
                                                                                    "order": 1
                                                                                },
                                                                                "password": {
                                                                                    "description": "The password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "title": "Password",
                                                                                    "order": 2
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "order": 0
                                                                },
                                                                "host": {
                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                    "examples": [
                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Account Name",
                                                                    "order": 1
                                                                },
                                                                "role": {
                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                    "examples": [
                                                                        "BH_ROLE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Role",
                                                                    "order": 2
                                                                },
                                                                "warehouse": {
                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                    "examples": [
                                                                        "BH_WAREHOUSE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Warehouse",
                                                                    "order": 3
                                                                },
                                                                "database": {
                                                                    "description": "The database you created for BigHammer to access data.",
                                                                    "examples": [
                                                                        "BH_DATABASE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Database",
                                                                    "order": 4
                                                                },
                                                                "schema": {
                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                    "examples": [
                                                                        "BH_SCHEMA"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Schema",
                                                                    "order": 5
                                                                },
                                                                "jdbc_url_params": {
                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                    "title": "JDBC URL Params",
                                                                    "type": "string",
                                                                    "order": 6
                                                                }
                                                            }
                                                        },
                                                        "advanced_auth": {
                                                            "auth_flow_type": "oauth2.0",
                                                            "predicate_key": [
                                                                "credentials",
                                                                "auth_type"
                                                            ],
                                                            "predicate_value": "OAuth",
                                                            "oauth_config_specification": {
                                                                "oauth_user_input_from_connector_config_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "host": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "host"
                                                                            ]
                                                                        },
                                                                        "role": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "role"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_output_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "access_token": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "access_token"
                                                                            ]
                                                                        },
                                                                        "refresh_token": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "refresh_token"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_server_input_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "client_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "client_secret": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_server_output_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "client_id": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "client_id"
                                                                            ]
                                                                        },
                                                                        "client_secret": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "client_secret"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "name",
                                    "source_type",
                                    "connection"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "source_type": {
                                                    "const": "File"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "file_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            },
                                            "required": [
                                                "file_name"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "source_type": {
                                                    "const": "Relational"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "table_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            },
                                            "required": [
                                                "table_name"
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "minProperties": 1
                    },
                    "targets": {
                        "type": "object",
                        "patternProperties": {
                            "^[a-zA-Z0-9_]+$": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "Schema for Target",
                                "type": "object",
                                "title": "Target",
                                "ui_properties": {
                                    "module_name": "Target",
                                    "color": "#07a260",
                                    "icon": "/assets/buildPipeline/7.svg",
                                    "ports": {
                                        "inputs": 1,
                                        "outputs": 0,
                                        "maxInputs": 1
                                    }
                                },
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Target Name",
                                        "minLength": 1
                                    },
                                    "target_type": {
                                        "type": "string",
                                        "enum": [
                                            "File",
                                            "Relational",
                                            "Iceberg"
                                        ]
                                    },
                                    "connection": {
                                        "type": "object",
                                        "ui-hint": "endpoint",
                                        "endpoint": "/connection_registry/connection_config/list/",
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "Connection",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "connection_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Local",
                                                        "GCS",
                                                        "S3",
                                                        "BigQuery",
                                                        "PostgreSQL",
                                                        "Snowflake",
                                                        "MySQL"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "connection_type"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Local"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "GCS"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bucket": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "bucket",
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "S3"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bucket": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "bucket",
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "BigQuery"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "supportsIncremental": true,
                                                        "supported_sync_modes": [
                                                            "overwrite",
                                                            "append",
                                                            "append_dedup"
                                                        ],
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "BigQuery Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "project_id",
                                                                "credentials_json"
                                                            ],
                                                            "properties": {
                                                                "project_id": {
                                                                    "type": "string",
                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                    "title": "Project ID"
                                                                },
                                                                "dataset_id": {
                                                                    "type": "string",
                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                    "title": "Default Dataset ID"
                                                                },
                                                                "credentials_json": {
                                                                    "type": "string",
                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                    "title": "Credentials JSON",
                                                                    "bh_secret": true
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "PostgreSQL"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Postgres Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "host",
                                                                "port",
                                                                "database",
                                                                "username"
                                                            ],
                                                            "properties": {
                                                                "host": {
                                                                    "title": "Host",
                                                                    "description": "Hostname of the database.",
                                                                    "type": "string",
                                                                    "order": 0,
                                                                    "group": "db"
                                                                },
                                                                "port": {
                                                                    "title": "Port",
                                                                    "description": "Port of the database.",
                                                                    "type": "integer",
                                                                    "minimum": 0,
                                                                    "maximum": 65536,
                                                                    "default": 5432,
                                                                    "examples": [
                                                                        "5432"
                                                                    ],
                                                                    "order": 1,
                                                                    "group": "db"
                                                                },
                                                                "database": {
                                                                    "title": "Database Name",
                                                                    "description": "Name of the database.",
                                                                    "type": "string",
                                                                    "order": 2,
                                                                    "group": "db"
                                                                },
                                                                "schemas": {
                                                                    "title": "Schemas",
                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "minItems": 0,
                                                                    "uniqueItems": true,
                                                                    "default": [
                                                                        "public"
                                                                    ],
                                                                    "order": 3,
                                                                    "group": "db"
                                                                },
                                                                "username": {
                                                                    "title": "Username",
                                                                    "description": "Username to access the database.",
                                                                    "type": "string",
                                                                    "order": 4,
                                                                    "group": "auth"
                                                                },
                                                                "password": {
                                                                    "title": "Password",
                                                                    "description": "Password associated with the username.",
                                                                    "type": "string",
                                                                    "bh_secret": true,
                                                                    "order": 5,
                                                                    "group": "auth",
                                                                    "always_show": true
                                                                },
                                                                "jdbc_url_params": {
                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                    "type": "string",
                                                                    "order": 6,
                                                                    "group": "advanced",
                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                },
                                                                "ssl_mode": {
                                                                    "title": "SSL Modes",
                                                                    "description": "SSL connection modes.",
                                                                    "type": "object",
                                                                    "order": 8,
                                                                    "group": "security",
                                                                    "oneOf": [
                                                                        {
                                                                            "title": "disable",
                                                                            "additionalProperties": true,
                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "disable",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "allow",
                                                                            "additionalProperties": true,
                                                                            "description": "Enables encryption only when required by the source database.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "allow",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "prefer",
                                                                            "additionalProperties": true,
                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "prefer",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "require",
                                                                            "additionalProperties": true,
                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "require",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "verify-ca",
                                                                            "additionalProperties": true,
                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                            "required": [
                                                                                "mode",
                                                                                "ca_certificate"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "verify-ca",
                                                                                    "order": 0
                                                                                },
                                                                                "ca_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "CA Certificate",
                                                                                    "description": "CA certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "Client Certificate",
                                                                                    "description": "Client certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 2,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key": {
                                                                                    "type": "string",
                                                                                    "title": "Client Key",
                                                                                    "description": "Client key",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 3,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Client key password",
                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "verify-full",
                                                                            "additionalProperties": true,
                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                            "required": [
                                                                                "mode",
                                                                                "ca_certificate"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "verify-full",
                                                                                    "order": 0
                                                                                },
                                                                                "ca_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "CA Certificate",
                                                                                    "description": "CA certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "Client Certificate",
                                                                                    "description": "Client certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 2,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key": {
                                                                                    "type": "string",
                                                                                    "title": "Client Key",
                                                                                    "description": "Client key",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 3,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Client key password",
                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "replication_method": {
                                                                    "type": "object",
                                                                    "title": "Update Method",
                                                                    "description": "Configures how data is extracted from the database.",
                                                                    "order": 9,
                                                                    "group": "advanced",
                                                                    "default": "CDC",
                                                                    "display_type": "radio",
                                                                    "oneOf": [
                                                                        {
                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                            "required": [
                                                                                "method",
                                                                                "replication_slot",
                                                                                "publication"
                                                                            ],
                                                                            "additionalProperties": true,
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "CDC",
                                                                                    "order": 1
                                                                                },
                                                                                "plugin": {
                                                                                    "type": "string",
                                                                                    "title": "Plugin",
                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                    "enum": [
                                                                                        "pgoutput"
                                                                                    ],
                                                                                    "default": "pgoutput",
                                                                                    "order": 2
                                                                                },
                                                                                "replication_slot": {
                                                                                    "type": "string",
                                                                                    "title": "Replication Slot",
                                                                                    "description": "A plugin logical replication slot.",
                                                                                    "order": 3
                                                                                },
                                                                                "publication": {
                                                                                    "type": "string",
                                                                                    "title": "Publication",
                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                    "order": 4
                                                                                },
                                                                                "initial_waiting_seconds": {
                                                                                    "type": "integer",
                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                    "default": 1200,
                                                                                    "order": 5,
                                                                                    "min": 120,
                                                                                    "max": 2400
                                                                                },
                                                                                "queue_size": {
                                                                                    "type": "integer",
                                                                                    "title": "Size of the queue (Advanced)",
                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                    "default": 10000,
                                                                                    "order": 6,
                                                                                    "min": 1000,
                                                                                    "max": 10000
                                                                                },
                                                                                "lsn_commit_behaviour": {
                                                                                    "type": "string",
                                                                                    "title": "LSN commit behaviour",
                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                    "enum": [
                                                                                        "While reading Data",
                                                                                        "After loading Data in the destination"
                                                                                    ],
                                                                                    "default": "After loading Data in the destination",
                                                                                    "order": 7
                                                                                },
                                                                                "heartbeat_action_query": {
                                                                                    "type": "string",
                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                    "default": "",
                                                                                    "order": 8
                                                                                },
                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                    "type": "string",
                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                    "enum": [
                                                                                        "Fail sync",
                                                                                        "Re-sync data"
                                                                                    ],
                                                                                    "default": "Fail sync",
                                                                                    "order": 9
                                                                                },
                                                                                "initial_load_timeout_hours": {
                                                                                    "type": "integer",
                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                    "default": 8,
                                                                                    "min": 4,
                                                                                    "max": 24,
                                                                                    "order": 10
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Detect Changes with Xmin System Column",
                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                            "required": [
                                                                                "method"
                                                                            ],
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "Xmin",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                            "required": [
                                                                                "method"
                                                                            ],
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "Standard",
                                                                                    "order": 8
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "groups": [
                                                                {
                                                                    "id": "db"
                                                                },
                                                                {
                                                                    "id": "auth"
                                                                },
                                                                {
                                                                    "id": "security",
                                                                    "title": "Security"
                                                                },
                                                                {
                                                                    "id": "advanced",
                                                                    "title": "Advanced"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Snowflake"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Snowflake Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "host",
                                                                "role",
                                                                "warehouse",
                                                                "database"
                                                            ],
                                                            "properties": {
                                                                "credentials": {
                                                                    "title": "Authorization Method",
                                                                    "type": "object",
                                                                    "oneOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "title": "OAuth2.0",
                                                                            "order": 0,
                                                                            "required": [
                                                                                "client_id",
                                                                                "client_secret",
                                                                                "auth_type"
                                                                            ],
                                                                            "bh_hidden": true,
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "OAuth",
                                                                                    "order": 0
                                                                                },
                                                                                "client_id": {
                                                                                    "type": "string",
                                                                                    "title": "Client ID",
                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                    "bh_secret": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_secret": {
                                                                                    "type": "string",
                                                                                    "title": "Client Secret",
                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                    "bh_secret": true,
                                                                                    "order": 2
                                                                                },
                                                                                "access_token": {
                                                                                    "type": "string",
                                                                                    "title": "Access Token",
                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                    "bh_secret": true,
                                                                                    "order": 3
                                                                                },
                                                                                "refresh_token": {
                                                                                    "type": "string",
                                                                                    "title": "Refresh Token",
                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Key Pair Authentication",
                                                                            "type": "object",
                                                                            "order": 1,
                                                                            "required": [
                                                                                "username",
                                                                                "private_key"
                                                                            ],
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "Key Pair Authentication",
                                                                                    "order": 0
                                                                                },
                                                                                "username": {
                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                    "examples": [
                                                                                        "BH_USER"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Username",
                                                                                    "order": 1
                                                                                },
                                                                                "private_key": {
                                                                                    "type": "string",
                                                                                    "title": "Private Key",
                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                    "multiline": true,
                                                                                    "bh_secret": true,
                                                                                    "order": 2
                                                                                },
                                                                                "private_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Passphrase",
                                                                                    "description": "Passphrase for private key",
                                                                                    "bh_secret": true,
                                                                                    "order": 3
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Username and Password",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "username",
                                                                                "password",
                                                                                "auth_type"
                                                                            ],
                                                                            "order": 2,
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "username/password",
                                                                                    "order": 0
                                                                                },
                                                                                "username": {
                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                    "examples": [
                                                                                        "BH_USER"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Username",
                                                                                    "order": 1
                                                                                },
                                                                                "password": {
                                                                                    "description": "The password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "title": "Password",
                                                                                    "order": 2
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "order": 0
                                                                },
                                                                "host": {
                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                    "examples": [
                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Account Name",
                                                                    "order": 1
                                                                },
                                                                "role": {
                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                    "examples": [
                                                                        "BH_ROLE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Role",
                                                                    "order": 2
                                                                },
                                                                "warehouse": {
                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                    "examples": [
                                                                        "BH_WAREHOUSE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Warehouse",
                                                                    "order": 3
                                                                },
                                                                "database": {
                                                                    "description": "The database you created for BigHammer to access data.",
                                                                    "examples": [
                                                                        "BH_DATABASE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Database",
                                                                    "order": 4
                                                                },
                                                                "schema": {
                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                    "examples": [
                                                                        "BH_SCHEMA"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Schema",
                                                                    "order": 5
                                                                },
                                                                "jdbc_url_params": {
                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                    "title": "JDBC URL Params",
                                                                    "type": "string",
                                                                    "order": 6
                                                                }
                                                            }
                                                        },
                                                        "advanced_auth": {
                                                            "auth_flow_type": "oauth2.0",
                                                            "predicate_key": [
                                                                "credentials",
                                                                "auth_type"
                                                            ],
                                                            "predicate_value": "OAuth",
                                                            "oauth_config_specification": {
                                                                "oauth_user_input_from_connector_config_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "host": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "host"
                                                                            ]
                                                                        },
                                                                        "role": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "role"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_output_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "access_token": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "access_token"
                                                                            ]
                                                                        },
                                                                        "refresh_token": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "refresh_token"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_server_input_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "client_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "client_secret": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_server_output_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "client_id": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "client_id"
                                                                            ]
                                                                        },
                                                                        "client_secret": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "client_secret"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "load_mode": {
                                        "type": "string",
                                        "enum": [
                                            "append",
                                            "merge",
                                            "overwrite",
                                            "ignore",
                                            "error"
                                        ],
                                        "default": "append"
                                    },
                                    "merge_keys": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "name",
                                    "target_type",
                                    "connection",
                                    "load_mode"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "load_mode": {
                                                    "const": "merge"
                                                }
                                            }
                                        },
                                        "then": {
                                            "required": [
                                                "merge_keys"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "target_type": {
                                                    "const": "File"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "file_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            },
                                            "required": [
                                                "file_name"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "target_type": {
                                                    "const": "Relational"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "table_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            },
                                            "required": [
                                                "table_name"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "target_type": {
                                                    "const": "Iceberg"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "table_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            },
                                            "required": [
                                                "table_name"
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "minProperties": 1
                    },
                    "transformations": {
                        "type": "array",
                        "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "Transformation",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "description": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "dependent_on": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "transformation": {
                                    "type": "string",
                                    "minLength": 1,
                                    "enum": [
                                        "Reader",
                                        "Filter",
                                        "Router",
                                        "Joiner",
                                        "Mapper",
                                        "Writer",
                                        "Union",
                                        "Sequence",
                                        "Aggregator",
                                        "DataQuality",
                                        "SQL",
                                        "Sorter",
                                        "Deduplicator",
                                        "Set",
                                        "Lookup",
                                        "Repartition",
                                        "Python",
                                        "Expression"
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "default": 0,
                                    "minimum": 0
                                },
                                "drop_columns": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": []
                                },
                                "input_selection": {
                                    "type": "object",
                                    "description": "Specifies which outputs from predecessor transformations to use as input",
                                    "patternProperties": {
                                        "^[a-zA-Z0-9_]+$": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "List of output names from the specified predecessor transformation"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "required": [
                                "name",
                                "transformation"
                            ],
                            "allOf": [
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Reader"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Reader",
                                            "color": "#f7a01f",
                                            "icon": "/assets/buildPipeline/6.svg",
                                            "ports": {
                                                "inputs": 0,
                                                "outputs": 1,
                                                "maxInputs": 0
                                            },
                                            "ui-hint": "custom",
                                            "component": "ReaderOptionsForm.tsx"
                                        },
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "source": {
                                                "type": "object",
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "description": "Schema for Source",
                                                "title": "Source",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Source Name",
                                                        "minLength": 1
                                                    },
                                                    "source_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "File",
                                                            "Relational"
                                                        ]
                                                    },
                                                    "connection": {
                                                        "type": "object",
                                                        "ui-hint": "endpoint",
                                                        "endpoint": "/connection_registry/connection_config/list/",
                                                        "items": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Connection",
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "connection_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Local",
                                                                        "GCS",
                                                                        "S3",
                                                                        "BigQuery",
                                                                        "PostgreSQL",
                                                                        "Snowflake",
                                                                        "MySQL"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "connection_type"
                                                            ],
                                                            "allOf": [
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Local"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "GCS"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "S3"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "BigQuery"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "supportsIncremental": true,
                                                                        "supported_sync_modes": [
                                                                            "overwrite",
                                                                            "append",
                                                                            "append_dedup"
                                                                        ],
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "BigQuery Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "project_id",
                                                                                "credentials_json"
                                                                            ],
                                                                            "properties": {
                                                                                "project_id": {
                                                                                    "type": "string",
                                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                                    "title": "Project ID"
                                                                                },
                                                                                "dataset_id": {
                                                                                    "type": "string",
                                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                                    "title": "Default Dataset ID"
                                                                                },
                                                                                "credentials_json": {
                                                                                    "type": "string",
                                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                                    "title": "Credentials JSON",
                                                                                    "bh_secret": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "PostgreSQL"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Postgres Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "port",
                                                                                "database",
                                                                                "username"
                                                                            ],
                                                                            "properties": {
                                                                                "host": {
                                                                                    "title": "Host",
                                                                                    "description": "Hostname of the database.",
                                                                                    "type": "string",
                                                                                    "order": 0,
                                                                                    "group": "db"
                                                                                },
                                                                                "port": {
                                                                                    "title": "Port",
                                                                                    "description": "Port of the database.",
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 65536,
                                                                                    "default": 5432,
                                                                                    "examples": [
                                                                                        "5432"
                                                                                    ],
                                                                                    "order": 1,
                                                                                    "group": "db"
                                                                                },
                                                                                "database": {
                                                                                    "title": "Database Name",
                                                                                    "description": "Name of the database.",
                                                                                    "type": "string",
                                                                                    "order": 2,
                                                                                    "group": "db"
                                                                                },
                                                                                "schemas": {
                                                                                    "title": "Schemas",
                                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "minItems": 0,
                                                                                    "uniqueItems": true,
                                                                                    "default": [
                                                                                        "public"
                                                                                    ],
                                                                                    "order": 3,
                                                                                    "group": "db"
                                                                                },
                                                                                "username": {
                                                                                    "title": "Username",
                                                                                    "description": "Username to access the database.",
                                                                                    "type": "string",
                                                                                    "order": 4,
                                                                                    "group": "auth"
                                                                                },
                                                                                "password": {
                                                                                    "title": "Password",
                                                                                    "description": "Password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "order": 5,
                                                                                    "group": "auth",
                                                                                    "always_show": true
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                                    "type": "string",
                                                                                    "order": 6,
                                                                                    "group": "advanced",
                                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                                },
                                                                                "ssl_mode": {
                                                                                    "title": "SSL Modes",
                                                                                    "description": "SSL connection modes.",
                                                                                    "type": "object",
                                                                                    "order": 8,
                                                                                    "group": "security",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "disable",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "disable",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "allow",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Enables encryption only when required by the source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "allow",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "prefer",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "prefer",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "require",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "require",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-ca",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-ca",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-full",
                                                                                            "additionalProperties": true,
                                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-full",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "replication_method": {
                                                                                    "type": "object",
                                                                                    "title": "Update Method",
                                                                                    "description": "Configures how data is extracted from the database.",
                                                                                    "order": 9,
                                                                                    "group": "advanced",
                                                                                    "default": "CDC",
                                                                                    "display_type": "radio",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                                            "required": [
                                                                                                "method",
                                                                                                "replication_slot",
                                                                                                "publication"
                                                                                            ],
                                                                                            "additionalProperties": true,
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "CDC",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "plugin": {
                                                                                                    "type": "string",
                                                                                                    "title": "Plugin",
                                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                                    "enum": [
                                                                                                        "pgoutput"
                                                                                                    ],
                                                                                                    "default": "pgoutput",
                                                                                                    "order": 2
                                                                                                },
                                                                                                "replication_slot": {
                                                                                                    "type": "string",
                                                                                                    "title": "Replication Slot",
                                                                                                    "description": "A plugin logical replication slot.",
                                                                                                    "order": 3
                                                                                                },
                                                                                                "publication": {
                                                                                                    "type": "string",
                                                                                                    "title": "Publication",
                                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                                    "order": 4
                                                                                                },
                                                                                                "initial_waiting_seconds": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                                    "default": 1200,
                                                                                                    "order": 5,
                                                                                                    "min": 120,
                                                                                                    "max": 2400
                                                                                                },
                                                                                                "queue_size": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Size of the queue (Advanced)",
                                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                                    "default": 10000,
                                                                                                    "order": 6,
                                                                                                    "min": 1000,
                                                                                                    "max": 10000
                                                                                                },
                                                                                                "lsn_commit_behaviour": {
                                                                                                    "type": "string",
                                                                                                    "title": "LSN commit behaviour",
                                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                                    "enum": [
                                                                                                        "While reading Data",
                                                                                                        "After loading Data in the destination"
                                                                                                    ],
                                                                                                    "default": "After loading Data in the destination",
                                                                                                    "order": 7
                                                                                                },
                                                                                                "heartbeat_action_query": {
                                                                                                    "type": "string",
                                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                                    "default": "",
                                                                                                    "order": 8
                                                                                                },
                                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                                    "type": "string",
                                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                                    "enum": [
                                                                                                        "Fail sync",
                                                                                                        "Re-sync data"
                                                                                                    ],
                                                                                                    "default": "Fail sync",
                                                                                                    "order": 9
                                                                                                },
                                                                                                "initial_load_timeout_hours": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                                    "default": 8,
                                                                                                    "min": 4,
                                                                                                    "max": 24,
                                                                                                    "order": 10
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Detect Changes with Xmin System Column",
                                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Xmin",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Standard",
                                                                                                    "order": 8
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "groups": [
                                                                                {
                                                                                    "id": "db"
                                                                                },
                                                                                {
                                                                                    "id": "auth"
                                                                                },
                                                                                {
                                                                                    "id": "security",
                                                                                    "title": "Security"
                                                                                },
                                                                                {
                                                                                    "id": "advanced",
                                                                                    "title": "Advanced"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Snowflake"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Snowflake Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "role",
                                                                                "warehouse",
                                                                                "database"
                                                                            ],
                                                                            "properties": {
                                                                                "credentials": {
                                                                                    "title": "Authorization Method",
                                                                                    "type": "object",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "type": "object",
                                                                                            "title": "OAuth2.0",
                                                                                            "order": 0,
                                                                                            "required": [
                                                                                                "client_id",
                                                                                                "client_secret",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "bh_hidden": true,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "OAuth",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "client_id": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client ID",
                                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_secret": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Secret",
                                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "access_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Access Token",
                                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                },
                                                                                                "refresh_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Refresh Token",
                                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Key Pair Authentication",
                                                                                            "type": "object",
                                                                                            "order": 1,
                                                                                            "required": [
                                                                                                "username",
                                                                                                "private_key"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Key Pair Authentication",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "private_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Private Key",
                                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                                    "multiline": true,
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "private_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Passphrase",
                                                                                                    "description": "Passphrase for private key",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Username and Password",
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "username",
                                                                                                "password",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "order": 2,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "username/password",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "password": {
                                                                                                    "description": "The password associated with the username.",
                                                                                                    "type": "string",
                                                                                                    "bh_secret": true,
                                                                                                    "title": "Password",
                                                                                                    "order": 2
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "order": 0
                                                                                },
                                                                                "host": {
                                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                                    "examples": [
                                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Account Name",
                                                                                    "order": 1
                                                                                },
                                                                                "role": {
                                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                                    "examples": [
                                                                                        "BH_ROLE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Role",
                                                                                    "order": 2
                                                                                },
                                                                                "warehouse": {
                                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_WAREHOUSE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Warehouse",
                                                                                    "order": 3
                                                                                },
                                                                                "database": {
                                                                                    "description": "The database you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_DATABASE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Database",
                                                                                    "order": 4
                                                                                },
                                                                                "schema": {
                                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                                    "examples": [
                                                                                        "BH_SCHEMA"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Schema",
                                                                                    "order": 5
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                                    "title": "JDBC URL Params",
                                                                                    "type": "string",
                                                                                    "order": 6
                                                                                }
                                                                            }
                                                                        },
                                                                        "advanced_auth": {
                                                                            "auth_flow_type": "oauth2.0",
                                                                            "predicate_key": [
                                                                                "credentials",
                                                                                "auth_type"
                                                                            ],
                                                                            "predicate_value": "OAuth",
                                                                            "oauth_config_specification": {
                                                                                "oauth_user_input_from_connector_config_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "host"
                                                                                            ]
                                                                                        },
                                                                                        "role": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "role"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "access_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "access_token"
                                                                                            ]
                                                                                        },
                                                                                        "refresh_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "refresh_token"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_input_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_id"
                                                                                            ]
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_secret"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "source_type",
                                                    "connection"
                                                ],
                                                "allOf": [
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "file_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "file_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "table_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "table_name"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "select_columns": {
                                                "type": "array",
                                                "description": "List of column names to select from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "drop_columns": {
                                                "type": "array",
                                                "description": "List of column names to drop from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "rename_columns": {
                                                "type": "object",
                                                "description": "Mapping of old column names to new column names",
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "source"
                                        ],
                                        "allOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "source": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "file_type": {
                                                            "type": "string",
                                                            "description": "File Type",
                                                            "enum": [
                                                                "CSV",
                                                                "JSON",
                                                                "Parquet",
                                                                "ORC",
                                                                "Avro",
                                                                "Excel",
                                                                "XML",
                                                                "FixedWidth"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "file_type"
                                                    ],
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "CSV"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "read_options": {
                                                                        "type": "object",
                                                                        "items": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "type": "object",
                                                                            "title": "CSV Reader Options",
                                                                            "properties": {
                                                                                "sep": {
                                                                                    "type": "string",
                                                                                    "description": "Specifies the string that should be used to separate fields.",
                                                                                    "default": ","
                                                                                },
                                                                                "encoding": {
                                                                                    "type": "string",
                                                                                    "description": "For reading, allows to forcibly set one of standard basic or extended encoding for the CSV files. For example UTF-16BE, UTF-32LE. For writing, specifies encoding (charset) of saved CSV files.",
                                                                                    "default": "UTF-8"
                                                                                },
                                                                                "quote": {
                                                                                    "type": "string",
                                                                                    "description": "Specifies the quote character. By default, it is \". If an empty string is set, it uses u0000 (null character).",
                                                                                    "default": "\""
                                                                                },
                                                                                "escape": {
                                                                                    "type": "string",
                                                                                    "description": "Sets a single character used for escaping quotes inside an already quoted value.",
                                                                                    "default": "\\"
                                                                                },
                                                                                "comment": {
                                                                                    "type": "string",
                                                                                    "description": "Sets a single character used for skipping lines beginning with this character.",
                                                                                    "default": ""
                                                                                },
                                                                                "header": {
                                                                                    "type": "boolean",
                                                                                    "description": "Uses the first line as names of columns.",
                                                                                    "default": false
                                                                                },
                                                                                "inferSchema": {
                                                                                    "type": "boolean",
                                                                                    "description": "Infers the input schema automatically from data. It requires one extra pass over the data.",
                                                                                    "default": false
                                                                                },
                                                                                "preferDate": {
                                                                                    "type": "boolean",
                                                                                    "description": "During schema inference (inferSchema), attempts to infer string columns that contain dates as Date if the values satisfy the dateFormat option or default date format. For columns that contain a mixture of dates and timestamps, try inferring them as TimestampType if timestamp format not specified, otherwise infer them as StringType.",
                                                                                    "default": true
                                                                                },
                                                                                "enforceSchema": {
                                                                                    "type": "boolean",
                                                                                    "description": "If it is set to true, the specified or inferred schema will be forcibly applied to datasource files, and headers in CSV files will be ignored. If it is set to false, only the data types of the specified or inferred schema will be enforced, and headers in CSV files will be honored.",
                                                                                    "default": true
                                                                                },
                                                                                "ignoreLeadingWhiteSpace": {
                                                                                    "type": "boolean",
                                                                                    "description": "A flag indicating whether or not leading whitespaces from values being read should be skipped.",
                                                                                    "default": false
                                                                                },
                                                                                "ignoreTrailingWhiteSpace": {
                                                                                    "type": "boolean",
                                                                                    "description": "A flag indicating whether or not trailing whitespaces from values being read should be skipped.",
                                                                                    "default": false
                                                                                },
                                                                                "nullValue": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string representation of a null value.",
                                                                                    "default": ""
                                                                                },
                                                                                "nanValue": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string representation of a non-number (NaN) value.",
                                                                                    "default": "NaN"
                                                                                },
                                                                                "positiveInf": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string representation of a positive infinity value.",
                                                                                    "default": "Inf"
                                                                                },
                                                                                "negativeInf": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string representation of a negative infinity value.",
                                                                                    "default": "-Inf"
                                                                                },
                                                                                "dateFormat": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string that indicates a date format. Custom date formats follow the formats at datetime pattern. This applies to date type.",
                                                                                    "default": "yyyy-MM-dd"
                                                                                },
                                                                                "timestampFormat": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string that indicates a timestamp format. Custom date formats follow the formats at datetime pattern. This applies to timestamp type.",
                                                                                    "default": "yyyy-MM-dd'T'HH:mm:ss[.SSS][XXX]"
                                                                                },
                                                                                "timestampNTZFormat": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string that indicates a timestamp without timezone format. Custom date formats follow the formats at Datetime Patterns. This applies to timestamp without timezone type, note that zone-offset and time-zone components are not supported when writing or reading this data type.",
                                                                                    "default": "yyyy-MM-dd'T'HH:mm:ss[.SSS]"
                                                                                },
                                                                                "enableDateTimeParsingFallback": {
                                                                                    "type": "boolean",
                                                                                    "description": "Allows falling back to the backward compatible (Spark 1.x and 2.0) behavior of parsing dates and timestamps if values do not match the set patterns.",
                                                                                    "default": null
                                                                                },
                                                                                "maxColumns": {
                                                                                    "type": "integer",
                                                                                    "description": "Defines a hard limit of how many columns a record can have.",
                                                                                    "default": 20480
                                                                                },
                                                                                "maxCharsPerColumn": {
                                                                                    "type": "integer",
                                                                                    "description": "The maximum number of characters allowed for any given value being read. By default, it is -1 meaning unlimited length",
                                                                                    "default": -1
                                                                                },
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "description": "Allows a mode for dealing with corrupt records during parsing. It supports the following case-insensitive modes. Note that Spark tries to parse only required columns in CSV under column pruning. Therefore, corrupt records can be different based on required set of fields. This behavior can be controlled by spark.sql.csv.parser.columnPruning.enabled (enabled by default).\nPERMISSIVE: when it meets a corrupted record, puts the malformed string into a field configured by columnNameOfCorruptRecord, and sets malformed fields to null. To keep corrupt records, an user can set a string type field named columnNameOfCorruptRecord in an user-defined schema. If a schema does not have the field, it drops corrupt records during parsing. A record with less/more tokens than schema is not a corrupted record to CSV. When it meets a record having fewer tokens than the length of the schema, sets null to extra fields. When the record has more tokens than the length of the schema, it drops extra tokens.\nDROPMALFORMED: ignores the whole corrupted records.\nFAILFAST: throws an exception when it meets corrupted records.",
                                                                                    "default": "PERMISSIVE",
                                                                                    "enum": [
                                                                                        "PERMISSIVE",
                                                                                        "DROPMALFORMED",
                                                                                        "FAILFAST"
                                                                                    ]
                                                                                },
                                                                                "columnNameOfCorruptRecord": {
                                                                                    "type": "string",
                                                                                    "description": "Allows renaming the new field having malformed string created by PERMISSIVE mode. This overrides spark.sql.columnNameOfCorruptRecord.",
                                                                                    "default": "_corrupt_record"
                                                                                },
                                                                                "multiLine": {
                                                                                    "type": "boolean",
                                                                                    "description": "Parse one record, which may span multiple lines, per file. CSV built-in functions ignore this option.",
                                                                                    "default": false
                                                                                },
                                                                                "charToEscapeQuoteEscaping": {
                                                                                    "type": "string",
                                                                                    "description": "Sets a single character used for escaping the escape for the quote character. The default value is escape character when escape and quote characters are different, \\0 otherwise.",
                                                                                    "default": null
                                                                                },
                                                                                "samplingRatio": {
                                                                                    "type": "number",
                                                                                    "description": "Defines fraction of rows used for schema inferring.",
                                                                                    "default": 1
                                                                                },
                                                                                "emptyValue": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string representation of an empty value.",
                                                                                    "default": ""
                                                                                },
                                                                                "locale": {
                                                                                    "type": "string",
                                                                                    "description": "Sets a locale as language tag in IETF BCP 47 format. For instance, this is used while parsing dates and timestamps.",
                                                                                    "default": "en-US"
                                                                                },
                                                                                "lineSep": {
                                                                                    "type": "string",
                                                                                    "description": "Defines the line separator that should be used for parsing/writing. Maximum length is 1 character.",
                                                                                    "default": "\n"
                                                                                },
                                                                                "unescapedQuoteHandling": {
                                                                                    "type": "string",
                                                                                    "description": "Defines how the CsvParser will handle values with unescaped quotes.\nSTOP_AT_CLOSING_QUOTE: If unescaped quotes are found in the input, accumulate the quote character and proceed parsing the value as a quoted value, until a closing quote is found.\nBACK_TO_DELIMITER: If unescaped quotes are found in the input, consider the value as an unquoted value. This will make the parser accumulate all characters of the current parsed value until the delimiter is found. If no delimiter is found in the value, the parser will continue accumulating characters from the input until a delimiter or line ending is found.\nSTOP_AT_DELIMITER: If unescaped quotes are found in the input, consider the value as an unquoted value. This will make the parser accumulate all characters until the delimiter or a line ending is found in the input.\nSKIP_VALUE: If unescaped quotes are found in the input, the content parsed for the given value will be skipped and the value set in nullValue will be produced instead.\nRAISE_ERROR: If unescaped quotes are found in the input, a TextParsingException will be thrown.",
                                                                                    "default": "STOP_AT_DELIMITER",
                                                                                    "enum": [
                                                                                        "STOP_AT_CLOSING_QUOTE",
                                                                                        "BACK_TO_DELIMITER",
                                                                                        "STOP_AT_DELIMITER",
                                                                                        "SKIP_VALUE",
                                                                                        "RAISE_ERROR"
                                                                                    ]
                                                                                },
                                                                                "timeZone": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string that indicates a time zone ID to be used to format timestamps in the JSON datasources or partition values. The following formats of timeZone are supported: Region-based zone ID: It should have the form 'area/city', such as 'America/Los_Angeles'. Zone offset: It should be in the format '(+|-)HH:mm', for example '-08:00' or '+01:00'. Also 'UTC' and 'Z' are supported as aliases of '+00:00'. Other short names like 'CST' are not recommended to use because they can be ambiguous.",
                                                                                    "default": null
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "sep",
                                                                                "encoding",
                                                                                "header",
                                                                                "inferSchema"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "required": [
                                                                    "read_options"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "source": {
                                                            "properties": {
                                                                "type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "query": {
                                                            "type": "string",
                                                            "description": "Query",
                                                            "minLength": 1
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Mapper"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_type": "tab-container",
                                        "ui_properties": {
                                            "module_name": "Mapper",
                                            "color": "#32D1A4",
                                            "icon": "/assets/buildPipeline/28.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "derived_fields": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "function_name",
                                                        "parameters"
                                                    ],
                                                    "properties": {
                                                        "function_name": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "description": "Function name to execute"
                                                        },
                                                        "parameters": {
                                                            "type": "object",
                                                            "description": "Function parameters including input_fields and output_fields",
                                                            "properties": {
                                                                "input_fields": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "List of input field names"
                                                                },
                                                                "output_fields": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "List of output field names"
                                                                }
                                                            },
                                                            "additionalProperties": true
                                                        }
                                                    }
                                                }
                                            },
                                            "select_columns": {
                                                "type": "array",
                                                "description": "List of column names to select from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "drop_columns": {
                                                "type": "array",
                                                "description": "List of column names to drop from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "rename_columns": {
                                                "type": "object",
                                                "description": "Mapping of old column names to new column names",
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        },
                                        "required": [
                                            "derived_fields"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Filter"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "Filter",
                                        "description": "",
                                        "type": "object",
                                        "ui_type": "normal",
                                        "ui_properties": {
                                            "module_name": "Filter",
                                            "color": "#f5bc2a",
                                            "icon": "/assets/buildPipeline/display/filter.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "condition": {
                                                "type": "string",
                                                "ui-hint": "expression",
                                                "minLength": 1,
                                                "ui_type": "full-width"
                                            }
                                        },
                                        "required": [
                                            "condition"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Sorter"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_type": "array-container",
                                        "ui_properties": {
                                            "module_name": "Sorter",
                                            "color": "#219fe7",
                                            "icon": "/assets/buildPipeline/squre/1.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "sort_columns": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "column": {
                                                            "type": "string",
                                                            "ui-hint": "auto-complete"
                                                        },
                                                        "order": {
                                                            "type": "string",
                                                            "enum": [
                                                                "asc",
                                                                "desc"
                                                            ],
                                                            "default": "asc"
                                                        }
                                                    },
                                                    "required": [
                                                        "column",
                                                        "order"
                                                    ]
                                                },
                                                "minItems": 1
                                            }
                                        },
                                        "required": [
                                            "sort_columns"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Joiner"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Joiner",
                                            "color": "#ff7396",
                                            "icon": "/assets/buildPipeline/display/join.svg",
                                            "ports": {
                                                "inputs": 2,
                                                "outputs": 1,
                                                "maxInputs": "unlimited"
                                            }
                                        },
                                        "properties": {
                                            "conditions": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "items": {
                                                    "properties": {
                                                        "join_input": {
                                                            "type": "string",
                                                            "ui-hint": "get-inputs-edge",
                                                            "minLength": 1,
                                                            "description": "The name of input dataframe to join"
                                                        },
                                                        "join_condition": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "ui-hint": "expression"
                                                        },
                                                        "join_type": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "enum": [
                                                                "inner",
                                                                "left",
                                                                "right",
                                                                "full",
                                                                "left_semi",
                                                                "left_anti"
                                                            ]
                                                        }
                                                    }
                                                }
                                            },
                                            "expressions": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 0,
                                                "items": {
                                                    "properties": {
                                                        "target_column": {
                                                            "type": "string",
                                                            "minLength": 0,
                                                            "ui-hint": "auto-complete"
                                                        },
                                                        "expression": {
                                                            "type": "string",
                                                            "minLength": 0,
                                                            "ui-hint": "expression"
                                                        }
                                                    }
                                                }
                                            },
                                            "advanced": {
                                                "type": "object",
                                                "properties": {
                                                    "hints": {
                                                        "type": "array",
                                                        "uniqueItems": true,
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "join_input": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "hint_type": {
                                                                    "type": "string",
                                                                    "minLength": 1,
                                                                    "enum": [
                                                                        "broadcast",
                                                                        "merge",
                                                                        "shuffle_hash",
                                                                        "shuffle_replicate_nl",
                                                                        "None"
                                                                    ]
                                                                },
                                                                "propagate_all_columns": {
                                                                    "type": "boolean",
                                                                    "default": false
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "hints"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "conditions"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Aggregator"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Aggregator",
                                            "color": "#d43faa",
                                            "icon": "/assets/buildPipeline/squre/2.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "aggregate": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "target_column": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "expression": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "ui-hint": "expression"
                                                        }
                                                    }
                                                }
                                            },
                                            "group_by": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                }
                                            },
                                            "pivot": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "pivot_column": {
                                                            "type": "string",
                                                            "ui-hint": "auto-complete",
                                                            "minLength": 1
                                                        },
                                                        "pivot_values": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "required": [
                                            "group_by",
                                            "aggregate"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Router"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "Router",
                                        "description": "",
                                        "type": "object",
                                        "ui_type": "tab-container",
                                        "properties": {
                                            "conditions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "condition": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "condition"
                                                    ]
                                                },
                                                "minItems": 1
                                            }
                                        },
                                        "required": [
                                            "conditions"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Set"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "https://json-schema.org/draft-07/schema#",
                                        "title": "Set",
                                        "description": "Schema for Set transformation",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Set",
                                            "color": "#E82948",
                                            "icon": "/assets/buildPipeline/squre/8.svg",
                                            "ports": {
                                                "inputs": 2,
                                                "outputs": 1,
                                                "maxInputs": "unlimited"
                                            }
                                        },
                                        "properties": {
                                            "operation_type": {
                                                "type": "string",
                                                "ui-hint": "select",
                                                "enum": [
                                                    "Union",
                                                    "Union All",
                                                    "Union By Name",
                                                    "Intersect",
                                                    "Intersect All",
                                                    "Except",
                                                    "Except All"
                                                ],
                                                "description": "The type of set operation to perform."
                                            },
                                            "allow_missing_columns": {
                                                "type": "boolean",
                                                "description": "Whether to allow missing columns in the input datasets. Only applicable for 'Union By Name'.",
                                                "default": false
                                            }
                                        },
                                        "required": [
                                            "operation_type"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Lookup"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "https://json-schema.org/draft-07/schema#",
                                        "description": "Schema for Lookup transformation",
                                        "type": "object",
                                        "title": "Lookup",
                                        "ui_properties": {
                                            "module_name": "Lookup",
                                            "color": "#4a6bdf",
                                            "icon": "/assets/buildPipeline/squre/3.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "lookup_type": {
                                                "type": "string",
                                                "enum": [
                                                    "Column Based",
                                                    "Literal"
                                                ],
                                                "description": "The type of lookup to perform."
                                            },
                                            "lookup_config": {
                                                "type": "object",
                                                "description": "Configuration for reading the lookup data (only for Column Based lookup).",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The name of the lookup configuration."
                                                    },
                                                    "source": {
                                                        "type": "object",
                                                        "description": "Reference to the source of the lookup data."
                                                    },
                                                    "read_options": {
                                                        "type": "object",
                                                        "description": "Options for reading the lookup data.",
                                                        "properties": {
                                                            "header": {
                                                                "type": "boolean",
                                                                "default": true,
                                                                "description": "Whether the lookup data has a header row."
                                                            }
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "source"
                                                ]
                                            },
                                            "lookup_data": {
                                                "type": "array",
                                                "description": "Literal data for lookup (only for Literal lookup).",
                                                "items": {
                                                    "type": "object",
                                                    "description": "A row of literal data."
                                                }
                                            },
                                            "lookup_conditions": {
                                                "description": "Conditions for joining the main DataFrame with the lookup DataFrame.",
                                                "oneOf": [
                                                    {
                                                        "type": "array",
                                                        "description": "Conditions for Column Based lookup.",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "column_name": {
                                                                    "type": "string",
                                                                    "description": "The column in the main DataFrame to join on."
                                                                },
                                                                "lookup_with": {
                                                                    "type": "string",
                                                                    "description": "The column in the lookup DataFrame to join with."
                                                                }
                                                            },
                                                            "required": [
                                                                "column_name",
                                                                "lookup_with"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "object",
                                                        "description": "Condition for Literal lookup.",
                                                        "properties": {
                                                            "column_name": {
                                                                "type": "string",
                                                                "description": "The column in the main DataFrame to join on."
                                                            },
                                                            "lookup_with": {
                                                                "type": "string",
                                                                "description": "The column in the literal data to join with."
                                                            }
                                                        },
                                                        "required": [
                                                            "column_name",
                                                            "lookup_with"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "lookup_columns": {
                                                "type": "array",
                                                "description": "Columns to select and rename after the lookup.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "column": {
                                                            "type": "string",
                                                            "ui-hint": "auto-complete",
                                                            "description": "The column to select."
                                                        },
                                                        "out_column_name": {
                                                            "type": "string",
                                                            "description": "The name of the output column."
                                                        }
                                                    },
                                                    "required": [
                                                        "column",
                                                        "out_column_name"
                                                    ]
                                                }
                                            },
                                            "keep": {
                                                "type": "string",
                                                "enum": [
                                                    "First",
                                                    "Last",
                                                    "All"
                                                ],
                                                "description": "Specifies which rows to keep when there are multiple matches in the lookup."
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "dependent_on",
                                            "transformation",
                                            "lookup_columns",
                                            "lookup_type",
                                            "lookup_conditions"
                                        ],
                                        "additionalProperties": false,
                                        "if": {
                                            "properties": {
                                                "lookup_type": {
                                                    "const": "Column Based"
                                                }
                                            }
                                        },
                                        "then": {
                                            "required": [
                                                "lookup_config",
                                                "lookup_conditions"
                                            ]
                                        },
                                        "else": {
                                            "required": [
                                                "lookup_data",
                                                "lookup_conditions"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Repartition"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "RepartitionTransformation",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Repartition",
                                            "color": "#32D1A4",
                                            "icon": "/assets/buildPipeline/squre/6.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "repartition_type": {
                                                "type": "string",
                                                "enum": [
                                                    "coalesce",
                                                    "repartition",
                                                    "hash_repartition",
                                                    "repartition_by_range"
                                                ]
                                            },
                                            "repartition_value": {
                                                "type": "integer",
                                                "minimum": 1
                                            },
                                            "override_partition": {
                                                "type": "string",
                                                "enum": [
                                                    "yes",
                                                    "no"
                                                ]
                                            },
                                            "repartition_expression": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "expression": {
                                                            "type": "string"
                                                        },
                                                        "sort_order": {
                                                            "type": "string",
                                                            "enum": [
                                                                "asc",
                                                                "desc"
                                                            ]
                                                        },
                                                        "order": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "expression"
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "transformation",
                                            "name",
                                            "repartition_type"
                                        ],
                                        "allOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "repartition_type": {
                                                            "enum": [
                                                                "coalesce",
                                                                "repartition"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "required": [
                                                        "repartition_value"
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "repartition_type": {
                                                            "enum": [
                                                                "hash_repartition",
                                                                "repartition_by_range"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "override_partition": {
                                                            "enum": [
                                                                "yes",
                                                                "no"
                                                            ]
                                                        }
                                                    },
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "override_partition": {
                                                                        "const": "yes"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "required": [
                                                                    "repartition_value"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Deduplicator"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Schema for Dedup transformation",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Deduplicator",
                                            "color": "#614EA7",
                                            "icon": "/assets/buildPipeline/squre/5.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "keep": {
                                                "type": "string",
                                                "minLength": 1,
                                                "enum": [
                                                    "any",
                                                    "first",
                                                    "last"
                                                ],
                                                "default": "any"
                                            },
                                            "dedup_by": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                }
                                            },
                                            "order_by": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "column": {
                                                            "type": "string",
                                                            "ui-hint": "auto-complete",
                                                            "minLength": 1
                                                        },
                                                        "order": {
                                                            "type": "string",
                                                            "enum": [
                                                                "asc",
                                                                "desc"
                                                            ],
                                                            "default": "asc"
                                                        }
                                                    },
                                                    "required": [
                                                        "column"
                                                    ],
                                                    "additionalProperties": false
                                                }
                                            }
                                        },
                                        "required": [
                                            "keep",
                                            "dedup_by"
                                        ],
                                        "allOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "keep": {
                                                            "const": "first"
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "required": [
                                                        "order_by"
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "keep": {
                                                            "const": "last"
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "required": [
                                                        "order_by"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "DataQuality"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "DataQuality",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "DataQuality",
                                            "color": "#ff6b6b",
                                            "icon": "/assets/buildPipeline/squre/10.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "transformation": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "limit": {
                                                "type": "number"
                                            },
                                            "dq_rules": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "rule_name": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "column": {
                                                            "type": "string",
                                                            "ui-hint": "auto-complete",
                                                            "minLength": 1
                                                        },
                                                        "column_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "string",
                                                                "number",
                                                                "boolean",
                                                                "timestamp",
                                                                "date"
                                                            ]
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "enum": [
                                                                "error",
                                                                "warning"
                                                            ],
                                                            "default": "warning"
                                                        }
                                                    },
                                                    "required": [
                                                        "rule_name",
                                                        "column",
                                                        "column_type"
                                                    ],
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "string"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "equals",
                                                                            "not_equals",
                                                                            "minlength",
                                                                            "maxlength",
                                                                            "lengthequals",
                                                                            "equalsignorecase",
                                                                            "matches",
                                                                            "startswith",
                                                                            "endswith",
                                                                            "beginswith",
                                                                            "contains",
                                                                            "notnull",
                                                                            "isempty",
                                                                            "belongsto",
                                                                            "lowercase",
                                                                            "uppercase"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "minlength",
                                                                                        "maxlength",
                                                                                        "lengthequals"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "number"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "equals",
                                                                                        "not_equals",
                                                                                        "equalsignorecase",
                                                                                        "matches",
                                                                                        "startswith",
                                                                                        "endswith",
                                                                                        "beginswith",
                                                                                        "contains"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "const": "belongsto"
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "minItems": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "notnull",
                                                                                        "isempty",
                                                                                        "lowercase",
                                                                                        "uppercase"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "number"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "equals",
                                                                            "not_equals",
                                                                            "greaterthan",
                                                                            "lessthan",
                                                                            "greaterthanorequals",
                                                                            "lessthanorequals",
                                                                            "notnull",
                                                                            "between"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "notnull"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "const": "between"
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "number"
                                                                                },
                                                                                "value2": {
                                                                                    "type": "number"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value",
                                                                                "value2"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "not": {
                                                                                        "enum": [
                                                                                            "notnull",
                                                                                            "between"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "number"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "boolean"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "istrue",
                                                                            "isfalse",
                                                                            "notnull"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "notnull",
                                                                                        "istrue",
                                                                                        "isfalse"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "timestamp"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "timestampequals",
                                                                            "timestampnotequals",
                                                                            "timestampbefore",
                                                                            "timestampafter",
                                                                            "timestampwithin",
                                                                            "timestampnotnull",
                                                                            "timestampisempty"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "timestampnotnull",
                                                                                        "timestampisempty"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "const": "timestampwithin"
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                },
                                                                                "value2": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value",
                                                                                "value2"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "not": {
                                                                                        "enum": [
                                                                                            "timestampnotnull",
                                                                                            "timestampisempty",
                                                                                            "timestampwithin"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "date"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "dateequals",
                                                                            "datenotequals",
                                                                            "datebefore",
                                                                            "dateafter",
                                                                            "datewithin",
                                                                            "datenotnull",
                                                                            "dateisempty"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "datenotnull",
                                                                                        "dateisempty"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "const": "datewithin"
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                },
                                                                                "value2": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value",
                                                                                "value2"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "not": {
                                                                                        "enum": [
                                                                                            "datenotnull",
                                                                                            "dateisempty",
                                                                                            "datewithin"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "transformation",
                                            "name",
                                            "dq_rules"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Sequence"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Sequence",
                                            "color": "#905aee",
                                            "icon": "/assets/buildPipeline/squre/12.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "for_column_name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "order_by": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "column": {
                                                            "type": "string",
                                                            "ui-hint": "auto-complete",
                                                            "minLength": 1
                                                        },
                                                        "order": {
                                                            "type": "string",
                                                            "enum": [
                                                                "asc",
                                                                "desc"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "column",
                                                        "order"
                                                    ]
                                                }
                                            },
                                            "start_with": {
                                                "type": "number"
                                            },
                                            "step": {
                                                "type": "number",
                                                "default": 1
                                            },
                                            "limit": {
                                                "type": "number"
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "transformation",
                                            "for_column_name",
                                            "start_with"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "SQL"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "SQL",
                                            "color": "#32D1A4",
                                            "icon": "/assets/buildPipeline/squre/7.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": "unlimited"
                                            }
                                        },
                                        "properties": {
                                            "query": {
                                                "type": "string",
                                                "ui-hint": "expression",
                                                "minLength": 1
                                            }
                                        },
                                        "required": [
                                            "query"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "DataQuality"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "DataQuality",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "DataQuality",
                                            "color": "#ff6b6b",
                                            "icon": "/assets/buildPipeline/squre/10.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "transformation": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "limit": {
                                                "type": "number"
                                            },
                                            "dq_rules": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "rule_name": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "column": {
                                                            "type": "string",
                                                            "ui-hint": "auto-complete",
                                                            "minLength": 1
                                                        },
                                                        "column_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "string",
                                                                "number",
                                                                "boolean",
                                                                "timestamp",
                                                                "date"
                                                            ]
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "enum": [
                                                                "error",
                                                                "warning"
                                                            ],
                                                            "default": "warning"
                                                        }
                                                    },
                                                    "required": [
                                                        "rule_name",
                                                        "column",
                                                        "column_type"
                                                    ],
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "string"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "equals",
                                                                            "not_equals",
                                                                            "minlength",
                                                                            "maxlength",
                                                                            "lengthequals",
                                                                            "equalsignorecase",
                                                                            "matches",
                                                                            "startswith",
                                                                            "endswith",
                                                                            "beginswith",
                                                                            "contains",
                                                                            "notnull",
                                                                            "isempty",
                                                                            "belongsto",
                                                                            "lowercase",
                                                                            "uppercase"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "minlength",
                                                                                        "maxlength",
                                                                                        "lengthequals"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "number"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "equals",
                                                                                        "not_equals",
                                                                                        "equalsignorecase",
                                                                                        "matches",
                                                                                        "startswith",
                                                                                        "endswith",
                                                                                        "beginswith",
                                                                                        "contains"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "const": "belongsto"
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "minItems": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "notnull",
                                                                                        "isempty",
                                                                                        "lowercase",
                                                                                        "uppercase"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "number"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "equals",
                                                                            "not_equals",
                                                                            "greaterthan",
                                                                            "lessthan",
                                                                            "greaterthanorequals",
                                                                            "lessthanorequals",
                                                                            "notnull",
                                                                            "between"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "notnull"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "const": "between"
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "number"
                                                                                },
                                                                                "value2": {
                                                                                    "type": "number"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value",
                                                                                "value2"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "not": {
                                                                                        "enum": [
                                                                                            "notnull",
                                                                                            "between"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "number"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "boolean"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "istrue",
                                                                            "isfalse",
                                                                            "notnull"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "notnull",
                                                                                        "istrue",
                                                                                        "isfalse"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "timestamp"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "timestampequals",
                                                                            "timestampnotequals",
                                                                            "timestampbefore",
                                                                            "timestampafter",
                                                                            "timestampwithin",
                                                                            "timestampnotnull",
                                                                            "timestampisempty"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "timestampnotnull",
                                                                                        "timestampisempty"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "const": "timestampwithin"
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                },
                                                                                "value2": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value",
                                                                                "value2"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "not": {
                                                                                        "enum": [
                                                                                            "timestampnotnull",
                                                                                            "timestampisempty",
                                                                                            "timestampwithin"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "column_type": {
                                                                        "const": "date"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "rule_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "dateequals",
                                                                            "datenotequals",
                                                                            "datebefore",
                                                                            "dateafter",
                                                                            "datewithin",
                                                                            "datenotnull",
                                                                            "dateisempty"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rule_type"
                                                                ],
                                                                "allOf": [
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "enum": [
                                                                                        "datenotnull",
                                                                                        "dateisempty"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "not": {
                                                                                "required": [
                                                                                    "value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "const": "datewithin"
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                },
                                                                                "value2": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value",
                                                                                "value2"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "if": {
                                                                            "properties": {
                                                                                "rule_type": {
                                                                                    "not": {
                                                                                        "enum": [
                                                                                            "datenotnull",
                                                                                            "dateisempty",
                                                                                            "datewithin"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "then": {
                                                                            "properties": {
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "minLength": 1
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "value"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "transformation",
                                            "name",
                                            "dq_rules"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Writer"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Target",
                                            "color": "#07a260",
                                            "icon": "/assets/buildPipeline/7.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 0,
                                                "maxInputs": 1
                                            },
                                            "ui-hint": "custom",
                                            "component": "TargetPopUp.tsx"
                                        },
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "target": {
                                                "type": "object",
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "description": "Schema for Target",
                                                "title": "Target",
                                                "ui_properties": {
                                                    "module_name": "Target",
                                                    "color": "#07a260",
                                                    "icon": "/assets/buildPipeline/7.svg",
                                                    "ports": {
                                                        "inputs": 1,
                                                        "outputs": 0,
                                                        "maxInputs": 1
                                                    }
                                                },
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Target Name",
                                                        "minLength": 1
                                                    },
                                                    "target_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "File",
                                                            "Relational",
                                                            "Iceberg"
                                                        ]
                                                    },
                                                    "connection": {
                                                        "type": "object",
                                                        "ui-hint": "endpoint",
                                                        "endpoint": "/connection_registry/connection_config/list/",
                                                        "items": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Connection",
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "connection_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Local",
                                                                        "GCS",
                                                                        "S3",
                                                                        "BigQuery",
                                                                        "PostgreSQL",
                                                                        "Snowflake",
                                                                        "MySQL"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "connection_type"
                                                            ],
                                                            "allOf": [
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Local"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "GCS"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "S3"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "BigQuery"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "supportsIncremental": true,
                                                                        "supported_sync_modes": [
                                                                            "overwrite",
                                                                            "append",
                                                                            "append_dedup"
                                                                        ],
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "BigQuery Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "project_id",
                                                                                "credentials_json"
                                                                            ],
                                                                            "properties": {
                                                                                "project_id": {
                                                                                    "type": "string",
                                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                                    "title": "Project ID"
                                                                                },
                                                                                "dataset_id": {
                                                                                    "type": "string",
                                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                                    "title": "Default Dataset ID"
                                                                                },
                                                                                "credentials_json": {
                                                                                    "type": "string",
                                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                                    "title": "Credentials JSON",
                                                                                    "bh_secret": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "PostgreSQL"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Postgres Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "port",
                                                                                "database",
                                                                                "username"
                                                                            ],
                                                                            "properties": {
                                                                                "host": {
                                                                                    "title": "Host",
                                                                                    "description": "Hostname of the database.",
                                                                                    "type": "string",
                                                                                    "order": 0,
                                                                                    "group": "db"
                                                                                },
                                                                                "port": {
                                                                                    "title": "Port",
                                                                                    "description": "Port of the database.",
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 65536,
                                                                                    "default": 5432,
                                                                                    "examples": [
                                                                                        "5432"
                                                                                    ],
                                                                                    "order": 1,
                                                                                    "group": "db"
                                                                                },
                                                                                "database": {
                                                                                    "title": "Database Name",
                                                                                    "description": "Name of the database.",
                                                                                    "type": "string",
                                                                                    "order": 2,
                                                                                    "group": "db"
                                                                                },
                                                                                "schemas": {
                                                                                    "title": "Schemas",
                                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "minItems": 0,
                                                                                    "uniqueItems": true,
                                                                                    "default": [
                                                                                        "public"
                                                                                    ],
                                                                                    "order": 3,
                                                                                    "group": "db"
                                                                                },
                                                                                "username": {
                                                                                    "title": "Username",
                                                                                    "description": "Username to access the database.",
                                                                                    "type": "string",
                                                                                    "order": 4,
                                                                                    "group": "auth"
                                                                                },
                                                                                "password": {
                                                                                    "title": "Password",
                                                                                    "description": "Password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "order": 5,
                                                                                    "group": "auth",
                                                                                    "always_show": true
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                                    "type": "string",
                                                                                    "order": 6,
                                                                                    "group": "advanced",
                                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                                },
                                                                                "ssl_mode": {
                                                                                    "title": "SSL Modes",
                                                                                    "description": "SSL connection modes.",
                                                                                    "type": "object",
                                                                                    "order": 8,
                                                                                    "group": "security",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "disable",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "disable",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "allow",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Enables encryption only when required by the source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "allow",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "prefer",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "prefer",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "require",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "require",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-ca",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-ca",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-full",
                                                                                            "additionalProperties": true,
                                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-full",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "replication_method": {
                                                                                    "type": "object",
                                                                                    "title": "Update Method",
                                                                                    "description": "Configures how data is extracted from the database.",
                                                                                    "order": 9,
                                                                                    "group": "advanced",
                                                                                    "default": "CDC",
                                                                                    "display_type": "radio",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                                            "required": [
                                                                                                "method",
                                                                                                "replication_slot",
                                                                                                "publication"
                                                                                            ],
                                                                                            "additionalProperties": true,
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "CDC",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "plugin": {
                                                                                                    "type": "string",
                                                                                                    "title": "Plugin",
                                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                                    "enum": [
                                                                                                        "pgoutput"
                                                                                                    ],
                                                                                                    "default": "pgoutput",
                                                                                                    "order": 2
                                                                                                },
                                                                                                "replication_slot": {
                                                                                                    "type": "string",
                                                                                                    "title": "Replication Slot",
                                                                                                    "description": "A plugin logical replication slot.",
                                                                                                    "order": 3
                                                                                                },
                                                                                                "publication": {
                                                                                                    "type": "string",
                                                                                                    "title": "Publication",
                                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                                    "order": 4
                                                                                                },
                                                                                                "initial_waiting_seconds": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                                    "default": 1200,
                                                                                                    "order": 5,
                                                                                                    "min": 120,
                                                                                                    "max": 2400
                                                                                                },
                                                                                                "queue_size": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Size of the queue (Advanced)",
                                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                                    "default": 10000,
                                                                                                    "order": 6,
                                                                                                    "min": 1000,
                                                                                                    "max": 10000
                                                                                                },
                                                                                                "lsn_commit_behaviour": {
                                                                                                    "type": "string",
                                                                                                    "title": "LSN commit behaviour",
                                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                                    "enum": [
                                                                                                        "While reading Data",
                                                                                                        "After loading Data in the destination"
                                                                                                    ],
                                                                                                    "default": "After loading Data in the destination",
                                                                                                    "order": 7
                                                                                                },
                                                                                                "heartbeat_action_query": {
                                                                                                    "type": "string",
                                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                                    "default": "",
                                                                                                    "order": 8
                                                                                                },
                                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                                    "type": "string",
                                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                                    "enum": [
                                                                                                        "Fail sync",
                                                                                                        "Re-sync data"
                                                                                                    ],
                                                                                                    "default": "Fail sync",
                                                                                                    "order": 9
                                                                                                },
                                                                                                "initial_load_timeout_hours": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                                    "default": 8,
                                                                                                    "min": 4,
                                                                                                    "max": 24,
                                                                                                    "order": 10
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Detect Changes with Xmin System Column",
                                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Xmin",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Standard",
                                                                                                    "order": 8
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "groups": [
                                                                                {
                                                                                    "id": "db"
                                                                                },
                                                                                {
                                                                                    "id": "auth"
                                                                                },
                                                                                {
                                                                                    "id": "security",
                                                                                    "title": "Security"
                                                                                },
                                                                                {
                                                                                    "id": "advanced",
                                                                                    "title": "Advanced"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Snowflake"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Snowflake Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "role",
                                                                                "warehouse",
                                                                                "database"
                                                                            ],
                                                                            "properties": {
                                                                                "credentials": {
                                                                                    "title": "Authorization Method",
                                                                                    "type": "object",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "type": "object",
                                                                                            "title": "OAuth2.0",
                                                                                            "order": 0,
                                                                                            "required": [
                                                                                                "client_id",
                                                                                                "client_secret",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "bh_hidden": true,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "OAuth",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "client_id": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client ID",
                                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_secret": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Secret",
                                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "access_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Access Token",
                                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                },
                                                                                                "refresh_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Refresh Token",
                                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Key Pair Authentication",
                                                                                            "type": "object",
                                                                                            "order": 1,
                                                                                            "required": [
                                                                                                "username",
                                                                                                "private_key"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Key Pair Authentication",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "private_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Private Key",
                                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                                    "multiline": true,
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "private_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Passphrase",
                                                                                                    "description": "Passphrase for private key",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Username and Password",
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "username",
                                                                                                "password",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "order": 2,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "username/password",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "password": {
                                                                                                    "description": "The password associated with the username.",
                                                                                                    "type": "string",
                                                                                                    "bh_secret": true,
                                                                                                    "title": "Password",
                                                                                                    "order": 2
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "order": 0
                                                                                },
                                                                                "host": {
                                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                                    "examples": [
                                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Account Name",
                                                                                    "order": 1
                                                                                },
                                                                                "role": {
                                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                                    "examples": [
                                                                                        "BH_ROLE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Role",
                                                                                    "order": 2
                                                                                },
                                                                                "warehouse": {
                                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_WAREHOUSE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Warehouse",
                                                                                    "order": 3
                                                                                },
                                                                                "database": {
                                                                                    "description": "The database you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_DATABASE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Database",
                                                                                    "order": 4
                                                                                },
                                                                                "schema": {
                                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                                    "examples": [
                                                                                        "BH_SCHEMA"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Schema",
                                                                                    "order": 5
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                                    "title": "JDBC URL Params",
                                                                                    "type": "string",
                                                                                    "order": 6
                                                                                }
                                                                            }
                                                                        },
                                                                        "advanced_auth": {
                                                                            "auth_flow_type": "oauth2.0",
                                                                            "predicate_key": [
                                                                                "credentials",
                                                                                "auth_type"
                                                                            ],
                                                                            "predicate_value": "OAuth",
                                                                            "oauth_config_specification": {
                                                                                "oauth_user_input_from_connector_config_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "host"
                                                                                            ]
                                                                                        },
                                                                                        "role": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "role"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "access_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "access_token"
                                                                                            ]
                                                                                        },
                                                                                        "refresh_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "refresh_token"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_input_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_id"
                                                                                            ]
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_secret"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "load_mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "append",
                                                            "merge",
                                                            "overwrite",
                                                            "ignore",
                                                            "error"
                                                        ],
                                                        "default": "append"
                                                    },
                                                    "merge_keys": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "target_type",
                                                    "connection",
                                                    "load_mode"
                                                ],
                                                "allOf": [
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "load_mode": {
                                                                    "const": "merge"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "required": [
                                                                "merge_keys"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "file_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "file_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "table_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "table_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "Iceberg"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "table_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "table_name"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "target"
                                        ],
                                        "allOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "target": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "file_type": {
                                                            "type": "string",
                                                            "description": "File Type",
                                                            "enum": [
                                                                "CSV",
                                                                "JSON",
                                                                "Parquet",
                                                                "ORC",
                                                                "Avro",
                                                                "Excel",
                                                                "XML",
                                                                "FixedWidth"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "file_type"
                                                    ],
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "CSV"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "write_options": {
                                                                        "type": "object",
                                                                        "items": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "type": "object",
                                                                            "title": "CSV Writer Options",
                                                                            "properties": {
                                                                                "sep": {
                                                                                    "type": "string",
                                                                                    "description": "Specifies the string that should be used to separate fields.",
                                                                                    "default": ","
                                                                                },
                                                                                "encoding": {
                                                                                    "type": "string",
                                                                                    "description": "For reading, allows to forcibly set one of standard basic or extended encoding for the CSV files. For example UTF-16BE, UTF-32LE. For writing, specifies encoding (charset) of saved CSV files.",
                                                                                    "default": "UTF-8"
                                                                                },
                                                                                "quote": {
                                                                                    "type": "string",
                                                                                    "description": "Specifies the quote character. By default, it is \". If an empty string is set, it uses u0000 (null character).",
                                                                                    "default": "\""
                                                                                },
                                                                                "quoteAll": {
                                                                                    "type": "boolean",
                                                                                    "description": "A flag indicating whether all values should always be enclosed in quotes. Default is to only escape values containing a quote character.",
                                                                                    "default": false
                                                                                },
                                                                                "escape": {
                                                                                    "type": "string",
                                                                                    "description": "Sets a single character used for escaping quotes inside an already quoted value.",
                                                                                    "default": "\\"
                                                                                },
                                                                                "escapeQuotes": {
                                                                                    "type": "boolean",
                                                                                    "description": "A flag indicating whether values containing quotes should always be enclosed in quotes. Default is to escape all values containing a quote character.",
                                                                                    "default": true
                                                                                },
                                                                                "header": {
                                                                                    "type": "boolean",
                                                                                    "description": "Uses the first line as names of columns.",
                                                                                    "default": false
                                                                                },
                                                                                "nullValue": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string representation of a null value.",
                                                                                    "default": ""
                                                                                },
                                                                                "dateFormat": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string that indicates a date format. Custom date formats follow the formats at datetime pattern. This applies to date type.",
                                                                                    "default": "yyyy-MM-dd"
                                                                                },
                                                                                "timestampFormat": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string that indicates a timestamp format. Custom date formats follow the formats at datetime pattern. This applies to timestamp type.",
                                                                                    "default": "yyyy-MM-dd'T'HH:mm:ss[.SSS][XXX]"
                                                                                },
                                                                                "timestampNTZFormat": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string that indicates a timestamp without timezone format. Custom date formats follow the formats at Datetime Patterns. This applies to timestamp without timezone type, note that zone-offset and time-zone components are not supported when writing or reading this data type.",
                                                                                    "default": "yyyy-MM-dd'T'HH:mm:ss[.SSS]"
                                                                                },
                                                                                "ignoreLeadingWhiteSpace": {
                                                                                    "type": "boolean",
                                                                                    "description": "A flag indicating whether or not leading whitespaces from values being read should be skipped.",
                                                                                    "default": false
                                                                                },
                                                                                "ignoreTrailingWhiteSpace": {
                                                                                    "type": "boolean",
                                                                                    "description": "A flag indicating whether or not trailing whitespaces from values being read should be skipped.",
                                                                                    "default": false
                                                                                },
                                                                                "emptyValue": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string representation of an empty value.",
                                                                                    "default": ""
                                                                                },
                                                                                "lineSep": {
                                                                                    "type": "string",
                                                                                    "description": "Defines the line separator that should be used for parsing/writing. Maximum length is 1 character.",
                                                                                    "default": "\n"
                                                                                },
                                                                                "compression": {
                                                                                    "type": "string",
                                                                                    "description": "Compression codec to use when saving to file. This can be one of the known case-insensitive shorten names (none, bzip2, gzip, lz4, snappy and deflate).",
                                                                                    "default": "none",
                                                                                    "enum": [
                                                                                        "none",
                                                                                        "bzip2",
                                                                                        "gzip",
                                                                                        "lz4",
                                                                                        "snappy",
                                                                                        "deflate"
                                                                                    ]
                                                                                },
                                                                                "compression.codec": {
                                                                                    "type": "string",
                                                                                    "description": "Compression codec to use when saving to file. This can be one of the known case-insensitive shorten names (none, bzip2, gzip, lz4, snappy and deflate).",
                                                                                    "default": "none",
                                                                                    "enum": [
                                                                                        "none",
                                                                                        "bzip2",
                                                                                        "gzip",
                                                                                        "lz4",
                                                                                        "snappy",
                                                                                        "deflate"
                                                                                    ]
                                                                                },
                                                                                "timeZone": {
                                                                                    "type": "string",
                                                                                    "description": "Sets the string that indicates a time zone ID to be used to format timestamps in the JSON datasources or partition values. The following formats of timeZone are supported: Region-based zone ID: It should have the form 'area/city', such as 'America/Los_Angeles'. Zone offset: It should be in the format '(+|-)HH:mm', for example '-08:00' or '+01:00'. Also 'UTC' and 'Z' are supported as aliases of '+00:00'. Other short names like 'CST' are not recommended to use because they can be ambiguous.",
                                                                                    "default": null
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "sep",
                                                                                "encoding",
                                                                                "header"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "required": [
                                                                    "write_options"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Python"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "Python",
                                        "description": "Schema for Python transformation",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Python",
                                            "color": "#614EA7",
                                            "icon": "/assets/buildPipeline/squre/4.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": "unlimited"
                                            }
                                        },
                                        "properties": {
                                            "user_code": {
                                                "type": "string",
                                                "ui-hint": "python_editor",
                                                "minLength": 1,
                                                "description": "The Python code to execute for the custom transformation."
                                            }
                                        },
                                        "required": [
                                            "user_code"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Expression"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_type": "tab-container",
                                        "ui_properties": {
                                            "module_name": "Expression",
                                            "color": "#32D1A4",
                                            "icon": "/assets/buildPipeline/28.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "derived_fields": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "items": {
                                                    "required": [
                                                        "name",
                                                        "expression"
                                                    ],
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "expression": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "ui-hint": "expression"
                                                        }
                                                    }
                                                }
                                            },
                                            "select_columns": {
                                                "type": "array",
                                                "description": "List of column names to select from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "drop_columns": {
                                                "type": "array",
                                                "description": "List of column names to drop from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "rename_columns": {
                                                "type": "object",
                                                "description": "Mapping of old column names to new column names",
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        },
                                        "required": [
                                            "derived_fields"
                                        ]
                                    }
                                }
                            ]
                        },
                        "minItems": 1
                    }
                }
            }
        },
        {
            "if": {
                "properties": {
                    "engine_type": {
                        "const": "pyflink"
                    }
                }
            },
            "then": {
                "properties": {
                    "connections": {
                        "type": "object",
                        "patternProperties": {
                            "^[a-zA-Z0-9_]+$": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "Connection",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "connection_type": {
                                        "type": "string",
                                        "enum": [
                                            "Local",
                                            "GCS",
                                            "S3",
                                            "BigQuery",
                                            "PostgreSQL",
                                            "Snowflake",
                                            "Kafka",
                                            "Iceberg"
                                        ]
                                    }
                                },
                                "required": [
                                    "name",
                                    "connection_type"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "Local"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "file_path_prefix": {
                                                    "type": "string",
                                                    "default": ""
                                                }
                                            },
                                            "required": [
                                                "file_path_prefix"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "GCS"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "bucket": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "file_path_prefix": {
                                                    "type": "string",
                                                    "default": ""
                                                }
                                            },
                                            "required": [
                                                "bucket",
                                                "file_path_prefix"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "S3"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "bucket": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "file_path_prefix": {
                                                    "type": "string",
                                                    "default": ""
                                                }
                                            },
                                            "required": [
                                                "bucket",
                                                "file_path_prefix"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "Kafka"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "bootstrap_servers": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "topic": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "group_id": {
                                                    "type": "string",
                                                    "default": "pyflink-consumer-group"
                                                },
                                                "auto_offset_reset": {
                                                    "type": "string",
                                                    "enum": [
                                                        "earliest",
                                                        "latest"
                                                    ],
                                                    "default": "earliest"
                                                }
                                            },
                                            "required": [
                                                "bootstrap_servers",
                                                "topic"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "BigQuery"
                                                }
                                            }
                                        },
                                        "then": {
                                            "documentationUrl": "N/A",
                                            "supportsIncremental": true,
                                            "supported_sync_modes": [
                                                "overwrite",
                                                "append",
                                                "append_dedup"
                                            ],
                                            "connectionSpecification": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "BigQuery Source Spec",
                                                "type": "object",
                                                "required": [
                                                    "project_id",
                                                    "credentials_json"
                                                ],
                                                "properties": {
                                                    "project_id": {
                                                        "type": "string",
                                                        "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                        "title": "Project ID"
                                                    },
                                                    "dataset_id": {
                                                        "type": "string",
                                                        "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                        "title": "Default Dataset ID"
                                                    },
                                                    "credentials_json": {
                                                        "type": "string",
                                                        "description": "The contents of your Service Account Key JSON file.",
                                                        "title": "Credentials JSON",
                                                        "bh_secret": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "PostgreSQL"
                                                }
                                            }
                                        },
                                        "then": {
                                            "documentationUrl": "N/A",
                                            "connectionSpecification": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "Postgres Source Spec",
                                                "type": "object",
                                                "required": [
                                                    "host",
                                                    "port",
                                                    "database",
                                                    "username"
                                                ],
                                                "properties": {
                                                    "host": {
                                                        "title": "Host",
                                                        "description": "Hostname of the database.",
                                                        "type": "string",
                                                        "order": 0,
                                                        "group": "db"
                                                    },
                                                    "port": {
                                                        "title": "Port",
                                                        "description": "Port of the database.",
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "maximum": 65536,
                                                        "default": 5432,
                                                        "examples": [
                                                            "5432"
                                                        ],
                                                        "order": 1,
                                                        "group": "db"
                                                    },
                                                    "database": {
                                                        "title": "Database Name",
                                                        "description": "Name of the database.",
                                                        "type": "string",
                                                        "order": 2,
                                                        "group": "db"
                                                    },
                                                    "schemas": {
                                                        "title": "Schemas",
                                                        "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 0,
                                                        "uniqueItems": true,
                                                        "default": [
                                                            "public"
                                                        ],
                                                        "order": 3,
                                                        "group": "db"
                                                    },
                                                    "username": {
                                                        "title": "Username",
                                                        "description": "Username to access the database.",
                                                        "type": "string",
                                                        "order": 4,
                                                        "group": "auth"
                                                    },
                                                    "password": {
                                                        "title": "Password",
                                                        "description": "Password associated with the username.",
                                                        "type": "string",
                                                        "bh_secret": true,
                                                        "order": 5,
                                                        "group": "auth",
                                                        "always_show": true
                                                    },
                                                    "jdbc_url_params": {
                                                        "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                        "title": "JDBC URL Parameters (Advanced)",
                                                        "type": "string",
                                                        "order": 6,
                                                        "group": "advanced",
                                                        "pattern_descriptor": "key1=value1&key2=value2"
                                                    },
                                                    "ssl_mode": {
                                                        "title": "SSL Modes",
                                                        "description": "SSL connection modes.",
                                                        "type": "object",
                                                        "order": 8,
                                                        "group": "security",
                                                        "oneOf": [
                                                            {
                                                                "title": "disable",
                                                                "additionalProperties": true,
                                                                "description": "Disables encryption of communication between BigHammer and source database.",
                                                                "required": [
                                                                    "mode"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "disable",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "allow",
                                                                "additionalProperties": true,
                                                                "description": "Enables encryption only when required by the source database.",
                                                                "required": [
                                                                    "mode"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "allow",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "prefer",
                                                                "additionalProperties": true,
                                                                "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                "required": [
                                                                    "mode"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "prefer",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "require",
                                                                "additionalProperties": true,
                                                                "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                "required": [
                                                                    "mode"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "require",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "verify-ca",
                                                                "additionalProperties": true,
                                                                "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                "required": [
                                                                    "mode",
                                                                    "ca_certificate"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "verify-ca",
                                                                        "order": 0
                                                                    },
                                                                    "ca_certificate": {
                                                                        "type": "string",
                                                                        "title": "CA Certificate",
                                                                        "description": "CA certificate",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 1
                                                                    },
                                                                    "client_certificate": {
                                                                        "type": "string",
                                                                        "title": "Client Certificate",
                                                                        "description": "Client certificate",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 2,
                                                                        "always_show": true
                                                                    },
                                                                    "client_key": {
                                                                        "type": "string",
                                                                        "title": "Client Key",
                                                                        "description": "Client key",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 3,
                                                                        "always_show": true
                                                                    },
                                                                    "client_key_password": {
                                                                        "type": "string",
                                                                        "title": "Client key password",
                                                                        "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                        "bh_secret": true,
                                                                        "order": 4
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "verify-full",
                                                                "additionalProperties": true,
                                                                "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                "required": [
                                                                    "mode",
                                                                    "ca_certificate"
                                                                ],
                                                                "properties": {
                                                                    "mode": {
                                                                        "type": "string",
                                                                        "const": "verify-full",
                                                                        "order": 0
                                                                    },
                                                                    "ca_certificate": {
                                                                        "type": "string",
                                                                        "title": "CA Certificate",
                                                                        "description": "CA certificate",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 1
                                                                    },
                                                                    "client_certificate": {
                                                                        "type": "string",
                                                                        "title": "Client Certificate",
                                                                        "description": "Client certificate",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 2,
                                                                        "always_show": true
                                                                    },
                                                                    "client_key": {
                                                                        "type": "string",
                                                                        "title": "Client Key",
                                                                        "description": "Client key",
                                                                        "bh_secret": true,
                                                                        "multiline": true,
                                                                        "order": 3,
                                                                        "always_show": true
                                                                    },
                                                                    "client_key_password": {
                                                                        "type": "string",
                                                                        "title": "Client key password",
                                                                        "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                        "bh_secret": true,
                                                                        "order": 4
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "replication_method": {
                                                        "type": "object",
                                                        "title": "Update Method",
                                                        "description": "Configures how data is extracted from the database.",
                                                        "order": 9,
                                                        "group": "advanced",
                                                        "default": "CDC",
                                                        "display_type": "radio",
                                                        "oneOf": [
                                                            {
                                                                "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                "required": [
                                                                    "method",
                                                                    "replication_slot",
                                                                    "publication"
                                                                ],
                                                                "additionalProperties": true,
                                                                "properties": {
                                                                    "method": {
                                                                        "type": "string",
                                                                        "const": "CDC",
                                                                        "order": 1
                                                                    },
                                                                    "plugin": {
                                                                        "type": "string",
                                                                        "title": "Plugin",
                                                                        "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                        "enum": [
                                                                            "pgoutput"
                                                                        ],
                                                                        "default": "pgoutput",
                                                                        "order": 2
                                                                    },
                                                                    "replication_slot": {
                                                                        "type": "string",
                                                                        "title": "Replication Slot",
                                                                        "description": "A plugin logical replication slot.",
                                                                        "order": 3
                                                                    },
                                                                    "publication": {
                                                                        "type": "string",
                                                                        "title": "Publication",
                                                                        "description": "A Postgres publication used for consuming changes.",
                                                                        "order": 4
                                                                    },
                                                                    "initial_waiting_seconds": {
                                                                        "type": "integer",
                                                                        "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                        "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                        "default": 1200,
                                                                        "order": 5,
                                                                        "min": 120,
                                                                        "max": 2400
                                                                    },
                                                                    "queue_size": {
                                                                        "type": "integer",
                                                                        "title": "Size of the queue (Advanced)",
                                                                        "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                        "default": 10000,
                                                                        "order": 6,
                                                                        "min": 1000,
                                                                        "max": 10000
                                                                    },
                                                                    "lsn_commit_behaviour": {
                                                                        "type": "string",
                                                                        "title": "LSN commit behaviour",
                                                                        "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                        "enum": [
                                                                            "While reading Data",
                                                                            "After loading Data in the destination"
                                                                        ],
                                                                        "default": "After loading Data in the destination",
                                                                        "order": 7
                                                                    },
                                                                    "heartbeat_action_query": {
                                                                        "type": "string",
                                                                        "title": "Debezium heartbeat query (Advanced)",
                                                                        "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                        "default": "",
                                                                        "order": 8
                                                                    },
                                                                    "invalid_cdc_cursor_position_behavior": {
                                                                        "type": "string",
                                                                        "title": "Invalid CDC position behavior (Advanced)",
                                                                        "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                        "enum": [
                                                                            "Fail sync",
                                                                            "Re-sync data"
                                                                        ],
                                                                        "default": "Fail sync",
                                                                        "order": 9
                                                                    },
                                                                    "initial_load_timeout_hours": {
                                                                        "type": "integer",
                                                                        "title": "Initial Load Timeout in Hours (Advanced)",
                                                                        "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                        "default": 8,
                                                                        "min": 4,
                                                                        "max": 24,
                                                                        "order": 10
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "Detect Changes with Xmin System Column",
                                                                "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                "required": [
                                                                    "method"
                                                                ],
                                                                "properties": {
                                                                    "method": {
                                                                        "type": "string",
                                                                        "const": "Xmin",
                                                                        "order": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "Scan Changes with User Defined Cursor",
                                                                "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                "required": [
                                                                    "method"
                                                                ],
                                                                "properties": {
                                                                    "method": {
                                                                        "type": "string",
                                                                        "const": "Standard",
                                                                        "order": 8
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                "groups": [
                                                    {
                                                        "id": "db"
                                                    },
                                                    {
                                                        "id": "auth"
                                                    },
                                                    {
                                                        "id": "security",
                                                        "title": "Security"
                                                    },
                                                    {
                                                        "id": "advanced",
                                                        "title": "Advanced"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "Snowflake"
                                                }
                                            }
                                        },
                                        "then": {
                                            "documentationUrl": "N/A",
                                            "connectionSpecification": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "Snowflake Source Spec",
                                                "type": "object",
                                                "required": [
                                                    "host",
                                                    "role",
                                                    "warehouse",
                                                    "database"
                                                ],
                                                "properties": {
                                                    "credentials": {
                                                        "title": "Authorization Method",
                                                        "type": "object",
                                                        "oneOf": [
                                                            {
                                                                "type": "object",
                                                                "title": "OAuth2.0",
                                                                "order": 0,
                                                                "required": [
                                                                    "client_id",
                                                                    "client_secret",
                                                                    "auth_type"
                                                                ],
                                                                "bh_hidden": true,
                                                                "properties": {
                                                                    "auth_type": {
                                                                        "type": "string",
                                                                        "const": "OAuth",
                                                                        "order": 0
                                                                    },
                                                                    "client_id": {
                                                                        "type": "string",
                                                                        "title": "Client ID",
                                                                        "description": "The Client ID of your Snowflake developer application.",
                                                                        "bh_secret": true,
                                                                        "order": 1
                                                                    },
                                                                    "client_secret": {
                                                                        "type": "string",
                                                                        "title": "Client Secret",
                                                                        "description": "The Client Secret of your Snowflake developer application.",
                                                                        "bh_secret": true,
                                                                        "order": 2
                                                                    },
                                                                    "access_token": {
                                                                        "type": "string",
                                                                        "title": "Access Token",
                                                                        "description": "Access Token for making authenticated requests.",
                                                                        "bh_secret": true,
                                                                        "order": 3
                                                                    },
                                                                    "refresh_token": {
                                                                        "type": "string",
                                                                        "title": "Refresh Token",
                                                                        "description": "Refresh Token for making authenticated requests.",
                                                                        "bh_secret": true,
                                                                        "order": 4
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "Key Pair Authentication",
                                                                "type": "object",
                                                                "order": 1,
                                                                "required": [
                                                                    "username",
                                                                    "private_key"
                                                                ],
                                                                "properties": {
                                                                    "auth_type": {
                                                                        "type": "string",
                                                                        "const": "Key Pair Authentication",
                                                                        "order": 0
                                                                    },
                                                                    "username": {
                                                                        "description": "The username you created to allow BigHammer to access the database.",
                                                                        "examples": [
                                                                            "BH_USER"
                                                                        ],
                                                                        "type": "string",
                                                                        "title": "Username",
                                                                        "order": 1
                                                                    },
                                                                    "private_key": {
                                                                        "type": "string",
                                                                        "title": "Private Key",
                                                                        "description": "RSA Private key to use for Snowflake connection.",
                                                                        "multiline": true,
                                                                        "bh_secret": true,
                                                                        "order": 2
                                                                    },
                                                                    "private_key_password": {
                                                                        "type": "string",
                                                                        "title": "Passphrase",
                                                                        "description": "Passphrase for private key",
                                                                        "bh_secret": true,
                                                                        "order": 3
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "Username and Password",
                                                                "type": "object",
                                                                "required": [
                                                                    "username",
                                                                    "password",
                                                                    "auth_type"
                                                                ],
                                                                "order": 2,
                                                                "properties": {
                                                                    "auth_type": {
                                                                        "type": "string",
                                                                        "const": "username/password",
                                                                        "order": 0
                                                                    },
                                                                    "username": {
                                                                        "description": "The username you created to allow BigHammer to access the database.",
                                                                        "examples": [
                                                                            "BH_USER"
                                                                        ],
                                                                        "type": "string",
                                                                        "title": "Username",
                                                                        "order": 1
                                                                    },
                                                                    "password": {
                                                                        "description": "The password associated with the username.",
                                                                        "type": "string",
                                                                        "bh_secret": true,
                                                                        "title": "Password",
                                                                        "order": 2
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "order": 0
                                                    },
                                                    "host": {
                                                        "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                        "examples": [
                                                            "accountname.us-east-2.aws.snowflakecomputing.com"
                                                        ],
                                                        "type": "string",
                                                        "title": "Account Name",
                                                        "order": 1
                                                    },
                                                    "role": {
                                                        "description": "The role you created for BigHammer to access Snowflake.",
                                                        "examples": [
                                                            "BH_ROLE"
                                                        ],
                                                        "type": "string",
                                                        "title": "Role",
                                                        "order": 2
                                                    },
                                                    "warehouse": {
                                                        "description": "The warehouse you created for BigHammer to access data.",
                                                        "examples": [
                                                            "BH_WAREHOUSE"
                                                        ],
                                                        "type": "string",
                                                        "title": "Warehouse",
                                                        "order": 3
                                                    },
                                                    "database": {
                                                        "description": "The database you created for BigHammer to access data.",
                                                        "examples": [
                                                            "BH_DATABASE"
                                                        ],
                                                        "type": "string",
                                                        "title": "Database",
                                                        "order": 4
                                                    },
                                                    "schema": {
                                                        "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                        "examples": [
                                                            "BH_SCHEMA"
                                                        ],
                                                        "type": "string",
                                                        "title": "Schema",
                                                        "order": 5
                                                    },
                                                    "jdbc_url_params": {
                                                        "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                        "title": "JDBC URL Params",
                                                        "type": "string",
                                                        "order": 6
                                                    }
                                                }
                                            },
                                            "advanced_auth": {
                                                "auth_flow_type": "oauth2.0",
                                                "predicate_key": [
                                                    "credentials",
                                                    "auth_type"
                                                ],
                                                "predicate_value": "OAuth",
                                                "oauth_config_specification": {
                                                    "oauth_user_input_from_connector_config_specification": {
                                                        "type": "object",
                                                        "properties": {
                                                            "host": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "host"
                                                                ]
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "role"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "complete_oauth_output_specification": {
                                                        "type": "object",
                                                        "properties": {
                                                            "access_token": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "credentials",
                                                                    "access_token"
                                                                ]
                                                            },
                                                            "refresh_token": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "credentials",
                                                                    "refresh_token"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "complete_oauth_server_input_specification": {
                                                        "type": "object",
                                                        "properties": {
                                                            "client_id": {
                                                                "type": "string"
                                                            },
                                                            "client_secret": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "complete_oauth_server_output_specification": {
                                                        "type": "object",
                                                        "properties": {
                                                            "client_id": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "credentials",
                                                                    "client_id"
                                                                ]
                                                            },
                                                            "client_secret": {
                                                                "type": "string",
                                                                "path_in_connector_config": [
                                                                    "credentials",
                                                                    "client_secret"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "connection_type": {
                                                    "const": "Iceberg"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "warehouse_path": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "catalog_name": {
                                                    "type": "string",
                                                    "default": "iceberg"
                                                },
                                                "namespace": {
                                                    "type": "string",
                                                    "default": "default"
                                                }
                                            },
                                            "required": [
                                                "warehouse_path"
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "minProperties": 1
                    },
                    "sources": {
                        "type": "object",
                        "patternProperties": {
                            "^[a-zA-Z0-9_]+$": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "Schema for PyFlink Source",
                                "type": "object",
                                "title": "Source",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Source Name",
                                        "minLength": 1
                                    },
                                    "source_type": {
                                        "type": "string",
                                        "enum": [
                                            "File",
                                            "Relational",
                                            "Kafka"
                                        ]
                                    },
                                    "connection": {
                                        "type": "object",
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "Connection",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "connection_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Local",
                                                        "GCS",
                                                        "S3",
                                                        "BigQuery",
                                                        "PostgreSQL",
                                                        "Snowflake",
                                                        "Kafka",
                                                        "Iceberg"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "connection_type"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Local"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "GCS"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bucket": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "bucket",
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "S3"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bucket": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "bucket",
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Kafka"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bootstrap_servers": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "topic": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "group_id": {
                                                                "type": "string",
                                                                "default": "pyflink-consumer-group"
                                                            },
                                                            "auto_offset_reset": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "earliest",
                                                                    "latest"
                                                                ],
                                                                "default": "earliest"
                                                            }
                                                        },
                                                        "required": [
                                                            "bootstrap_servers",
                                                            "topic"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "BigQuery"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "supportsIncremental": true,
                                                        "supported_sync_modes": [
                                                            "overwrite",
                                                            "append",
                                                            "append_dedup"
                                                        ],
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "BigQuery Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "project_id",
                                                                "credentials_json"
                                                            ],
                                                            "properties": {
                                                                "project_id": {
                                                                    "type": "string",
                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                    "title": "Project ID"
                                                                },
                                                                "dataset_id": {
                                                                    "type": "string",
                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                    "title": "Default Dataset ID"
                                                                },
                                                                "credentials_json": {
                                                                    "type": "string",
                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                    "title": "Credentials JSON",
                                                                    "bh_secret": true
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "PostgreSQL"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Postgres Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "host",
                                                                "port",
                                                                "database",
                                                                "username"
                                                            ],
                                                            "properties": {
                                                                "host": {
                                                                    "title": "Host",
                                                                    "description": "Hostname of the database.",
                                                                    "type": "string",
                                                                    "order": 0,
                                                                    "group": "db"
                                                                },
                                                                "port": {
                                                                    "title": "Port",
                                                                    "description": "Port of the database.",
                                                                    "type": "integer",
                                                                    "minimum": 0,
                                                                    "maximum": 65536,
                                                                    "default": 5432,
                                                                    "examples": [
                                                                        "5432"
                                                                    ],
                                                                    "order": 1,
                                                                    "group": "db"
                                                                },
                                                                "database": {
                                                                    "title": "Database Name",
                                                                    "description": "Name of the database.",
                                                                    "type": "string",
                                                                    "order": 2,
                                                                    "group": "db"
                                                                },
                                                                "schemas": {
                                                                    "title": "Schemas",
                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "minItems": 0,
                                                                    "uniqueItems": true,
                                                                    "default": [
                                                                        "public"
                                                                    ],
                                                                    "order": 3,
                                                                    "group": "db"
                                                                },
                                                                "username": {
                                                                    "title": "Username",
                                                                    "description": "Username to access the database.",
                                                                    "type": "string",
                                                                    "order": 4,
                                                                    "group": "auth"
                                                                },
                                                                "password": {
                                                                    "title": "Password",
                                                                    "description": "Password associated with the username.",
                                                                    "type": "string",
                                                                    "bh_secret": true,
                                                                    "order": 5,
                                                                    "group": "auth",
                                                                    "always_show": true
                                                                },
                                                                "jdbc_url_params": {
                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                    "type": "string",
                                                                    "order": 6,
                                                                    "group": "advanced",
                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                },
                                                                "ssl_mode": {
                                                                    "title": "SSL Modes",
                                                                    "description": "SSL connection modes.",
                                                                    "type": "object",
                                                                    "order": 8,
                                                                    "group": "security",
                                                                    "oneOf": [
                                                                        {
                                                                            "title": "disable",
                                                                            "additionalProperties": true,
                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "disable",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "allow",
                                                                            "additionalProperties": true,
                                                                            "description": "Enables encryption only when required by the source database.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "allow",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "prefer",
                                                                            "additionalProperties": true,
                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "prefer",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "require",
                                                                            "additionalProperties": true,
                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "require",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "verify-ca",
                                                                            "additionalProperties": true,
                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                            "required": [
                                                                                "mode",
                                                                                "ca_certificate"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "verify-ca",
                                                                                    "order": 0
                                                                                },
                                                                                "ca_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "CA Certificate",
                                                                                    "description": "CA certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "Client Certificate",
                                                                                    "description": "Client certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 2,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key": {
                                                                                    "type": "string",
                                                                                    "title": "Client Key",
                                                                                    "description": "Client key",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 3,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Client key password",
                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "verify-full",
                                                                            "additionalProperties": true,
                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                            "required": [
                                                                                "mode",
                                                                                "ca_certificate"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "verify-full",
                                                                                    "order": 0
                                                                                },
                                                                                "ca_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "CA Certificate",
                                                                                    "description": "CA certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "Client Certificate",
                                                                                    "description": "Client certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 2,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key": {
                                                                                    "type": "string",
                                                                                    "title": "Client Key",
                                                                                    "description": "Client key",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 3,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Client key password",
                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "replication_method": {
                                                                    "type": "object",
                                                                    "title": "Update Method",
                                                                    "description": "Configures how data is extracted from the database.",
                                                                    "order": 9,
                                                                    "group": "advanced",
                                                                    "default": "CDC",
                                                                    "display_type": "radio",
                                                                    "oneOf": [
                                                                        {
                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                            "required": [
                                                                                "method",
                                                                                "replication_slot",
                                                                                "publication"
                                                                            ],
                                                                            "additionalProperties": true,
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "CDC",
                                                                                    "order": 1
                                                                                },
                                                                                "plugin": {
                                                                                    "type": "string",
                                                                                    "title": "Plugin",
                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                    "enum": [
                                                                                        "pgoutput"
                                                                                    ],
                                                                                    "default": "pgoutput",
                                                                                    "order": 2
                                                                                },
                                                                                "replication_slot": {
                                                                                    "type": "string",
                                                                                    "title": "Replication Slot",
                                                                                    "description": "A plugin logical replication slot.",
                                                                                    "order": 3
                                                                                },
                                                                                "publication": {
                                                                                    "type": "string",
                                                                                    "title": "Publication",
                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                    "order": 4
                                                                                },
                                                                                "initial_waiting_seconds": {
                                                                                    "type": "integer",
                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                    "default": 1200,
                                                                                    "order": 5,
                                                                                    "min": 120,
                                                                                    "max": 2400
                                                                                },
                                                                                "queue_size": {
                                                                                    "type": "integer",
                                                                                    "title": "Size of the queue (Advanced)",
                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                    "default": 10000,
                                                                                    "order": 6,
                                                                                    "min": 1000,
                                                                                    "max": 10000
                                                                                },
                                                                                "lsn_commit_behaviour": {
                                                                                    "type": "string",
                                                                                    "title": "LSN commit behaviour",
                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                    "enum": [
                                                                                        "While reading Data",
                                                                                        "After loading Data in the destination"
                                                                                    ],
                                                                                    "default": "After loading Data in the destination",
                                                                                    "order": 7
                                                                                },
                                                                                "heartbeat_action_query": {
                                                                                    "type": "string",
                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                    "default": "",
                                                                                    "order": 8
                                                                                },
                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                    "type": "string",
                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                    "enum": [
                                                                                        "Fail sync",
                                                                                        "Re-sync data"
                                                                                    ],
                                                                                    "default": "Fail sync",
                                                                                    "order": 9
                                                                                },
                                                                                "initial_load_timeout_hours": {
                                                                                    "type": "integer",
                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                    "default": 8,
                                                                                    "min": 4,
                                                                                    "max": 24,
                                                                                    "order": 10
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Detect Changes with Xmin System Column",
                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                            "required": [
                                                                                "method"
                                                                            ],
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "Xmin",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                            "required": [
                                                                                "method"
                                                                            ],
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "Standard",
                                                                                    "order": 8
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "groups": [
                                                                {
                                                                    "id": "db"
                                                                },
                                                                {
                                                                    "id": "auth"
                                                                },
                                                                {
                                                                    "id": "security",
                                                                    "title": "Security"
                                                                },
                                                                {
                                                                    "id": "advanced",
                                                                    "title": "Advanced"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Snowflake"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Snowflake Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "host",
                                                                "role",
                                                                "warehouse",
                                                                "database"
                                                            ],
                                                            "properties": {
                                                                "credentials": {
                                                                    "title": "Authorization Method",
                                                                    "type": "object",
                                                                    "oneOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "title": "OAuth2.0",
                                                                            "order": 0,
                                                                            "required": [
                                                                                "client_id",
                                                                                "client_secret",
                                                                                "auth_type"
                                                                            ],
                                                                            "bh_hidden": true,
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "OAuth",
                                                                                    "order": 0
                                                                                },
                                                                                "client_id": {
                                                                                    "type": "string",
                                                                                    "title": "Client ID",
                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                    "bh_secret": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_secret": {
                                                                                    "type": "string",
                                                                                    "title": "Client Secret",
                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                    "bh_secret": true,
                                                                                    "order": 2
                                                                                },
                                                                                "access_token": {
                                                                                    "type": "string",
                                                                                    "title": "Access Token",
                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                    "bh_secret": true,
                                                                                    "order": 3
                                                                                },
                                                                                "refresh_token": {
                                                                                    "type": "string",
                                                                                    "title": "Refresh Token",
                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Key Pair Authentication",
                                                                            "type": "object",
                                                                            "order": 1,
                                                                            "required": [
                                                                                "username",
                                                                                "private_key"
                                                                            ],
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "Key Pair Authentication",
                                                                                    "order": 0
                                                                                },
                                                                                "username": {
                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                    "examples": [
                                                                                        "BH_USER"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Username",
                                                                                    "order": 1
                                                                                },
                                                                                "private_key": {
                                                                                    "type": "string",
                                                                                    "title": "Private Key",
                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                    "multiline": true,
                                                                                    "bh_secret": true,
                                                                                    "order": 2
                                                                                },
                                                                                "private_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Passphrase",
                                                                                    "description": "Passphrase for private key",
                                                                                    "bh_secret": true,
                                                                                    "order": 3
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Username and Password",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "username",
                                                                                "password",
                                                                                "auth_type"
                                                                            ],
                                                                            "order": 2,
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "username/password",
                                                                                    "order": 0
                                                                                },
                                                                                "username": {
                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                    "examples": [
                                                                                        "BH_USER"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Username",
                                                                                    "order": 1
                                                                                },
                                                                                "password": {
                                                                                    "description": "The password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "title": "Password",
                                                                                    "order": 2
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "order": 0
                                                                },
                                                                "host": {
                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                    "examples": [
                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Account Name",
                                                                    "order": 1
                                                                },
                                                                "role": {
                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                    "examples": [
                                                                        "BH_ROLE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Role",
                                                                    "order": 2
                                                                },
                                                                "warehouse": {
                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                    "examples": [
                                                                        "BH_WAREHOUSE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Warehouse",
                                                                    "order": 3
                                                                },
                                                                "database": {
                                                                    "description": "The database you created for BigHammer to access data.",
                                                                    "examples": [
                                                                        "BH_DATABASE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Database",
                                                                    "order": 4
                                                                },
                                                                "schema": {
                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                    "examples": [
                                                                        "BH_SCHEMA"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Schema",
                                                                    "order": 5
                                                                },
                                                                "jdbc_url_params": {
                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                    "title": "JDBC URL Params",
                                                                    "type": "string",
                                                                    "order": 6
                                                                }
                                                            }
                                                        },
                                                        "advanced_auth": {
                                                            "auth_flow_type": "oauth2.0",
                                                            "predicate_key": [
                                                                "credentials",
                                                                "auth_type"
                                                            ],
                                                            "predicate_value": "OAuth",
                                                            "oauth_config_specification": {
                                                                "oauth_user_input_from_connector_config_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "host": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "host"
                                                                            ]
                                                                        },
                                                                        "role": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "role"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_output_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "access_token": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "access_token"
                                                                            ]
                                                                        },
                                                                        "refresh_token": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "refresh_token"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_server_input_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "client_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "client_secret": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_server_output_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "client_id": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "client_id"
                                                                            ]
                                                                        },
                                                                        "client_secret": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "client_secret"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Iceberg"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "warehouse_path": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "catalog_name": {
                                                                "type": "string",
                                                                "default": "iceberg"
                                                            },
                                                            "namespace": {
                                                                "type": "string",
                                                                "default": "default"
                                                            }
                                                        },
                                                        "required": [
                                                            "warehouse_path"
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "watermark": {
                                        "type": "object",
                                        "properties": {
                                            "column": {
                                                "type": "string",
                                                "description": "Column to use for watermark"
                                            },
                                            "delay": {
                                                "type": "string",
                                                "description": "Watermark delay (e.g., '5 minutes')"
                                            }
                                        },
                                        "required": [
                                            "column",
                                            "delay"
                                        ]
                                    }
                                },
                                "required": [
                                    "name",
                                    "source_type",
                                    "connection"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "source_type": {
                                                    "const": "File"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "file_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "enum": [
                                                        "csv",
                                                        "json",
                                                        "parquet"
                                                    ],
                                                    "default": "csv"
                                                },
                                                "schema": {
                                                    "type": "object",
                                                    "properties": {
                                                        "fields": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "string",
                                                                            "int",
                                                                            "double",
                                                                            "boolean",
                                                                            "timestamp"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "type"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "file_name"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "source_type": {
                                                    "const": "Relational"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "table_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            },
                                            "required": [
                                                "table_name"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "source_type": {
                                                    "const": "Kafka"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "connection": {
                                                    "type": "object",
                                                    "properties": {
                                                        "connection_type": {
                                                            "const": "Kafka"
                                                        }
                                                    },
                                                    "required": [
                                                        "connection_type"
                                                    ]
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "enum": [
                                                        "json",
                                                        "csv",
                                                        "avro"
                                                    ],
                                                    "default": "json"
                                                },
                                                "schema": {
                                                    "type": "object",
                                                    "properties": {
                                                        "fields": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "string",
                                                                            "int",
                                                                            "double",
                                                                            "boolean",
                                                                            "timestamp"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "type"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "connection"
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "minProperties": 1
                    },
                    "targets": {
                        "type": "object",
                        "patternProperties": {
                            "^[a-zA-Z0-9_]+$": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "Schema for PyFlink Target",
                                "type": "object",
                                "title": "Target",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Target Name",
                                        "minLength": 1
                                    },
                                    "target_type": {
                                        "type": "string",
                                        "enum": [
                                            "File",
                                            "Relational",
                                            "Kafka",
                                            "Iceberg"
                                        ]
                                    },
                                    "connection": {
                                        "type": "object",
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "Connection",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "connection_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Local",
                                                        "GCS",
                                                        "S3",
                                                        "BigQuery",
                                                        "PostgreSQL",
                                                        "Snowflake",
                                                        "Kafka",
                                                        "Iceberg"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "connection_type"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Local"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "GCS"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bucket": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "bucket",
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "S3"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bucket": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "file_path_prefix": {
                                                                "type": "string",
                                                                "default": ""
                                                            }
                                                        },
                                                        "required": [
                                                            "bucket",
                                                            "file_path_prefix"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Kafka"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "bootstrap_servers": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "topic": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "group_id": {
                                                                "type": "string",
                                                                "default": "pyflink-consumer-group"
                                                            },
                                                            "auto_offset_reset": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "earliest",
                                                                    "latest"
                                                                ],
                                                                "default": "earliest"
                                                            }
                                                        },
                                                        "required": [
                                                            "bootstrap_servers",
                                                            "topic"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "BigQuery"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "supportsIncremental": true,
                                                        "supported_sync_modes": [
                                                            "overwrite",
                                                            "append",
                                                            "append_dedup"
                                                        ],
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "BigQuery Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "project_id",
                                                                "credentials_json"
                                                            ],
                                                            "properties": {
                                                                "project_id": {
                                                                    "type": "string",
                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                    "title": "Project ID"
                                                                },
                                                                "dataset_id": {
                                                                    "type": "string",
                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                    "title": "Default Dataset ID"
                                                                },
                                                                "credentials_json": {
                                                                    "type": "string",
                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                    "title": "Credentials JSON",
                                                                    "bh_secret": true
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "PostgreSQL"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Postgres Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "host",
                                                                "port",
                                                                "database",
                                                                "username"
                                                            ],
                                                            "properties": {
                                                                "host": {
                                                                    "title": "Host",
                                                                    "description": "Hostname of the database.",
                                                                    "type": "string",
                                                                    "order": 0,
                                                                    "group": "db"
                                                                },
                                                                "port": {
                                                                    "title": "Port",
                                                                    "description": "Port of the database.",
                                                                    "type": "integer",
                                                                    "minimum": 0,
                                                                    "maximum": 65536,
                                                                    "default": 5432,
                                                                    "examples": [
                                                                        "5432"
                                                                    ],
                                                                    "order": 1,
                                                                    "group": "db"
                                                                },
                                                                "database": {
                                                                    "title": "Database Name",
                                                                    "description": "Name of the database.",
                                                                    "type": "string",
                                                                    "order": 2,
                                                                    "group": "db"
                                                                },
                                                                "schemas": {
                                                                    "title": "Schemas",
                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "minItems": 0,
                                                                    "uniqueItems": true,
                                                                    "default": [
                                                                        "public"
                                                                    ],
                                                                    "order": 3,
                                                                    "group": "db"
                                                                },
                                                                "username": {
                                                                    "title": "Username",
                                                                    "description": "Username to access the database.",
                                                                    "type": "string",
                                                                    "order": 4,
                                                                    "group": "auth"
                                                                },
                                                                "password": {
                                                                    "title": "Password",
                                                                    "description": "Password associated with the username.",
                                                                    "type": "string",
                                                                    "bh_secret": true,
                                                                    "order": 5,
                                                                    "group": "auth",
                                                                    "always_show": true
                                                                },
                                                                "jdbc_url_params": {
                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                    "type": "string",
                                                                    "order": 6,
                                                                    "group": "advanced",
                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                },
                                                                "ssl_mode": {
                                                                    "title": "SSL Modes",
                                                                    "description": "SSL connection modes.",
                                                                    "type": "object",
                                                                    "order": 8,
                                                                    "group": "security",
                                                                    "oneOf": [
                                                                        {
                                                                            "title": "disable",
                                                                            "additionalProperties": true,
                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "disable",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "allow",
                                                                            "additionalProperties": true,
                                                                            "description": "Enables encryption only when required by the source database.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "allow",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "prefer",
                                                                            "additionalProperties": true,
                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "prefer",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "require",
                                                                            "additionalProperties": true,
                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                            "required": [
                                                                                "mode"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "require",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "verify-ca",
                                                                            "additionalProperties": true,
                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                            "required": [
                                                                                "mode",
                                                                                "ca_certificate"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "verify-ca",
                                                                                    "order": 0
                                                                                },
                                                                                "ca_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "CA Certificate",
                                                                                    "description": "CA certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "Client Certificate",
                                                                                    "description": "Client certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 2,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key": {
                                                                                    "type": "string",
                                                                                    "title": "Client Key",
                                                                                    "description": "Client key",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 3,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Client key password",
                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "verify-full",
                                                                            "additionalProperties": true,
                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                            "required": [
                                                                                "mode",
                                                                                "ca_certificate"
                                                                            ],
                                                                            "properties": {
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "const": "verify-full",
                                                                                    "order": 0
                                                                                },
                                                                                "ca_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "CA Certificate",
                                                                                    "description": "CA certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_certificate": {
                                                                                    "type": "string",
                                                                                    "title": "Client Certificate",
                                                                                    "description": "Client certificate",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 2,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key": {
                                                                                    "type": "string",
                                                                                    "title": "Client Key",
                                                                                    "description": "Client key",
                                                                                    "bh_secret": true,
                                                                                    "multiline": true,
                                                                                    "order": 3,
                                                                                    "always_show": true
                                                                                },
                                                                                "client_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Client key password",
                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "replication_method": {
                                                                    "type": "object",
                                                                    "title": "Update Method",
                                                                    "description": "Configures how data is extracted from the database.",
                                                                    "order": 9,
                                                                    "group": "advanced",
                                                                    "default": "CDC",
                                                                    "display_type": "radio",
                                                                    "oneOf": [
                                                                        {
                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                            "required": [
                                                                                "method",
                                                                                "replication_slot",
                                                                                "publication"
                                                                            ],
                                                                            "additionalProperties": true,
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "CDC",
                                                                                    "order": 1
                                                                                },
                                                                                "plugin": {
                                                                                    "type": "string",
                                                                                    "title": "Plugin",
                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                    "enum": [
                                                                                        "pgoutput"
                                                                                    ],
                                                                                    "default": "pgoutput",
                                                                                    "order": 2
                                                                                },
                                                                                "replication_slot": {
                                                                                    "type": "string",
                                                                                    "title": "Replication Slot",
                                                                                    "description": "A plugin logical replication slot.",
                                                                                    "order": 3
                                                                                },
                                                                                "publication": {
                                                                                    "type": "string",
                                                                                    "title": "Publication",
                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                    "order": 4
                                                                                },
                                                                                "initial_waiting_seconds": {
                                                                                    "type": "integer",
                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                    "default": 1200,
                                                                                    "order": 5,
                                                                                    "min": 120,
                                                                                    "max": 2400
                                                                                },
                                                                                "queue_size": {
                                                                                    "type": "integer",
                                                                                    "title": "Size of the queue (Advanced)",
                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                    "default": 10000,
                                                                                    "order": 6,
                                                                                    "min": 1000,
                                                                                    "max": 10000
                                                                                },
                                                                                "lsn_commit_behaviour": {
                                                                                    "type": "string",
                                                                                    "title": "LSN commit behaviour",
                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                    "enum": [
                                                                                        "While reading Data",
                                                                                        "After loading Data in the destination"
                                                                                    ],
                                                                                    "default": "After loading Data in the destination",
                                                                                    "order": 7
                                                                                },
                                                                                "heartbeat_action_query": {
                                                                                    "type": "string",
                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                    "default": "",
                                                                                    "order": 8
                                                                                },
                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                    "type": "string",
                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                    "enum": [
                                                                                        "Fail sync",
                                                                                        "Re-sync data"
                                                                                    ],
                                                                                    "default": "Fail sync",
                                                                                    "order": 9
                                                                                },
                                                                                "initial_load_timeout_hours": {
                                                                                    "type": "integer",
                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                    "default": 8,
                                                                                    "min": 4,
                                                                                    "max": 24,
                                                                                    "order": 10
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Detect Changes with Xmin System Column",
                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                            "required": [
                                                                                "method"
                                                                            ],
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "Xmin",
                                                                                    "order": 0
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                            "required": [
                                                                                "method"
                                                                            ],
                                                                            "properties": {
                                                                                "method": {
                                                                                    "type": "string",
                                                                                    "const": "Standard",
                                                                                    "order": 8
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "groups": [
                                                                {
                                                                    "id": "db"
                                                                },
                                                                {
                                                                    "id": "auth"
                                                                },
                                                                {
                                                                    "id": "security",
                                                                    "title": "Security"
                                                                },
                                                                {
                                                                    "id": "advanced",
                                                                    "title": "Advanced"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Snowflake"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "documentationUrl": "N/A",
                                                        "connectionSpecification": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Snowflake Source Spec",
                                                            "type": "object",
                                                            "required": [
                                                                "host",
                                                                "role",
                                                                "warehouse",
                                                                "database"
                                                            ],
                                                            "properties": {
                                                                "credentials": {
                                                                    "title": "Authorization Method",
                                                                    "type": "object",
                                                                    "oneOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "title": "OAuth2.0",
                                                                            "order": 0,
                                                                            "required": [
                                                                                "client_id",
                                                                                "client_secret",
                                                                                "auth_type"
                                                                            ],
                                                                            "bh_hidden": true,
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "OAuth",
                                                                                    "order": 0
                                                                                },
                                                                                "client_id": {
                                                                                    "type": "string",
                                                                                    "title": "Client ID",
                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                    "bh_secret": true,
                                                                                    "order": 1
                                                                                },
                                                                                "client_secret": {
                                                                                    "type": "string",
                                                                                    "title": "Client Secret",
                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                    "bh_secret": true,
                                                                                    "order": 2
                                                                                },
                                                                                "access_token": {
                                                                                    "type": "string",
                                                                                    "title": "Access Token",
                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                    "bh_secret": true,
                                                                                    "order": 3
                                                                                },
                                                                                "refresh_token": {
                                                                                    "type": "string",
                                                                                    "title": "Refresh Token",
                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                    "bh_secret": true,
                                                                                    "order": 4
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Key Pair Authentication",
                                                                            "type": "object",
                                                                            "order": 1,
                                                                            "required": [
                                                                                "username",
                                                                                "private_key"
                                                                            ],
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "Key Pair Authentication",
                                                                                    "order": 0
                                                                                },
                                                                                "username": {
                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                    "examples": [
                                                                                        "BH_USER"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Username",
                                                                                    "order": 1
                                                                                },
                                                                                "private_key": {
                                                                                    "type": "string",
                                                                                    "title": "Private Key",
                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                    "multiline": true,
                                                                                    "bh_secret": true,
                                                                                    "order": 2
                                                                                },
                                                                                "private_key_password": {
                                                                                    "type": "string",
                                                                                    "title": "Passphrase",
                                                                                    "description": "Passphrase for private key",
                                                                                    "bh_secret": true,
                                                                                    "order": 3
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "title": "Username and Password",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "username",
                                                                                "password",
                                                                                "auth_type"
                                                                            ],
                                                                            "order": 2,
                                                                            "properties": {
                                                                                "auth_type": {
                                                                                    "type": "string",
                                                                                    "const": "username/password",
                                                                                    "order": 0
                                                                                },
                                                                                "username": {
                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                    "examples": [
                                                                                        "BH_USER"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Username",
                                                                                    "order": 1
                                                                                },
                                                                                "password": {
                                                                                    "description": "The password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "title": "Password",
                                                                                    "order": 2
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "order": 0
                                                                },
                                                                "host": {
                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                    "examples": [
                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Account Name",
                                                                    "order": 1
                                                                },
                                                                "role": {
                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                    "examples": [
                                                                        "BH_ROLE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Role",
                                                                    "order": 2
                                                                },
                                                                "warehouse": {
                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                    "examples": [
                                                                        "BH_WAREHOUSE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Warehouse",
                                                                    "order": 3
                                                                },
                                                                "database": {
                                                                    "description": "The database you created for BigHammer to access data.",
                                                                    "examples": [
                                                                        "BH_DATABASE"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Database",
                                                                    "order": 4
                                                                },
                                                                "schema": {
                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                    "examples": [
                                                                        "BH_SCHEMA"
                                                                    ],
                                                                    "type": "string",
                                                                    "title": "Schema",
                                                                    "order": 5
                                                                },
                                                                "jdbc_url_params": {
                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                    "title": "JDBC URL Params",
                                                                    "type": "string",
                                                                    "order": 6
                                                                }
                                                            }
                                                        },
                                                        "advanced_auth": {
                                                            "auth_flow_type": "oauth2.0",
                                                            "predicate_key": [
                                                                "credentials",
                                                                "auth_type"
                                                            ],
                                                            "predicate_value": "OAuth",
                                                            "oauth_config_specification": {
                                                                "oauth_user_input_from_connector_config_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "host": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "host"
                                                                            ]
                                                                        },
                                                                        "role": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "role"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_output_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "access_token": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "access_token"
                                                                            ]
                                                                        },
                                                                        "refresh_token": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "refresh_token"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_server_input_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "client_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "client_secret": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                                "complete_oauth_server_output_specification": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "client_id": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "client_id"
                                                                            ]
                                                                        },
                                                                        "client_secret": {
                                                                            "type": "string",
                                                                            "path_in_connector_config": [
                                                                                "credentials",
                                                                                "client_secret"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "connection_type": {
                                                                "const": "Iceberg"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "warehouse_path": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "catalog_name": {
                                                                "type": "string",
                                                                "default": "iceberg"
                                                            },
                                                            "namespace": {
                                                                "type": "string",
                                                                "default": "default"
                                                            }
                                                        },
                                                        "required": [
                                                            "warehouse_path"
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "load_mode": {
                                        "type": "string",
                                        "enum": [
                                            "append",
                                            "overwrite"
                                        ],
                                        "default": "append"
                                    }
                                },
                                "required": [
                                    "name",
                                    "target_type",
                                    "connection"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "target_type": {
                                                    "const": "File"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "file_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "enum": [
                                                        "csv",
                                                        "json",
                                                        "parquet"
                                                    ],
                                                    "default": "csv"
                                                },
                                                "partition_by": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "file_name"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "target_type": {
                                                    "const": "Kafka"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "connection": {
                                                    "type": "object",
                                                    "items": {
                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                        "title": "Connection",
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "connection_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Local",
                                                                    "GCS",
                                                                    "S3",
                                                                    "BigQuery",
                                                                    "PostgreSQL",
                                                                    "Snowflake",
                                                                    "Kafka",
                                                                    "Iceberg"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "connection_type"
                                                        ],
                                                        "allOf": [
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "connection_type": {
                                                                            "const": "Local"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "properties": {
                                                                        "file_path_prefix": {
                                                                            "type": "string",
                                                                            "default": ""
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "file_path_prefix"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "connection_type": {
                                                                            "const": "GCS"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "properties": {
                                                                        "bucket": {
                                                                            "type": "string",
                                                                            "minLength": 1
                                                                        },
                                                                        "file_path_prefix": {
                                                                            "type": "string",
                                                                            "default": ""
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "bucket",
                                                                        "file_path_prefix"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "connection_type": {
                                                                            "const": "S3"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "properties": {
                                                                        "bucket": {
                                                                            "type": "string",
                                                                            "minLength": 1
                                                                        },
                                                                        "file_path_prefix": {
                                                                            "type": "string",
                                                                            "default": ""
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "bucket",
                                                                        "file_path_prefix"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "connection_type": {
                                                                            "const": "Kafka"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "properties": {
                                                                        "bootstrap_servers": {
                                                                            "type": "string",
                                                                            "minLength": 1
                                                                        },
                                                                        "topic": {
                                                                            "type": "string",
                                                                            "minLength": 1
                                                                        },
                                                                        "group_id": {
                                                                            "type": "string",
                                                                            "default": "pyflink-consumer-group"
                                                                        },
                                                                        "auto_offset_reset": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "earliest",
                                                                                "latest"
                                                                            ],
                                                                            "default": "earliest"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "bootstrap_servers",
                                                                        "topic"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "connection_type": {
                                                                            "const": "BigQuery"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "documentationUrl": "N/A",
                                                                    "supportsIncremental": true,
                                                                    "supported_sync_modes": [
                                                                        "overwrite",
                                                                        "append",
                                                                        "append_dedup"
                                                                    ],
                                                                    "connectionSpecification": {
                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                        "title": "BigQuery Source Spec",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "project_id",
                                                                            "credentials_json"
                                                                        ],
                                                                        "properties": {
                                                                            "project_id": {
                                                                                "type": "string",
                                                                                "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                                "title": "Project ID"
                                                                            },
                                                                            "dataset_id": {
                                                                                "type": "string",
                                                                                "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                                "title": "Default Dataset ID"
                                                                            },
                                                                            "credentials_json": {
                                                                                "type": "string",
                                                                                "description": "The contents of your Service Account Key JSON file.",
                                                                                "title": "Credentials JSON",
                                                                                "bh_secret": true
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "connection_type": {
                                                                            "const": "PostgreSQL"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "documentationUrl": "N/A",
                                                                    "connectionSpecification": {
                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                        "title": "Postgres Source Spec",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "host",
                                                                            "port",
                                                                            "database",
                                                                            "username"
                                                                        ],
                                                                        "properties": {
                                                                            "host": {
                                                                                "title": "Host",
                                                                                "description": "Hostname of the database.",
                                                                                "type": "string",
                                                                                "order": 0,
                                                                                "group": "db"
                                                                            },
                                                                            "port": {
                                                                                "title": "Port",
                                                                                "description": "Port of the database.",
                                                                                "type": "integer",
                                                                                "minimum": 0,
                                                                                "maximum": 65536,
                                                                                "default": 5432,
                                                                                "examples": [
                                                                                    "5432"
                                                                                ],
                                                                                "order": 1,
                                                                                "group": "db"
                                                                            },
                                                                            "database": {
                                                                                "title": "Database Name",
                                                                                "description": "Name of the database.",
                                                                                "type": "string",
                                                                                "order": 2,
                                                                                "group": "db"
                                                                            },
                                                                            "schemas": {
                                                                                "title": "Schemas",
                                                                                "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "minItems": 0,
                                                                                "uniqueItems": true,
                                                                                "default": [
                                                                                    "public"
                                                                                ],
                                                                                "order": 3,
                                                                                "group": "db"
                                                                            },
                                                                            "username": {
                                                                                "title": "Username",
                                                                                "description": "Username to access the database.",
                                                                                "type": "string",
                                                                                "order": 4,
                                                                                "group": "auth"
                                                                            },
                                                                            "password": {
                                                                                "title": "Password",
                                                                                "description": "Password associated with the username.",
                                                                                "type": "string",
                                                                                "bh_secret": true,
                                                                                "order": 5,
                                                                                "group": "auth",
                                                                                "always_show": true
                                                                            },
                                                                            "jdbc_url_params": {
                                                                                "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                                "title": "JDBC URL Parameters (Advanced)",
                                                                                "type": "string",
                                                                                "order": 6,
                                                                                "group": "advanced",
                                                                                "pattern_descriptor": "key1=value1&key2=value2"
                                                                            },
                                                                            "ssl_mode": {
                                                                                "title": "SSL Modes",
                                                                                "description": "SSL connection modes.",
                                                                                "type": "object",
                                                                                "order": 8,
                                                                                "group": "security",
                                                                                "oneOf": [
                                                                                    {
                                                                                        "title": "disable",
                                                                                        "additionalProperties": true,
                                                                                        "description": "Disables encryption of communication between BigHammer and source database.",
                                                                                        "required": [
                                                                                            "mode"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mode": {
                                                                                                "type": "string",
                                                                                                "const": "disable",
                                                                                                "order": 0
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "title": "allow",
                                                                                        "additionalProperties": true,
                                                                                        "description": "Enables encryption only when required by the source database.",
                                                                                        "required": [
                                                                                            "mode"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mode": {
                                                                                                "type": "string",
                                                                                                "const": "allow",
                                                                                                "order": 0
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "title": "prefer",
                                                                                        "additionalProperties": true,
                                                                                        "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                                        "required": [
                                                                                            "mode"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mode": {
                                                                                                "type": "string",
                                                                                                "const": "prefer",
                                                                                                "order": 0
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "title": "require",
                                                                                        "additionalProperties": true,
                                                                                        "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                                        "required": [
                                                                                            "mode"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mode": {
                                                                                                "type": "string",
                                                                                                "const": "require",
                                                                                                "order": 0
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "title": "verify-ca",
                                                                                        "additionalProperties": true,
                                                                                        "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                                        "required": [
                                                                                            "mode",
                                                                                            "ca_certificate"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mode": {
                                                                                                "type": "string",
                                                                                                "const": "verify-ca",
                                                                                                "order": 0
                                                                                            },
                                                                                            "ca_certificate": {
                                                                                                "type": "string",
                                                                                                "title": "CA Certificate",
                                                                                                "description": "CA certificate",
                                                                                                "bh_secret": true,
                                                                                                "multiline": true,
                                                                                                "order": 1
                                                                                            },
                                                                                            "client_certificate": {
                                                                                                "type": "string",
                                                                                                "title": "Client Certificate",
                                                                                                "description": "Client certificate",
                                                                                                "bh_secret": true,
                                                                                                "multiline": true,
                                                                                                "order": 2,
                                                                                                "always_show": true
                                                                                            },
                                                                                            "client_key": {
                                                                                                "type": "string",
                                                                                                "title": "Client Key",
                                                                                                "description": "Client key",
                                                                                                "bh_secret": true,
                                                                                                "multiline": true,
                                                                                                "order": 3,
                                                                                                "always_show": true
                                                                                            },
                                                                                            "client_key_password": {
                                                                                                "type": "string",
                                                                                                "title": "Client key password",
                                                                                                "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                "bh_secret": true,
                                                                                                "order": 4
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "title": "verify-full",
                                                                                        "additionalProperties": true,
                                                                                        "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                                        "required": [
                                                                                            "mode",
                                                                                            "ca_certificate"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mode": {
                                                                                                "type": "string",
                                                                                                "const": "verify-full",
                                                                                                "order": 0
                                                                                            },
                                                                                            "ca_certificate": {
                                                                                                "type": "string",
                                                                                                "title": "CA Certificate",
                                                                                                "description": "CA certificate",
                                                                                                "bh_secret": true,
                                                                                                "multiline": true,
                                                                                                "order": 1
                                                                                            },
                                                                                            "client_certificate": {
                                                                                                "type": "string",
                                                                                                "title": "Client Certificate",
                                                                                                "description": "Client certificate",
                                                                                                "bh_secret": true,
                                                                                                "multiline": true,
                                                                                                "order": 2,
                                                                                                "always_show": true
                                                                                            },
                                                                                            "client_key": {
                                                                                                "type": "string",
                                                                                                "title": "Client Key",
                                                                                                "description": "Client key",
                                                                                                "bh_secret": true,
                                                                                                "multiline": true,
                                                                                                "order": 3,
                                                                                                "always_show": true
                                                                                            },
                                                                                            "client_key_password": {
                                                                                                "type": "string",
                                                                                                "title": "Client key password",
                                                                                                "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                "bh_secret": true,
                                                                                                "order": 4
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "replication_method": {
                                                                                "type": "object",
                                                                                "title": "Update Method",
                                                                                "description": "Configures how data is extracted from the database.",
                                                                                "order": 9,
                                                                                "group": "advanced",
                                                                                "default": "CDC",
                                                                                "display_type": "radio",
                                                                                "oneOf": [
                                                                                    {
                                                                                        "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                                        "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                                        "required": [
                                                                                            "method",
                                                                                            "replication_slot",
                                                                                            "publication"
                                                                                        ],
                                                                                        "additionalProperties": true,
                                                                                        "properties": {
                                                                                            "method": {
                                                                                                "type": "string",
                                                                                                "const": "CDC",
                                                                                                "order": 1
                                                                                            },
                                                                                            "plugin": {
                                                                                                "type": "string",
                                                                                                "title": "Plugin",
                                                                                                "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                                "enum": [
                                                                                                    "pgoutput"
                                                                                                ],
                                                                                                "default": "pgoutput",
                                                                                                "order": 2
                                                                                            },
                                                                                            "replication_slot": {
                                                                                                "type": "string",
                                                                                                "title": "Replication Slot",
                                                                                                "description": "A plugin logical replication slot.",
                                                                                                "order": 3
                                                                                            },
                                                                                            "publication": {
                                                                                                "type": "string",
                                                                                                "title": "Publication",
                                                                                                "description": "A Postgres publication used for consuming changes.",
                                                                                                "order": 4
                                                                                            },
                                                                                            "initial_waiting_seconds": {
                                                                                                "type": "integer",
                                                                                                "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                                "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                                "default": 1200,
                                                                                                "order": 5,
                                                                                                "min": 120,
                                                                                                "max": 2400
                                                                                            },
                                                                                            "queue_size": {
                                                                                                "type": "integer",
                                                                                                "title": "Size of the queue (Advanced)",
                                                                                                "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                                "default": 10000,
                                                                                                "order": 6,
                                                                                                "min": 1000,
                                                                                                "max": 10000
                                                                                            },
                                                                                            "lsn_commit_behaviour": {
                                                                                                "type": "string",
                                                                                                "title": "LSN commit behaviour",
                                                                                                "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                                "enum": [
                                                                                                    "While reading Data",
                                                                                                    "After loading Data in the destination"
                                                                                                ],
                                                                                                "default": "After loading Data in the destination",
                                                                                                "order": 7
                                                                                            },
                                                                                            "heartbeat_action_query": {
                                                                                                "type": "string",
                                                                                                "title": "Debezium heartbeat query (Advanced)",
                                                                                                "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                                "default": "",
                                                                                                "order": 8
                                                                                            },
                                                                                            "invalid_cdc_cursor_position_behavior": {
                                                                                                "type": "string",
                                                                                                "title": "Invalid CDC position behavior (Advanced)",
                                                                                                "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                                "enum": [
                                                                                                    "Fail sync",
                                                                                                    "Re-sync data"
                                                                                                ],
                                                                                                "default": "Fail sync",
                                                                                                "order": 9
                                                                                            },
                                                                                            "initial_load_timeout_hours": {
                                                                                                "type": "integer",
                                                                                                "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                                "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                                "default": 8,
                                                                                                "min": 4,
                                                                                                "max": 24,
                                                                                                "order": 10
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "title": "Detect Changes with Xmin System Column",
                                                                                        "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                                        "required": [
                                                                                            "method"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "method": {
                                                                                                "type": "string",
                                                                                                "const": "Xmin",
                                                                                                "order": 0
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "title": "Scan Changes with User Defined Cursor",
                                                                                        "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                                        "required": [
                                                                                            "method"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "method": {
                                                                                                "type": "string",
                                                                                                "const": "Standard",
                                                                                                "order": 8
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "groups": [
                                                                            {
                                                                                "id": "db"
                                                                            },
                                                                            {
                                                                                "id": "auth"
                                                                            },
                                                                            {
                                                                                "id": "security",
                                                                                "title": "Security"
                                                                            },
                                                                            {
                                                                                "id": "advanced",
                                                                                "title": "Advanced"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "connection_type": {
                                                                            "const": "Snowflake"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "documentationUrl": "N/A",
                                                                    "connectionSpecification": {
                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                        "title": "Snowflake Source Spec",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "host",
                                                                            "role",
                                                                            "warehouse",
                                                                            "database"
                                                                        ],
                                                                        "properties": {
                                                                            "credentials": {
                                                                                "title": "Authorization Method",
                                                                                "type": "object",
                                                                                "oneOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "title": "OAuth2.0",
                                                                                        "order": 0,
                                                                                        "required": [
                                                                                            "client_id",
                                                                                            "client_secret",
                                                                                            "auth_type"
                                                                                        ],
                                                                                        "bh_hidden": true,
                                                                                        "properties": {
                                                                                            "auth_type": {
                                                                                                "type": "string",
                                                                                                "const": "OAuth",
                                                                                                "order": 0
                                                                                            },
                                                                                            "client_id": {
                                                                                                "type": "string",
                                                                                                "title": "Client ID",
                                                                                                "description": "The Client ID of your Snowflake developer application.",
                                                                                                "bh_secret": true,
                                                                                                "order": 1
                                                                                            },
                                                                                            "client_secret": {
                                                                                                "type": "string",
                                                                                                "title": "Client Secret",
                                                                                                "description": "The Client Secret of your Snowflake developer application.",
                                                                                                "bh_secret": true,
                                                                                                "order": 2
                                                                                            },
                                                                                            "access_token": {
                                                                                                "type": "string",
                                                                                                "title": "Access Token",
                                                                                                "description": "Access Token for making authenticated requests.",
                                                                                                "bh_secret": true,
                                                                                                "order": 3
                                                                                            },
                                                                                            "refresh_token": {
                                                                                                "type": "string",
                                                                                                "title": "Refresh Token",
                                                                                                "description": "Refresh Token for making authenticated requests.",
                                                                                                "bh_secret": true,
                                                                                                "order": 4
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "title": "Key Pair Authentication",
                                                                                        "type": "object",
                                                                                        "order": 1,
                                                                                        "required": [
                                                                                            "username",
                                                                                            "private_key"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "auth_type": {
                                                                                                "type": "string",
                                                                                                "const": "Key Pair Authentication",
                                                                                                "order": 0
                                                                                            },
                                                                                            "username": {
                                                                                                "description": "The username you created to allow BigHammer to access the database.",
                                                                                                "examples": [
                                                                                                    "BH_USER"
                                                                                                ],
                                                                                                "type": "string",
                                                                                                "title": "Username",
                                                                                                "order": 1
                                                                                            },
                                                                                            "private_key": {
                                                                                                "type": "string",
                                                                                                "title": "Private Key",
                                                                                                "description": "RSA Private key to use for Snowflake connection.",
                                                                                                "multiline": true,
                                                                                                "bh_secret": true,
                                                                                                "order": 2
                                                                                            },
                                                                                            "private_key_password": {
                                                                                                "type": "string",
                                                                                                "title": "Passphrase",
                                                                                                "description": "Passphrase for private key",
                                                                                                "bh_secret": true,
                                                                                                "order": 3
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "title": "Username and Password",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "username",
                                                                                            "password",
                                                                                            "auth_type"
                                                                                        ],
                                                                                        "order": 2,
                                                                                        "properties": {
                                                                                            "auth_type": {
                                                                                                "type": "string",
                                                                                                "const": "username/password",
                                                                                                "order": 0
                                                                                            },
                                                                                            "username": {
                                                                                                "description": "The username you created to allow BigHammer to access the database.",
                                                                                                "examples": [
                                                                                                    "BH_USER"
                                                                                                ],
                                                                                                "type": "string",
                                                                                                "title": "Username",
                                                                                                "order": 1
                                                                                            },
                                                                                            "password": {
                                                                                                "description": "The password associated with the username.",
                                                                                                "type": "string",
                                                                                                "bh_secret": true,
                                                                                                "title": "Password",
                                                                                                "order": 2
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "order": 0
                                                                            },
                                                                            "host": {
                                                                                "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                                "examples": [
                                                                                    "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                                ],
                                                                                "type": "string",
                                                                                "title": "Account Name",
                                                                                "order": 1
                                                                            },
                                                                            "role": {
                                                                                "description": "The role you created for BigHammer to access Snowflake.",
                                                                                "examples": [
                                                                                    "BH_ROLE"
                                                                                ],
                                                                                "type": "string",
                                                                                "title": "Role",
                                                                                "order": 2
                                                                            },
                                                                            "warehouse": {
                                                                                "description": "The warehouse you created for BigHammer to access data.",
                                                                                "examples": [
                                                                                    "BH_WAREHOUSE"
                                                                                ],
                                                                                "type": "string",
                                                                                "title": "Warehouse",
                                                                                "order": 3
                                                                            },
                                                                            "database": {
                                                                                "description": "The database you created for BigHammer to access data.",
                                                                                "examples": [
                                                                                    "BH_DATABASE"
                                                                                ],
                                                                                "type": "string",
                                                                                "title": "Database",
                                                                                "order": 4
                                                                            },
                                                                            "schema": {
                                                                                "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                                "examples": [
                                                                                    "BH_SCHEMA"
                                                                                ],
                                                                                "type": "string",
                                                                                "title": "Schema",
                                                                                "order": 5
                                                                            },
                                                                            "jdbc_url_params": {
                                                                                "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                                "title": "JDBC URL Params",
                                                                                "type": "string",
                                                                                "order": 6
                                                                            }
                                                                        }
                                                                    },
                                                                    "advanced_auth": {
                                                                        "auth_flow_type": "oauth2.0",
                                                                        "predicate_key": [
                                                                            "credentials",
                                                                            "auth_type"
                                                                        ],
                                                                        "predicate_value": "OAuth",
                                                                        "oauth_config_specification": {
                                                                            "oauth_user_input_from_connector_config_specification": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "host": {
                                                                                        "type": "string",
                                                                                        "path_in_connector_config": [
                                                                                            "host"
                                                                                        ]
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string",
                                                                                        "path_in_connector_config": [
                                                                                            "role"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "complete_oauth_output_specification": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "access_token": {
                                                                                        "type": "string",
                                                                                        "path_in_connector_config": [
                                                                                            "credentials",
                                                                                            "access_token"
                                                                                        ]
                                                                                    },
                                                                                    "refresh_token": {
                                                                                        "type": "string",
                                                                                        "path_in_connector_config": [
                                                                                            "credentials",
                                                                                            "refresh_token"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "complete_oauth_server_input_specification": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "client_id": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "client_secret": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "complete_oauth_server_output_specification": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "client_id": {
                                                                                        "type": "string",
                                                                                        "path_in_connector_config": [
                                                                                            "credentials",
                                                                                            "client_id"
                                                                                        ]
                                                                                    },
                                                                                    "client_secret": {
                                                                                        "type": "string",
                                                                                        "path_in_connector_config": [
                                                                                            "credentials",
                                                                                            "client_secret"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "connection_type": {
                                                                            "const": "Iceberg"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "properties": {
                                                                        "warehouse_path": {
                                                                            "type": "string",
                                                                            "minLength": 1
                                                                        },
                                                                        "catalog_name": {
                                                                            "type": "string",
                                                                            "default": "iceberg"
                                                                        },
                                                                        "namespace": {
                                                                            "type": "string",
                                                                            "default": "default"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "warehouse_path"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "enum": [
                                                        "json",
                                                        "csv",
                                                        "avro"
                                                    ],
                                                    "default": "json"
                                                },
                                                "key_field": {
                                                    "type": "string",
                                                    "description": "Field to use as Kafka key"
                                                }
                                            },
                                            "required": [
                                                "connection"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "target_type": {
                                                    "const": "Relational"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "table_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            },
                                            "required": [
                                                "table_name"
                                            ]
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "target_type": {
                                                    "const": "Iceberg"
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "table_name": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "catalog_name": {
                                                    "type": "string",
                                                    "default": "iceberg"
                                                },
                                                "namespace": {
                                                    "type": "string",
                                                    "default": "default"
                                                },
                                                "warehouse_path": {
                                                    "type": "string"
                                                },
                                                "partition_by": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "table_name"
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "minProperties": 1
                    },
                    "transformations": {
                        "type": "array",
                        "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "Transformation",
                            "description": "Flink 2.0 transformation configuration",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "description": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "dependent_on": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "transformation": {
                                    "type": "string",
                                    "minLength": 1,
                                    "enum": [
                                        "Reader",
                                        "Filter",
                                        "Router",
                                        "Mapper",
                                        "Writer",
                                        "Aggregator",
                                        "Lookup",
                                        "Joiner",
                                        "Expression"
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "default": 0,
                                    "minimum": 0
                                },
                                "drop_columns": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": []
                                },
                                "input_selection": {
                                    "type": "object",
                                    "description": "Specifies which outputs from predecessor transformations to use as input",
                                    "patternProperties": {
                                        "^[a-zA-Z0-9_]+$": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "List of output names from the specified predecessor transformation"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "flink_config": {
                                    "type": "object",
                                    "description": "Flink 2.0 specific configuration for this transformation",
                                    "properties": {
                                        "parallelism": {
                                            "type": "integer",
                                            "description": "Parallelism for this transformation",
                                            "minimum": 1
                                        },
                                        "state_ttl": {
                                            "type": "string",
                                            "description": "State TTL for this transformation",
                                            "pattern": "^\\d+\\s+(second|minute|hour|day)s?$"
                                        },
                                        "idle_timeout": {
                                            "type": "integer",
                                            "description": "Idle timeout in milliseconds",
                                            "minimum": 1000
                                        },
                                        "buffer_timeout": {
                                            "type": "integer",
                                            "description": "Buffer timeout in milliseconds",
                                            "minimum": 100
                                        }
                                    }
                                }
                            },
                            "required": [
                                "name",
                                "transformation"
                            ],
                            "allOf": [
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Reader"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Reader transformation for PyFlink 2.0 streaming",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Reader",
                                            "color": "#f7a01f",
                                            "icon": "/assets/buildPipeline/6.svg",
                                            "ports": {
                                                "inputs": 0,
                                                "outputs": 1,
                                                "maxInputs": 0
                                            }
                                        },
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "source": {
                                                "type": "object",
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "description": "Schema for PyFlink Source",
                                                "title": "Source",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Source Name",
                                                        "minLength": 1
                                                    },
                                                    "source_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "File",
                                                            "Relational",
                                                            "Kafka"
                                                        ]
                                                    },
                                                    "connection": {
                                                        "type": "object",
                                                        "items": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Connection",
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "connection_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Local",
                                                                        "GCS",
                                                                        "S3",
                                                                        "BigQuery",
                                                                        "PostgreSQL",
                                                                        "Snowflake",
                                                                        "Kafka",
                                                                        "Iceberg"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "connection_type"
                                                            ],
                                                            "allOf": [
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Local"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "GCS"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "S3"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Kafka"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bootstrap_servers": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "topic": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "group_id": {
                                                                                "type": "string",
                                                                                "default": "pyflink-consumer-group"
                                                                            },
                                                                            "auto_offset_reset": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "earliest",
                                                                                    "latest"
                                                                                ],
                                                                                "default": "earliest"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bootstrap_servers",
                                                                            "topic"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "BigQuery"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "supportsIncremental": true,
                                                                        "supported_sync_modes": [
                                                                            "overwrite",
                                                                            "append",
                                                                            "append_dedup"
                                                                        ],
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "BigQuery Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "project_id",
                                                                                "credentials_json"
                                                                            ],
                                                                            "properties": {
                                                                                "project_id": {
                                                                                    "type": "string",
                                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                                    "title": "Project ID"
                                                                                },
                                                                                "dataset_id": {
                                                                                    "type": "string",
                                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                                    "title": "Default Dataset ID"
                                                                                },
                                                                                "credentials_json": {
                                                                                    "type": "string",
                                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                                    "title": "Credentials JSON",
                                                                                    "bh_secret": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "PostgreSQL"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Postgres Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "port",
                                                                                "database",
                                                                                "username"
                                                                            ],
                                                                            "properties": {
                                                                                "host": {
                                                                                    "title": "Host",
                                                                                    "description": "Hostname of the database.",
                                                                                    "type": "string",
                                                                                    "order": 0,
                                                                                    "group": "db"
                                                                                },
                                                                                "port": {
                                                                                    "title": "Port",
                                                                                    "description": "Port of the database.",
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 65536,
                                                                                    "default": 5432,
                                                                                    "examples": [
                                                                                        "5432"
                                                                                    ],
                                                                                    "order": 1,
                                                                                    "group": "db"
                                                                                },
                                                                                "database": {
                                                                                    "title": "Database Name",
                                                                                    "description": "Name of the database.",
                                                                                    "type": "string",
                                                                                    "order": 2,
                                                                                    "group": "db"
                                                                                },
                                                                                "schemas": {
                                                                                    "title": "Schemas",
                                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "minItems": 0,
                                                                                    "uniqueItems": true,
                                                                                    "default": [
                                                                                        "public"
                                                                                    ],
                                                                                    "order": 3,
                                                                                    "group": "db"
                                                                                },
                                                                                "username": {
                                                                                    "title": "Username",
                                                                                    "description": "Username to access the database.",
                                                                                    "type": "string",
                                                                                    "order": 4,
                                                                                    "group": "auth"
                                                                                },
                                                                                "password": {
                                                                                    "title": "Password",
                                                                                    "description": "Password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "order": 5,
                                                                                    "group": "auth",
                                                                                    "always_show": true
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                                    "type": "string",
                                                                                    "order": 6,
                                                                                    "group": "advanced",
                                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                                },
                                                                                "ssl_mode": {
                                                                                    "title": "SSL Modes",
                                                                                    "description": "SSL connection modes.",
                                                                                    "type": "object",
                                                                                    "order": 8,
                                                                                    "group": "security",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "disable",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "disable",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "allow",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Enables encryption only when required by the source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "allow",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "prefer",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "prefer",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "require",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "require",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-ca",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-ca",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-full",
                                                                                            "additionalProperties": true,
                                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-full",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "replication_method": {
                                                                                    "type": "object",
                                                                                    "title": "Update Method",
                                                                                    "description": "Configures how data is extracted from the database.",
                                                                                    "order": 9,
                                                                                    "group": "advanced",
                                                                                    "default": "CDC",
                                                                                    "display_type": "radio",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                                            "required": [
                                                                                                "method",
                                                                                                "replication_slot",
                                                                                                "publication"
                                                                                            ],
                                                                                            "additionalProperties": true,
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "CDC",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "plugin": {
                                                                                                    "type": "string",
                                                                                                    "title": "Plugin",
                                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                                    "enum": [
                                                                                                        "pgoutput"
                                                                                                    ],
                                                                                                    "default": "pgoutput",
                                                                                                    "order": 2
                                                                                                },
                                                                                                "replication_slot": {
                                                                                                    "type": "string",
                                                                                                    "title": "Replication Slot",
                                                                                                    "description": "A plugin logical replication slot.",
                                                                                                    "order": 3
                                                                                                },
                                                                                                "publication": {
                                                                                                    "type": "string",
                                                                                                    "title": "Publication",
                                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                                    "order": 4
                                                                                                },
                                                                                                "initial_waiting_seconds": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                                    "default": 1200,
                                                                                                    "order": 5,
                                                                                                    "min": 120,
                                                                                                    "max": 2400
                                                                                                },
                                                                                                "queue_size": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Size of the queue (Advanced)",
                                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                                    "default": 10000,
                                                                                                    "order": 6,
                                                                                                    "min": 1000,
                                                                                                    "max": 10000
                                                                                                },
                                                                                                "lsn_commit_behaviour": {
                                                                                                    "type": "string",
                                                                                                    "title": "LSN commit behaviour",
                                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                                    "enum": [
                                                                                                        "While reading Data",
                                                                                                        "After loading Data in the destination"
                                                                                                    ],
                                                                                                    "default": "After loading Data in the destination",
                                                                                                    "order": 7
                                                                                                },
                                                                                                "heartbeat_action_query": {
                                                                                                    "type": "string",
                                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                                    "default": "",
                                                                                                    "order": 8
                                                                                                },
                                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                                    "type": "string",
                                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                                    "enum": [
                                                                                                        "Fail sync",
                                                                                                        "Re-sync data"
                                                                                                    ],
                                                                                                    "default": "Fail sync",
                                                                                                    "order": 9
                                                                                                },
                                                                                                "initial_load_timeout_hours": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                                    "default": 8,
                                                                                                    "min": 4,
                                                                                                    "max": 24,
                                                                                                    "order": 10
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Detect Changes with Xmin System Column",
                                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Xmin",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Standard",
                                                                                                    "order": 8
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "groups": [
                                                                                {
                                                                                    "id": "db"
                                                                                },
                                                                                {
                                                                                    "id": "auth"
                                                                                },
                                                                                {
                                                                                    "id": "security",
                                                                                    "title": "Security"
                                                                                },
                                                                                {
                                                                                    "id": "advanced",
                                                                                    "title": "Advanced"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Snowflake"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Snowflake Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "role",
                                                                                "warehouse",
                                                                                "database"
                                                                            ],
                                                                            "properties": {
                                                                                "credentials": {
                                                                                    "title": "Authorization Method",
                                                                                    "type": "object",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "type": "object",
                                                                                            "title": "OAuth2.0",
                                                                                            "order": 0,
                                                                                            "required": [
                                                                                                "client_id",
                                                                                                "client_secret",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "bh_hidden": true,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "OAuth",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "client_id": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client ID",
                                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_secret": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Secret",
                                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "access_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Access Token",
                                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                },
                                                                                                "refresh_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Refresh Token",
                                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Key Pair Authentication",
                                                                                            "type": "object",
                                                                                            "order": 1,
                                                                                            "required": [
                                                                                                "username",
                                                                                                "private_key"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Key Pair Authentication",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "private_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Private Key",
                                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                                    "multiline": true,
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "private_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Passphrase",
                                                                                                    "description": "Passphrase for private key",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Username and Password",
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "username",
                                                                                                "password",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "order": 2,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "username/password",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "password": {
                                                                                                    "description": "The password associated with the username.",
                                                                                                    "type": "string",
                                                                                                    "bh_secret": true,
                                                                                                    "title": "Password",
                                                                                                    "order": 2
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "order": 0
                                                                                },
                                                                                "host": {
                                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                                    "examples": [
                                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Account Name",
                                                                                    "order": 1
                                                                                },
                                                                                "role": {
                                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                                    "examples": [
                                                                                        "BH_ROLE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Role",
                                                                                    "order": 2
                                                                                },
                                                                                "warehouse": {
                                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_WAREHOUSE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Warehouse",
                                                                                    "order": 3
                                                                                },
                                                                                "database": {
                                                                                    "description": "The database you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_DATABASE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Database",
                                                                                    "order": 4
                                                                                },
                                                                                "schema": {
                                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                                    "examples": [
                                                                                        "BH_SCHEMA"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Schema",
                                                                                    "order": 5
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                                    "title": "JDBC URL Params",
                                                                                    "type": "string",
                                                                                    "order": 6
                                                                                }
                                                                            }
                                                                        },
                                                                        "advanced_auth": {
                                                                            "auth_flow_type": "oauth2.0",
                                                                            "predicate_key": [
                                                                                "credentials",
                                                                                "auth_type"
                                                                            ],
                                                                            "predicate_value": "OAuth",
                                                                            "oauth_config_specification": {
                                                                                "oauth_user_input_from_connector_config_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "host"
                                                                                            ]
                                                                                        },
                                                                                        "role": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "role"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "access_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "access_token"
                                                                                            ]
                                                                                        },
                                                                                        "refresh_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "refresh_token"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_input_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_id"
                                                                                            ]
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_secret"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Iceberg"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "warehouse_path": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "catalog_name": {
                                                                                "type": "string",
                                                                                "default": "iceberg"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string",
                                                                                "default": "default"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "warehouse_path"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "watermark": {
                                                        "type": "object",
                                                        "properties": {
                                                            "column": {
                                                                "type": "string",
                                                                "description": "Column to use for watermark"
                                                            },
                                                            "delay": {
                                                                "type": "string",
                                                                "description": "Watermark delay (e.g., '5 minutes')"
                                                            }
                                                        },
                                                        "required": [
                                                            "column",
                                                            "delay"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "source_type",
                                                    "connection"
                                                ],
                                                "allOf": [
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "file_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "format": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "csv",
                                                                        "json",
                                                                        "parquet"
                                                                    ],
                                                                    "default": "csv"
                                                                },
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "fields": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "string",
                                                                                            "int",
                                                                                            "double",
                                                                                            "boolean",
                                                                                            "timestamp"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "required": [
                                                                "file_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "table_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "table_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "Kafka"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "connection": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "connection_type": {
                                                                            "const": "Kafka"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "connection_type"
                                                                    ]
                                                                },
                                                                "format": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "json",
                                                                        "csv",
                                                                        "avro"
                                                                    ],
                                                                    "default": "json"
                                                                },
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "fields": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "string",
                                                                                            "int",
                                                                                            "double",
                                                                                            "boolean",
                                                                                            "timestamp"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "required": [
                                                                "connection"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "select_columns": {
                                                "type": "array",
                                                "description": "List of column names to select from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "drop_columns": {
                                                "type": "array",
                                                "description": "List of column names to drop from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "rename_columns": {
                                                "type": "object",
                                                "description": "Mapping of old column names to new column names",
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "source"
                                        ],
                                        "allOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "source": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "file_type": {
                                                            "type": "string",
                                                            "description": "File Type",
                                                            "enum": [
                                                                "CSV",
                                                                "JSON",
                                                                "Parquet"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "file_type"
                                                    ],
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "CSV"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "read_options": {
                                                                        "allOf": [
                                                                            {
                                                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                "type": "object",
                                                                                "title": "CSV Reader Options",
                                                                                "properties": {
                                                                                    "format": {
                                                                                        "type": "string",
                                                                                        "description": "Specify what format to use, here should be 'csv'.",
                                                                                        "default": "csv"
                                                                                    },
                                                                                    "csv.field-delimiter": {
                                                                                        "type": "string",
                                                                                        "description": "Field delimiter character (',' by default), must be single character. You can use backslash to specify special characters, e.g. '\\t' represents the tab character. You can also use unicode to specify them in plain SQL, e.g. 'csv.field-delimiter' = U&'\\u00001' represents the 0x01 character.",
                                                                                        "default": ","
                                                                                    },
                                                                                    "csv.disable-quote-character": {
                                                                                        "type": "boolean",
                                                                                        "description": "Disabled quote character for enclosing field values (false by default). If true, option 'csv.quote-character' can not be set.",
                                                                                        "default": false
                                                                                    },
                                                                                    "csv.quote-character": {
                                                                                        "type": "string",
                                                                                        "description": "Quote character for enclosing field values (\" by default).",
                                                                                        "default": "\""
                                                                                    },
                                                                                    "csv.allow-comments": {
                                                                                        "type": "boolean",
                                                                                        "description": "Ignore comment lines that start with '#' (disabled by default). If enabled, make sure to also ignore parse errors to allow empty rows.",
                                                                                        "default": false
                                                                                    },
                                                                                    "csv.ignore-parse-errors": {
                                                                                        "type": "boolean",
                                                                                        "description": "Skip fields and rows with parse errors instead of failing. Fields are set to null in case of errors.",
                                                                                        "default": false
                                                                                    },
                                                                                    "csv.array-element-delimiter": {
                                                                                        "type": "string",
                                                                                        "description": "Array element delimiter string for separating array and row element values (';' by default).",
                                                                                        "default": ";"
                                                                                    },
                                                                                    "csv.escape-character": {
                                                                                        "type": "string",
                                                                                        "description": "Escape character for escaping values (disabled by default).",
                                                                                        "default": null
                                                                                    },
                                                                                    "csv.null-literal": {
                                                                                        "type": "string",
                                                                                        "description": "Null literal string that is interpreted as a null value (disabled by default).",
                                                                                        "default": null
                                                                                    },
                                                                                    "csv.write-bigdecimal-in-scientific-notation": {
                                                                                        "type": "boolean",
                                                                                        "description": "Enables representation of BigDecimal data type in scientific notation (default is true). For example, 100000 is encoded as 1E+5 by default, and will be written as 100000 if set this option to false. Note: Only when the value is not 0 and a multiple of 10 is converted to scientific notation.",
                                                                                        "default": true
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "format"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "schema": {
                                                                                        "type": "object",
                                                                                        "description": "Schema definition for the data",
                                                                                        "properties": {
                                                                                            "fields": {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "name": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "string",
                                                                                                                "int",
                                                                                                                "double",
                                                                                                                "boolean",
                                                                                                                "timestamp"
                                                                                                            ]
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "attach_processing_time": {
                                                                                        "type": "boolean",
                                                                                        "description": "Whether to attach processing time to the stream",
                                                                                        "default": false
                                                                                    },
                                                                                    "processing_time_field_name": {
                                                                                        "type": "string",
                                                                                        "description": "Name of the processing time field to attach",
                                                                                        "default": "proc_time"
                                                                                    },
                                                                                    "watermark": {
                                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                        "title": "FlinkWatermarkConfig",
                                                                                        "description": "Configuration for Flink 2.0 watermark strategy",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "time_column": {
                                                                                                "type": "string",
                                                                                                "description": "Column name to use for watermark generation",
                                                                                                "minLength": 1
                                                                                            },
                                                                                            "time_column_type": {
                                                                                                "type": "string",
                                                                                                "description": "Type of the time column",
                                                                                                "enum": [
                                                                                                    "epoch",
                                                                                                    "timestamp",
                                                                                                    "custom"
                                                                                                ],
                                                                                                "default": "epoch"
                                                                                            },
                                                                                            "time_column_epoch_unit": {
                                                                                                "type": "string",
                                                                                                "description": "Unit for epoch time column",
                                                                                                "enum": [
                                                                                                    "seconds",
                                                                                                    "milliseconds"
                                                                                                ],
                                                                                                "default": "seconds"
                                                                                            },
                                                                                            "custom_expression": {
                                                                                                "type": "string",
                                                                                                "description": "Custom SQL expression for time column when time_column_type is custom"
                                                                                            },
                                                                                            "watermark_delay": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark delay value",
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "watermark_delay_unit": {
                                                                                                "type": "string",
                                                                                                "description": "Unit for watermark delay",
                                                                                                "enum": [
                                                                                                    "seconds",
                                                                                                    "minutes",
                                                                                                    "hours"
                                                                                                ],
                                                                                                "default": "seconds"
                                                                                            },
                                                                                            "watermark_strategy_type": {
                                                                                                "type": "string",
                                                                                                "description": "Type of watermark strategy to use",
                                                                                                "enum": [
                                                                                                    "bounded-out-of-orderness",
                                                                                                    "monotonous-timestamps",
                                                                                                    "punctuated"
                                                                                                ],
                                                                                                "default": "bounded-out-of-orderness"
                                                                                            },
                                                                                            "max_out_of_orderness": {
                                                                                                "type": "integer",
                                                                                                "description": "Maximum out-of-order delay value",
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "max_out_of_orderness_unit": {
                                                                                                "type": "string",
                                                                                                "description": "Unit for max out-of-order delay",
                                                                                                "enum": [
                                                                                                    "seconds",
                                                                                                    "minutes",
                                                                                                    "hours"
                                                                                                ],
                                                                                                "default": "seconds"
                                                                                            },
                                                                                            "punctuated_watermark_expression": {
                                                                                                "type": "string",
                                                                                                "description": "SQL expression for punctuated watermark strategy"
                                                                                            },
                                                                                            "idle_source_timeout": {
                                                                                                "type": "integer",
                                                                                                "description": "Timeout for idle sources in milliseconds",
                                                                                                "minimum": 1000,
                                                                                                "default": 5000
                                                                                            },
                                                                                            "watermark_emission_interval": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark emission interval in milliseconds",
                                                                                                "minimum": 100,
                                                                                                "default": 200
                                                                                            },
                                                                                            "watermark_idleness_timeout": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark idleness timeout in milliseconds",
                                                                                                "minimum": 1000,
                                                                                                "default": 60000
                                                                                            },
                                                                                            "watermark_align_group": {
                                                                                                "type": "string",
                                                                                                "description": "Watermark alignment group for multi-source scenarios"
                                                                                            },
                                                                                            "watermark_align_max_drift": {
                                                                                                "type": "integer",
                                                                                                "description": "Maximum drift for watermark alignment in milliseconds",
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "watermark_align_update_interval": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark alignment update interval in milliseconds",
                                                                                                "minimum": 1000,
                                                                                                "default": 10000
                                                                                            }
                                                                                        },
                                                                                        "allOf": [
                                                                                            {
                                                                                                "if": {
                                                                                                    "properties": {
                                                                                                        "time_column_type": {
                                                                                                            "enum": [
                                                                                                                "custom"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then": {
                                                                                                    "required": [
                                                                                                        "custom_expression",
                                                                                                        "watermark_delay"
                                                                                                    ]
                                                                                                },
                                                                                                "else": {
                                                                                                    "required": [
                                                                                                        "time_column",
                                                                                                        "watermark_delay"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "additionalProperties": false
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "read_options"
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "JSON"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "read_options": {
                                                                        "allOf": [
                                                                            {
                                                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                "type": "object",
                                                                                "title": "JSON Reader Options",
                                                                                "properties": {
                                                                                    "format": {
                                                                                        "type": "string",
                                                                                        "description": "Specify what format to use, here should be 'json'.",
                                                                                        "default": "json"
                                                                                    },
                                                                                    "json.fail-on-missing-field": {
                                                                                        "type": "boolean",
                                                                                        "description": "Whether to fail if a field is missing or not.",
                                                                                        "default": false
                                                                                    },
                                                                                    "json.ignore-parse-errors": {
                                                                                        "type": "boolean",
                                                                                        "description": "Skip fields and rows with parse errors instead of failing. Fields are set to null in case of errors.",
                                                                                        "default": false
                                                                                    },
                                                                                    "json.timestamp-format.standard": {
                                                                                        "type": "string",
                                                                                        "description": "Specify the input and output timestamp format for TIMESTAMP and TIMESTAMP_LTZ type. Currently supported values are 'SQL' and 'ISO-8601'. 'SQL' parses input TIMESTAMP in 'yyyy-MM-dd HH:mm:ss.s{precision}' format and TIMESTAMP_LTZ in 'yyyy-MM-dd HH:mm:ss.s{precision}'Z'' format and outputs in the same format. 'ISO-8601' parses input TIMESTAMP in 'yyyy-MM-ddTHH:mm:ss.s{precision}' format and TIMESTAMP_LTZ in 'yyyy-MM-ddTHH:mm:ss.s{precision}'Z'' format and outputs in the same format.",
                                                                                        "default": "SQL",
                                                                                        "enum": [
                                                                                            "SQL",
                                                                                            "ISO-8601"
                                                                                        ]
                                                                                    },
                                                                                    "json.map-null-key.mode": {
                                                                                        "type": "string",
                                                                                        "description": "Specify the handling mode when serializing null keys for map data. Supported values: 'FAIL' (throws exception), 'DROP' (drops null key entries), 'LITERAL' (replaces null key with string literal defined by json.map-null-key.literal).",
                                                                                        "default": "FAIL",
                                                                                        "enum": [
                                                                                            "FAIL",
                                                                                            "DROP",
                                                                                            "LITERAL"
                                                                                        ]
                                                                                    },
                                                                                    "json.map-null-key.literal": {
                                                                                        "type": "string",
                                                                                        "description": "Specify string literal to replace null key when 'json.map-null-key.mode' is LITERAL.",
                                                                                        "default": "null"
                                                                                    },
                                                                                    "json.encode.decimal-as-plain-number": {
                                                                                        "type": "boolean",
                                                                                        "description": "Encode all decimals as plain numbers instead of possible scientific notations. For example, 0.000000027 is encoded as 2.7E-8 by default, and will be written as 0.000000027 if true.",
                                                                                        "default": false
                                                                                    },
                                                                                    "json.encode.ignore-null-fields": {
                                                                                        "type": "boolean",
                                                                                        "description": "Encode only non-null fields. By default, all fields will be included.",
                                                                                        "default": false
                                                                                    },
                                                                                    "decode.json-parser.enabled": {
                                                                                        "type": "boolean",
                                                                                        "description": "Whether to use the Jackson JsonParser to decode json. JsonParser is a streaming API that is faster and consumes less memory than the JsonNode approach.",
                                                                                        "default": true
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "format"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "schema": {
                                                                                        "type": "object",
                                                                                        "description": "Schema definition for the data",
                                                                                        "properties": {
                                                                                            "fields": {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "name": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "string",
                                                                                                                "int",
                                                                                                                "double",
                                                                                                                "boolean",
                                                                                                                "timestamp"
                                                                                                            ]
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "attach_processing_time": {
                                                                                        "type": "boolean",
                                                                                        "description": "Whether to attach processing time to the stream",
                                                                                        "default": false
                                                                                    },
                                                                                    "processing_time_field_name": {
                                                                                        "type": "string",
                                                                                        "description": "Name of the processing time field to attach",
                                                                                        "default": "proc_time"
                                                                                    },
                                                                                    "watermark": {
                                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                        "title": "FlinkWatermarkConfig",
                                                                                        "description": "Configuration for Flink 2.0 watermark strategy",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "time_column": {
                                                                                                "type": "string",
                                                                                                "description": "Column name to use for watermark generation",
                                                                                                "minLength": 1
                                                                                            },
                                                                                            "time_column_type": {
                                                                                                "type": "string",
                                                                                                "description": "Type of the time column",
                                                                                                "enum": [
                                                                                                    "epoch",
                                                                                                    "timestamp",
                                                                                                    "custom"
                                                                                                ],
                                                                                                "default": "epoch"
                                                                                            },
                                                                                            "time_column_epoch_unit": {
                                                                                                "type": "string",
                                                                                                "description": "Unit for epoch time column",
                                                                                                "enum": [
                                                                                                    "seconds",
                                                                                                    "milliseconds"
                                                                                                ],
                                                                                                "default": "seconds"
                                                                                            },
                                                                                            "custom_expression": {
                                                                                                "type": "string",
                                                                                                "description": "Custom SQL expression for time column when time_column_type is custom"
                                                                                            },
                                                                                            "watermark_delay": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark delay value",
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "watermark_delay_unit": {
                                                                                                "type": "string",
                                                                                                "description": "Unit for watermark delay",
                                                                                                "enum": [
                                                                                                    "seconds",
                                                                                                    "minutes",
                                                                                                    "hours"
                                                                                                ],
                                                                                                "default": "seconds"
                                                                                            },
                                                                                            "watermark_strategy_type": {
                                                                                                "type": "string",
                                                                                                "description": "Type of watermark strategy to use",
                                                                                                "enum": [
                                                                                                    "bounded-out-of-orderness",
                                                                                                    "monotonous-timestamps",
                                                                                                    "punctuated"
                                                                                                ],
                                                                                                "default": "bounded-out-of-orderness"
                                                                                            },
                                                                                            "max_out_of_orderness": {
                                                                                                "type": "integer",
                                                                                                "description": "Maximum out-of-order delay value",
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "max_out_of_orderness_unit": {
                                                                                                "type": "string",
                                                                                                "description": "Unit for max out-of-order delay",
                                                                                                "enum": [
                                                                                                    "seconds",
                                                                                                    "minutes",
                                                                                                    "hours"
                                                                                                ],
                                                                                                "default": "seconds"
                                                                                            },
                                                                                            "punctuated_watermark_expression": {
                                                                                                "type": "string",
                                                                                                "description": "SQL expression for punctuated watermark strategy"
                                                                                            },
                                                                                            "idle_source_timeout": {
                                                                                                "type": "integer",
                                                                                                "description": "Timeout for idle sources in milliseconds",
                                                                                                "minimum": 1000,
                                                                                                "default": 5000
                                                                                            },
                                                                                            "watermark_emission_interval": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark emission interval in milliseconds",
                                                                                                "minimum": 100,
                                                                                                "default": 200
                                                                                            },
                                                                                            "watermark_idleness_timeout": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark idleness timeout in milliseconds",
                                                                                                "minimum": 1000,
                                                                                                "default": 60000
                                                                                            },
                                                                                            "watermark_align_group": {
                                                                                                "type": "string",
                                                                                                "description": "Watermark alignment group for multi-source scenarios"
                                                                                            },
                                                                                            "watermark_align_max_drift": {
                                                                                                "type": "integer",
                                                                                                "description": "Maximum drift for watermark alignment in milliseconds",
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "watermark_align_update_interval": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark alignment update interval in milliseconds",
                                                                                                "minimum": 1000,
                                                                                                "default": 10000
                                                                                            }
                                                                                        },
                                                                                        "allOf": [
                                                                                            {
                                                                                                "if": {
                                                                                                    "properties": {
                                                                                                        "time_column_type": {
                                                                                                            "enum": [
                                                                                                                "custom"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then": {
                                                                                                    "required": [
                                                                                                        "custom_expression",
                                                                                                        "watermark_delay"
                                                                                                    ]
                                                                                                },
                                                                                                "else": {
                                                                                                    "required": [
                                                                                                        "time_column",
                                                                                                        "watermark_delay"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "additionalProperties": false
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "read_options"
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "Parquet"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "read_options": {
                                                                        "allOf": [
                                                                            {
                                                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                "type": "object",
                                                                                "title": "Parquet Reader Options",
                                                                                "properties": {
                                                                                    "format": {
                                                                                        "type": "string",
                                                                                        "description": "Specify what format to use, here should be 'parquet'.",
                                                                                        "default": "parquet"
                                                                                    },
                                                                                    "parquet.utc-timezone": {
                                                                                        "type": "boolean",
                                                                                        "description": "Use UTC timezone or local timezone to the conversion between epoch time and LocalDateTime. Hive 0.x/1.x/2.x use local timezone. But Hive 3.x use UTC timezone.",
                                                                                        "default": false
                                                                                    },
                                                                                    "timestamp.time.unit": {
                                                                                        "type": "string",
                                                                                        "description": "Store parquet int64/LogicalTypes timestamps in this time unit, value is nanos/micros/millis.",
                                                                                        "default": "micros",
                                                                                        "enum": [
                                                                                            "nanos",
                                                                                            "micros",
                                                                                            "millis"
                                                                                        ]
                                                                                    },
                                                                                    "write.int64.timestamp": {
                                                                                        "type": "boolean",
                                                                                        "description": "Write parquet timestamp as int64/LogicalTypes instead of int96/OriginalTypes. Note: Timestamp will be time zone agnostic (NEVER converted to a different time zone).",
                                                                                        "default": false
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "format"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "schema": {
                                                                                        "type": "object",
                                                                                        "description": "Schema definition for the data",
                                                                                        "properties": {
                                                                                            "fields": {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "name": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "string",
                                                                                                                "int",
                                                                                                                "double",
                                                                                                                "boolean",
                                                                                                                "timestamp"
                                                                                                            ]
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "attach_processing_time": {
                                                                                        "type": "boolean",
                                                                                        "description": "Whether to attach processing time to the stream",
                                                                                        "default": false
                                                                                    },
                                                                                    "processing_time_field_name": {
                                                                                        "type": "string",
                                                                                        "description": "Name of the processing time field to attach",
                                                                                        "default": "proc_time"
                                                                                    },
                                                                                    "watermark": {
                                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                        "title": "FlinkWatermarkConfig",
                                                                                        "description": "Configuration for Flink 2.0 watermark strategy",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "time_column": {
                                                                                                "type": "string",
                                                                                                "description": "Column name to use for watermark generation",
                                                                                                "minLength": 1
                                                                                            },
                                                                                            "time_column_type": {
                                                                                                "type": "string",
                                                                                                "description": "Type of the time column",
                                                                                                "enum": [
                                                                                                    "epoch",
                                                                                                    "timestamp",
                                                                                                    "custom"
                                                                                                ],
                                                                                                "default": "epoch"
                                                                                            },
                                                                                            "time_column_epoch_unit": {
                                                                                                "type": "string",
                                                                                                "description": "Unit for epoch time column",
                                                                                                "enum": [
                                                                                                    "seconds",
                                                                                                    "milliseconds"
                                                                                                ],
                                                                                                "default": "seconds"
                                                                                            },
                                                                                            "custom_expression": {
                                                                                                "type": "string",
                                                                                                "description": "Custom SQL expression for time column when time_column_type is custom"
                                                                                            },
                                                                                            "watermark_delay": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark delay value",
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "watermark_delay_unit": {
                                                                                                "type": "string",
                                                                                                "description": "Unit for watermark delay",
                                                                                                "enum": [
                                                                                                    "seconds",
                                                                                                    "minutes",
                                                                                                    "hours"
                                                                                                ],
                                                                                                "default": "seconds"
                                                                                            },
                                                                                            "watermark_strategy_type": {
                                                                                                "type": "string",
                                                                                                "description": "Type of watermark strategy to use",
                                                                                                "enum": [
                                                                                                    "bounded-out-of-orderness",
                                                                                                    "monotonous-timestamps",
                                                                                                    "punctuated"
                                                                                                ],
                                                                                                "default": "bounded-out-of-orderness"
                                                                                            },
                                                                                            "max_out_of_orderness": {
                                                                                                "type": "integer",
                                                                                                "description": "Maximum out-of-order delay value",
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "max_out_of_orderness_unit": {
                                                                                                "type": "string",
                                                                                                "description": "Unit for max out-of-order delay",
                                                                                                "enum": [
                                                                                                    "seconds",
                                                                                                    "minutes",
                                                                                                    "hours"
                                                                                                ],
                                                                                                "default": "seconds"
                                                                                            },
                                                                                            "punctuated_watermark_expression": {
                                                                                                "type": "string",
                                                                                                "description": "SQL expression for punctuated watermark strategy"
                                                                                            },
                                                                                            "idle_source_timeout": {
                                                                                                "type": "integer",
                                                                                                "description": "Timeout for idle sources in milliseconds",
                                                                                                "minimum": 1000,
                                                                                                "default": 5000
                                                                                            },
                                                                                            "watermark_emission_interval": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark emission interval in milliseconds",
                                                                                                "minimum": 100,
                                                                                                "default": 200
                                                                                            },
                                                                                            "watermark_idleness_timeout": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark idleness timeout in milliseconds",
                                                                                                "minimum": 1000,
                                                                                                "default": 60000
                                                                                            },
                                                                                            "watermark_align_group": {
                                                                                                "type": "string",
                                                                                                "description": "Watermark alignment group for multi-source scenarios"
                                                                                            },
                                                                                            "watermark_align_max_drift": {
                                                                                                "type": "integer",
                                                                                                "description": "Maximum drift for watermark alignment in milliseconds",
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "watermark_align_update_interval": {
                                                                                                "type": "integer",
                                                                                                "description": "Watermark alignment update interval in milliseconds",
                                                                                                "minimum": 1000,
                                                                                                "default": 10000
                                                                                            }
                                                                                        },
                                                                                        "allOf": [
                                                                                            {
                                                                                                "if": {
                                                                                                    "properties": {
                                                                                                        "time_column_type": {
                                                                                                            "enum": [
                                                                                                                "custom"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then": {
                                                                                                    "required": [
                                                                                                        "custom_expression",
                                                                                                        "watermark_delay"
                                                                                                    ]
                                                                                                },
                                                                                                "else": {
                                                                                                    "required": [
                                                                                                        "time_column",
                                                                                                        "watermark_delay"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "additionalProperties": false
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "read_options"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "source": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "read_options": {
                                                            "allOf": [
                                                                {
                                                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                                                    "type": "object",
                                                                    "title": "JDBC Reader Options",
                                                                    "properties": {
                                                                        "connector": {
                                                                            "type": "string",
                                                                            "description": "Specify what connector to use, here should be 'jdbc'.",
                                                                            "default": "jdbc"
                                                                        },
                                                                        "url": {
                                                                            "type": "string",
                                                                            "description": "The JDBC database url.",
                                                                            "default": null
                                                                        },
                                                                        "table-name": {
                                                                            "type": "string",
                                                                            "description": "The name of JDBC table to connect.",
                                                                            "default": null
                                                                        },
                                                                        "driver": {
                                                                            "type": "string",
                                                                            "description": "The class name of the JDBC driver to use to connect to this URL, if not set, it will automatically be derived from the URL.",
                                                                            "default": null
                                                                        },
                                                                        "compatible-mode": {
                                                                            "type": "string",
                                                                            "description": "The compatible mode of database.",
                                                                            "default": null
                                                                        },
                                                                        "username": {
                                                                            "type": "string",
                                                                            "description": "The JDBC user name. 'username' and 'password' must both be specified if any of them is specified.",
                                                                            "default": null
                                                                        },
                                                                        "password": {
                                                                            "type": "string",
                                                                            "description": "The JDBC password.",
                                                                            "default": null
                                                                        },
                                                                        "connection.max-retry-timeout": {
                                                                            "type": "string",
                                                                            "description": "Maximum timeout between retries. The timeout should be in second granularity and shouldn't be smaller than 1 second.",
                                                                            "default": "60s"
                                                                        },
                                                                        "scan.partition.column": {
                                                                            "type": "string",
                                                                            "description": "The column name used for partitioning the input. See the following Partitioned Scan section for more details.",
                                                                            "default": null
                                                                        },
                                                                        "scan.partition.num": {
                                                                            "type": "integer",
                                                                            "description": "The number of partitions.",
                                                                            "default": null
                                                                        },
                                                                        "scan.partition.lower-bound": {
                                                                            "type": "integer",
                                                                            "description": "The smallest value of the first partition.",
                                                                            "default": null
                                                                        },
                                                                        "scan.partition.upper-bound": {
                                                                            "type": "integer",
                                                                            "description": "The largest value of the last partition.",
                                                                            "default": null
                                                                        },
                                                                        "scan.fetch-size": {
                                                                            "type": "integer",
                                                                            "description": "The number of rows that should be fetched from the database when reading per round trip. If the value specified is zero, then the hint is ignored.",
                                                                            "default": 0
                                                                        },
                                                                        "scan.auto-commit": {
                                                                            "type": "boolean",
                                                                            "description": "Sets the auto-commit flag on the JDBC driver, which determines whether each statement is committed in a transaction automatically. Some JDBC drivers, specifically Postgres, may require this to be set to false in order to stream results.",
                                                                            "default": true
                                                                        },
                                                                        "lookup.cache": {
                                                                            "type": "string",
                                                                            "description": "The cache strategy for the lookup table. Currently supports NONE (no caching) and PARTIAL (caching entries on lookup operation in external database).",
                                                                            "default": "NONE",
                                                                            "enum": [
                                                                                "NONE",
                                                                                "PARTIAL"
                                                                            ]
                                                                        },
                                                                        "lookup.partial-cache.max-rows": {
                                                                            "type": "integer",
                                                                            "description": "The max number of rows of lookup cache, over this value, the oldest rows will be expired. \"lookup.cache\" must be set to \"PARTIAL\" to use this option. See the following Lookup Cache section for more details.",
                                                                            "default": null
                                                                        },
                                                                        "lookup.partial-cache.expire-after-write": {
                                                                            "type": "string",
                                                                            "description": "The max time to live for each rows in lookup cache after writing into the cache. \"lookup.cache\" must be set to \"PARTIAL\" to use this option. See the following Lookup Cache section for more details.",
                                                                            "default": null
                                                                        },
                                                                        "lookup.partial-cache.expire-after-access": {
                                                                            "type": "string",
                                                                            "description": "The max time to live for each rows in lookup cache after accessing the entry in the cache. \"lookup.cache\" must be set to \"PARTIAL\" to use this option. See the following Lookup Cache section for more details.",
                                                                            "default": null
                                                                        },
                                                                        "lookup.partial-cache.cache-missing-key": {
                                                                            "type": "boolean",
                                                                            "description": "Whether to store an empty value into the cache if the lookup key doesn't match any rows in the table. \"lookup.cache\" must be set to \"PARTIAL\" to use this option.",
                                                                            "default": true
                                                                        },
                                                                        "lookup.max-retries": {
                                                                            "type": "integer",
                                                                            "description": "The max retry times if lookup database failed.",
                                                                            "default": 3
                                                                        },
                                                                        "filter.handling.policy": {
                                                                            "type": "string",
                                                                            "description": "Fine-grained configuration to control filter push down. Supported policies are: always: Always push the supported filters to database. never: Never push any filters to database.",
                                                                            "default": "always",
                                                                            "enum": [
                                                                                "always",
                                                                                "never"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "connector",
                                                                        "url",
                                                                        "table-name"
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "schema": {
                                                                            "type": "object",
                                                                            "description": "Schema definition for the data",
                                                                            "properties": {
                                                                                "fields": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "string",
                                                                                                    "int",
                                                                                                    "double",
                                                                                                    "boolean",
                                                                                                    "timestamp"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "attach_processing_time": {
                                                                            "type": "boolean",
                                                                            "description": "Whether to attach processing time to the stream",
                                                                            "default": false
                                                                        },
                                                                        "processing_time_field_name": {
                                                                            "type": "string",
                                                                            "description": "Name of the processing time field to attach",
                                                                            "default": "proc_time"
                                                                        },
                                                                        "watermark": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "FlinkWatermarkConfig",
                                                                            "description": "Configuration for Flink 2.0 watermark strategy",
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "time_column": {
                                                                                    "type": "string",
                                                                                    "description": "Column name to use for watermark generation",
                                                                                    "minLength": 1
                                                                                },
                                                                                "time_column_type": {
                                                                                    "type": "string",
                                                                                    "description": "Type of the time column",
                                                                                    "enum": [
                                                                                        "epoch",
                                                                                        "timestamp",
                                                                                        "custom"
                                                                                    ],
                                                                                    "default": "epoch"
                                                                                },
                                                                                "time_column_epoch_unit": {
                                                                                    "type": "string",
                                                                                    "description": "Unit for epoch time column",
                                                                                    "enum": [
                                                                                        "seconds",
                                                                                        "milliseconds"
                                                                                    ],
                                                                                    "default": "seconds"
                                                                                },
                                                                                "custom_expression": {
                                                                                    "type": "string",
                                                                                    "description": "Custom SQL expression for time column when time_column_type is custom"
                                                                                },
                                                                                "watermark_delay": {
                                                                                    "type": "integer",
                                                                                    "description": "Watermark delay value",
                                                                                    "minimum": 0
                                                                                },
                                                                                "watermark_delay_unit": {
                                                                                    "type": "string",
                                                                                    "description": "Unit for watermark delay",
                                                                                    "enum": [
                                                                                        "seconds",
                                                                                        "minutes",
                                                                                        "hours"
                                                                                    ],
                                                                                    "default": "seconds"
                                                                                },
                                                                                "watermark_strategy_type": {
                                                                                    "type": "string",
                                                                                    "description": "Type of watermark strategy to use",
                                                                                    "enum": [
                                                                                        "bounded-out-of-orderness",
                                                                                        "monotonous-timestamps",
                                                                                        "punctuated"
                                                                                    ],
                                                                                    "default": "bounded-out-of-orderness"
                                                                                },
                                                                                "max_out_of_orderness": {
                                                                                    "type": "integer",
                                                                                    "description": "Maximum out-of-order delay value",
                                                                                    "minimum": 0
                                                                                },
                                                                                "max_out_of_orderness_unit": {
                                                                                    "type": "string",
                                                                                    "description": "Unit for max out-of-order delay",
                                                                                    "enum": [
                                                                                        "seconds",
                                                                                        "minutes",
                                                                                        "hours"
                                                                                    ],
                                                                                    "default": "seconds"
                                                                                },
                                                                                "punctuated_watermark_expression": {
                                                                                    "type": "string",
                                                                                    "description": "SQL expression for punctuated watermark strategy"
                                                                                },
                                                                                "idle_source_timeout": {
                                                                                    "type": "integer",
                                                                                    "description": "Timeout for idle sources in milliseconds",
                                                                                    "minimum": 1000,
                                                                                    "default": 5000
                                                                                },
                                                                                "watermark_emission_interval": {
                                                                                    "type": "integer",
                                                                                    "description": "Watermark emission interval in milliseconds",
                                                                                    "minimum": 100,
                                                                                    "default": 200
                                                                                },
                                                                                "watermark_idleness_timeout": {
                                                                                    "type": "integer",
                                                                                    "description": "Watermark idleness timeout in milliseconds",
                                                                                    "minimum": 1000,
                                                                                    "default": 60000
                                                                                },
                                                                                "watermark_align_group": {
                                                                                    "type": "string",
                                                                                    "description": "Watermark alignment group for multi-source scenarios"
                                                                                },
                                                                                "watermark_align_max_drift": {
                                                                                    "type": "integer",
                                                                                    "description": "Maximum drift for watermark alignment in milliseconds",
                                                                                    "minimum": 0
                                                                                },
                                                                                "watermark_align_update_interval": {
                                                                                    "type": "integer",
                                                                                    "description": "Watermark alignment update interval in milliseconds",
                                                                                    "minimum": 1000,
                                                                                    "default": 10000
                                                                                }
                                                                            },
                                                                            "allOf": [
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "time_column_type": {
                                                                                                "enum": [
                                                                                                    "custom"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "required": [
                                                                                            "custom_expression",
                                                                                            "watermark_delay"
                                                                                        ]
                                                                                    },
                                                                                    "else": {
                                                                                        "required": [
                                                                                            "time_column",
                                                                                            "watermark_delay"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "additionalProperties": false
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "read_options"
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "source": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "Kafka"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "read_options": {
                                                            "allOf": [
                                                                {
                                                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                                                    "type": "object",
                                                                    "title": "Kafka Reader Options",
                                                                    "properties": {
                                                                        "connector": {
                                                                            "type": "string",
                                                                            "description": "Specify what connector to use, for Kafka use 'kafka'.",
                                                                            "default": "kafka"
                                                                        },
                                                                        "topic": {
                                                                            "type": "string",
                                                                            "description": "Topic name(s) to read data from or to write data into. Supports topic list separated by semicolon. Only one of 'topic' and 'topic-pattern' can be specified.",
                                                                            "default": null
                                                                        },
                                                                        "topic-pattern": {
                                                                            "type": "string",
                                                                            "description": "Regular expression pattern for topic names to subscribe or write to. Supports dynamic topic discovery.",
                                                                            "default": null
                                                                        },
                                                                        "properties.bootstrap.servers": {
                                                                            "type": "string",
                                                                            "description": "Comma separated list of Kafka brokers.",
                                                                            "default": null
                                                                        },
                                                                        "properties.group.id": {
                                                                            "type": "string",
                                                                            "description": "ID of the consumer group for Kafka source. If not specified, an automatic ID is generated.",
                                                                            "default": null
                                                                        },
                                                                        "format": {
                                                                            "type": "string",
                                                                            "description": "Format used to deserialize and serialize the value part of Kafka messages. Synonym for 'value.format'.",
                                                                            "enum": [
                                                                                "json",
                                                                                "csv",
                                                                                "avro"
                                                                            ],
                                                                            "default": "json"
                                                                        },
                                                                        "key.format": {
                                                                            "type": "string",
                                                                            "description": "Format used to deserialize and serialize the key part of Kafka messages.",
                                                                            "enum": [
                                                                                "json",
                                                                                "csv",
                                                                                "avro"
                                                                            ],
                                                                            "default": "json"
                                                                        },
                                                                        "key.fields": {
                                                                            "type": "array",
                                                                            "description": "Explicit list of physical columns from the table schema configuring the data type for the key format.",
                                                                            "default": [],
                                                                            "items": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "key.fields-prefix": {
                                                                            "type": "string",
                                                                            "description": "Custom prefix for all fields of the key format to avoid name clashes with the value format fields.",
                                                                            "default": null
                                                                        },
                                                                        "value.format": {
                                                                            "type": "string",
                                                                            "description": "Format used to deserialize and serialize the value part of Kafka messages.",
                                                                            "default": null
                                                                        },
                                                                        "value.fields-include": {
                                                                            "type": "string",
                                                                            "description": "Strategy to deal with key columns in the data type of the value format.",
                                                                            "default": "ALL",
                                                                            "enum": [
                                                                                "ALL",
                                                                                "EXCEPT_KEY"
                                                                            ]
                                                                        },
                                                                        "scan.startup.mode": {
                                                                            "type": "string",
                                                                            "description": "Startup mode for Kafka consumer. Values include 'earliest-offset', 'latest-offset', 'group-offsets', 'timestamp', and 'specific-offsets'.",
                                                                            "default": "group-offsets",
                                                                            "enum": [
                                                                                "earliest-offset",
                                                                                "latest-offset",
                                                                                "group-offsets",
                                                                                "timestamp",
                                                                                "specific-offsets"
                                                                            ]
                                                                        },
                                                                        "scan.startup.specific-offsets": {
                                                                            "type": "string",
                                                                            "description": "Specify offsets for each partition for 'specific-offsets' startup mode.",
                                                                            "default": null
                                                                        },
                                                                        "scan.startup.timestamp-millis": {
                                                                            "type": "integer",
                                                                            "description": "Start from specified epoch timestamp (milliseconds) for 'timestamp' startup mode.",
                                                                            "default": null
                                                                        },
                                                                        "scan.bounded.mode": {
                                                                            "type": "string",
                                                                            "description": "Bounded mode for Kafka consumer, e.g., 'latest-offset', 'group-offsets', 'timestamp', 'specific-offsets'.",
                                                                            "default": "unbounded",
                                                                            "enum": [
                                                                                "unbounded",
                                                                                "latest-offset",
                                                                                "group-offsets",
                                                                                "timestamp",
                                                                                "specific-offsets"
                                                                            ]
                                                                        },
                                                                        "scan.bounded.specific-offsets": {
                                                                            "type": "string",
                                                                            "description": "Specify offsets for each partition in bounded mode.",
                                                                            "default": null
                                                                        },
                                                                        "scan.bounded.timestamp-millis": {
                                                                            "type": "integer",
                                                                            "description": "End at specified epoch timestamp (milliseconds) for bounded mode with timestamp.",
                                                                            "default": null
                                                                        },
                                                                        "scan.topic-partition-discovery.interval": {
                                                                            "type": "string",
                                                                            "description": "Interval for consumer to discover dynamically created Kafka topics and partitions.",
                                                                            "default": "5 minutes"
                                                                        },
                                                                        "scan.parallelism": {
                                                                            "type": "integer",
                                                                            "description": "Parallelism of the Kafka source operator.",
                                                                            "default": null
                                                                        }
                                                                    },
                                                                    "patternProperties": {
                                                                        "^properties\\..*$": {
                                                                            "type": "string",
                                                                            "description": "Kafka properties (e.g., properties.bootstrap.servers, properties.security.protocol, etc.)"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "connector",
                                                                        "properties.bootstrap.servers",
                                                                        "format"
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "schema": {
                                                                            "type": "object",
                                                                            "description": "Schema definition for the data",
                                                                            "properties": {
                                                                                "fields": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "string",
                                                                                                    "int",
                                                                                                    "double",
                                                                                                    "boolean",
                                                                                                    "timestamp"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "attach_processing_time": {
                                                                            "type": "boolean",
                                                                            "description": "Whether to attach processing time to the stream",
                                                                            "default": false
                                                                        },
                                                                        "processing_time_field_name": {
                                                                            "type": "string",
                                                                            "description": "Name of the processing time field to attach",
                                                                            "default": "proc_time"
                                                                        },
                                                                        "watermark": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "FlinkWatermarkConfig",
                                                                            "description": "Configuration for Flink 2.0 watermark strategy",
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "time_column": {
                                                                                    "type": "string",
                                                                                    "description": "Column name to use for watermark generation",
                                                                                    "minLength": 1
                                                                                },
                                                                                "time_column_type": {
                                                                                    "type": "string",
                                                                                    "description": "Type of the time column",
                                                                                    "enum": [
                                                                                        "epoch",
                                                                                        "timestamp",
                                                                                        "custom"
                                                                                    ],
                                                                                    "default": "epoch"
                                                                                },
                                                                                "time_column_epoch_unit": {
                                                                                    "type": "string",
                                                                                    "description": "Unit for epoch time column",
                                                                                    "enum": [
                                                                                        "seconds",
                                                                                        "milliseconds"
                                                                                    ],
                                                                                    "default": "seconds"
                                                                                },
                                                                                "custom_expression": {
                                                                                    "type": "string",
                                                                                    "description": "Custom SQL expression for time column when time_column_type is custom"
                                                                                },
                                                                                "watermark_delay": {
                                                                                    "type": "integer",
                                                                                    "description": "Watermark delay value",
                                                                                    "minimum": 0
                                                                                },
                                                                                "watermark_delay_unit": {
                                                                                    "type": "string",
                                                                                    "description": "Unit for watermark delay",
                                                                                    "enum": [
                                                                                        "seconds",
                                                                                        "minutes",
                                                                                        "hours"
                                                                                    ],
                                                                                    "default": "seconds"
                                                                                },
                                                                                "watermark_strategy_type": {
                                                                                    "type": "string",
                                                                                    "description": "Type of watermark strategy to use",
                                                                                    "enum": [
                                                                                        "bounded-out-of-orderness",
                                                                                        "monotonous-timestamps",
                                                                                        "punctuated"
                                                                                    ],
                                                                                    "default": "bounded-out-of-orderness"
                                                                                },
                                                                                "max_out_of_orderness": {
                                                                                    "type": "integer",
                                                                                    "description": "Maximum out-of-order delay value",
                                                                                    "minimum": 0
                                                                                },
                                                                                "max_out_of_orderness_unit": {
                                                                                    "type": "string",
                                                                                    "description": "Unit for max out-of-order delay",
                                                                                    "enum": [
                                                                                        "seconds",
                                                                                        "minutes",
                                                                                        "hours"
                                                                                    ],
                                                                                    "default": "seconds"
                                                                                },
                                                                                "punctuated_watermark_expression": {
                                                                                    "type": "string",
                                                                                    "description": "SQL expression for punctuated watermark strategy"
                                                                                },
                                                                                "idle_source_timeout": {
                                                                                    "type": "integer",
                                                                                    "description": "Timeout for idle sources in milliseconds",
                                                                                    "minimum": 1000,
                                                                                    "default": 5000
                                                                                },
                                                                                "watermark_emission_interval": {
                                                                                    "type": "integer",
                                                                                    "description": "Watermark emission interval in milliseconds",
                                                                                    "minimum": 100,
                                                                                    "default": 200
                                                                                },
                                                                                "watermark_idleness_timeout": {
                                                                                    "type": "integer",
                                                                                    "description": "Watermark idleness timeout in milliseconds",
                                                                                    "minimum": 1000,
                                                                                    "default": 60000
                                                                                },
                                                                                "watermark_align_group": {
                                                                                    "type": "string",
                                                                                    "description": "Watermark alignment group for multi-source scenarios"
                                                                                },
                                                                                "watermark_align_max_drift": {
                                                                                    "type": "integer",
                                                                                    "description": "Maximum drift for watermark alignment in milliseconds",
                                                                                    "minimum": 0
                                                                                },
                                                                                "watermark_align_update_interval": {
                                                                                    "type": "integer",
                                                                                    "description": "Watermark alignment update interval in milliseconds",
                                                                                    "minimum": 1000,
                                                                                    "default": 10000
                                                                                }
                                                                            },
                                                                            "allOf": [
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "time_column_type": {
                                                                                                "enum": [
                                                                                                    "custom"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "required": [
                                                                                            "custom_expression",
                                                                                            "watermark_delay"
                                                                                        ]
                                                                                    },
                                                                                    "else": {
                                                                                        "required": [
                                                                                            "time_column",
                                                                                            "watermark_delay"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "additionalProperties": false
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "read_options"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Mapper"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Schema transformation with function registry support for PyFlink",
                                        "type": "object",
                                        "ui_type": "tab-container",
                                        "ui_properties": {
                                            "module_name": "Mapper",
                                            "color": "#32D1A4",
                                            "icon": "/assets/buildPipeline/28.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "derived_fields": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "function_name",
                                                        "parameters"
                                                    ],
                                                    "properties": {
                                                        "function_name": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "description": "Function name to execute"
                                                        },
                                                        "parameters": {
                                                            "type": "object",
                                                            "description": "Function parameters including input_fields and output_fields",
                                                            "properties": {
                                                                "input_fields": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "List of input field names"
                                                                },
                                                                "output_fields": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "List of output field names"
                                                                }
                                                            },
                                                            "additionalProperties": true
                                                        }
                                                    }
                                                }
                                            },
                                            "select_columns": {
                                                "type": "array",
                                                "description": "List of column names to select from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "drop_columns": {
                                                "type": "array",
                                                "description": "List of column names to drop from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "rename_columns": {
                                                "type": "object",
                                                "description": "Mapping of old column names to new column names",
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        },
                                        "required": [
                                            "derived_fields"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Filter"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Filter transformation for PyFlink streaming",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Filter",
                                            "color": "#f5bc2a",
                                            "icon": "/assets/buildPipeline/display/filter.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "condition": {
                                                "type": "string",
                                                "minLength": 1,
                                                "description": "SQL condition expression for filtering records"
                                            }
                                        },
                                        "required": [
                                            "condition"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Aggregator"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Aggregator transformation for PyFlink streaming",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Aggregator",
                                            "color": "#d43faa",
                                            "icon": "/assets/buildPipeline/squre/2.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "aggregate": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "target_column": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "expression": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "ui-hint": "expression"
                                                        }
                                                    }
                                                }
                                            },
                                            "group_by": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            },
                                            "pivot": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "pivot_column": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "pivot_values": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "window": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "FlinkWindowConfig",
                                                "description": "Configuration for Flink 2.0 window operations",
                                                "type": "object",
                                                "properties": {
                                                    "window_type": {
                                                        "type": "string",
                                                        "description": "Type of window to use",
                                                        "enum": [
                                                            "tumbling",
                                                            "sliding",
                                                            "session",
                                                            "global",
                                                            "cumulative"
                                                        ],
                                                        "default": "tumbling"
                                                    },
                                                    "window_size": {
                                                        "type": "integer",
                                                        "description": "Size of the window",
                                                        "minimum": 1
                                                    },
                                                    "window_size_unit": {
                                                        "type": "string",
                                                        "description": "Unit for window size",
                                                        "enum": [
                                                            "seconds",
                                                            "minutes",
                                                            "hours"
                                                        ],
                                                        "default": "minutes"
                                                    },
                                                    "window_slide": {
                                                        "type": "integer",
                                                        "description": "Slide interval for sliding windows",
                                                        "minimum": 1
                                                    },
                                                    "window_slide_unit": {
                                                        "type": "string",
                                                        "description": "Unit for window slide",
                                                        "enum": [
                                                            "seconds",
                                                            "minutes",
                                                            "hours"
                                                        ],
                                                        "default": "minutes"
                                                    },
                                                    "session_gap": {
                                                        "type": "integer",
                                                        "description": "Gap for session windows",
                                                        "minimum": 1
                                                    },
                                                    "session_gap_unit": {
                                                        "type": "string",
                                                        "description": "Unit for session gap",
                                                        "enum": [
                                                            "seconds",
                                                            "minutes",
                                                            "hours"
                                                        ],
                                                        "default": "minutes"
                                                    },
                                                    "time_type": {
                                                        "type": "string",
                                                        "description": "Type of time for window operations",
                                                        "enum": [
                                                            "event",
                                                            "processing"
                                                        ],
                                                        "default": "event"
                                                    },
                                                    "time_column": {
                                                        "type": "string",
                                                        "description": "Column to use for time-based windowing",
                                                        "minLength": 1
                                                    },
                                                    "time_column_type": {
                                                        "type": "string",
                                                        "description": "Type of the time column",
                                                        "enum": [
                                                            "epoch",
                                                            "timestamp",
                                                            "datetime"
                                                        ],
                                                        "default": "epoch"
                                                    },
                                                    "allowed_lateness": {
                                                        "type": "integer",
                                                        "description": "Allowed lateness value",
                                                        "minimum": 0
                                                    },
                                                    "allowed_lateness_unit": {
                                                        "type": "string",
                                                        "description": "Unit for allowed lateness",
                                                        "enum": [
                                                            "seconds",
                                                            "minutes",
                                                            "hours"
                                                        ],
                                                        "default": "seconds"
                                                    },
                                                    "side_output_late_data": {
                                                        "type": "boolean",
                                                        "description": "Whether to output late data to a side output",
                                                        "default": false
                                                    },
                                                    "window_aggregation_mode": {
                                                        "type": "string",
                                                        "description": "Mode for window aggregation",
                                                        "enum": [
                                                            "incremental",
                                                            "complete"
                                                        ],
                                                        "default": "incremental"
                                                    },
                                                    "window_early_trigger": {
                                                        "type": "object",
                                                        "description": "Early trigger configuration for windows",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean",
                                                                "description": "Enable early trigger",
                                                                "default": false
                                                            },
                                                            "trigger_interval": {
                                                                "type": "integer",
                                                                "description": "Trigger interval value",
                                                                "minimum": 1
                                                            },
                                                            "trigger_interval_unit": {
                                                                "type": "string",
                                                                "description": "Unit for trigger interval",
                                                                "enum": [
                                                                    "seconds",
                                                                    "minutes",
                                                                    "hours"
                                                                ],
                                                                "default": "seconds"
                                                            }
                                                        }
                                                    },
                                                    "window_late_trigger": {
                                                        "type": "object",
                                                        "description": "Late trigger configuration for windows",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean",
                                                                "description": "Enable late trigger",
                                                                "default": false
                                                            },
                                                            "trigger_interval": {
                                                                "type": "integer",
                                                                "description": "Trigger interval value",
                                                                "minimum": 1
                                                            },
                                                            "trigger_interval_unit": {
                                                                "type": "string",
                                                                "description": "Unit for trigger interval",
                                                                "enum": [
                                                                    "seconds",
                                                                    "minutes",
                                                                    "hours"
                                                                ],
                                                                "default": "seconds"
                                                            }
                                                        }
                                                    },
                                                    "window_state_ttl": {
                                                        "type": "integer",
                                                        "description": "State TTL for window state in milliseconds",
                                                        "minimum": 0
                                                    },
                                                    "window_cleanup_mode": {
                                                        "type": "string",
                                                        "description": "Cleanup mode for window state",
                                                        "enum": [
                                                            "disabled",
                                                            "cleanup_after_window_end",
                                                            "cleanup_after_trigger"
                                                        ],
                                                        "default": "cleanup_after_window_end"
                                                    },
                                                    "window_watermark_strategy": {
                                                        "type": "string",
                                                        "description": "Watermark strategy for window operations",
                                                        "enum": [
                                                            "end_of_window",
                                                            "with_watermark"
                                                        ],
                                                        "default": "end_of_window"
                                                    }
                                                },
                                                "required": [
                                                    "window_type",
                                                    "window_size",
                                                    "time_column"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "group_by",
                                            "aggregate"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Router"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Router transformation for PyFlink streaming",
                                        "type": "object",
                                        "properties": {
                                            "conditions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name of the route condition"
                                                        },
                                                        "condition": {
                                                            "type": "string",
                                                            "description": "SQL condition expression for routing"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "condition"
                                                    ]
                                                },
                                                "minItems": 1
                                            }
                                        },
                                        "required": [
                                            "conditions"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Writer"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Writer transformation for PyFlink 2.0 streaming",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Target",
                                            "color": "#07a260",
                                            "icon": "/assets/buildPipeline/7.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 0,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "target": {
                                                "type": "object",
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "description": "Schema for PyFlink Target",
                                                "title": "Target",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Target Name",
                                                        "minLength": 1
                                                    },
                                                    "target_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "File",
                                                            "Relational",
                                                            "Kafka",
                                                            "Iceberg"
                                                        ]
                                                    },
                                                    "connection": {
                                                        "type": "object",
                                                        "items": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Connection",
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "connection_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Local",
                                                                        "GCS",
                                                                        "S3",
                                                                        "BigQuery",
                                                                        "PostgreSQL",
                                                                        "Snowflake",
                                                                        "Kafka",
                                                                        "Iceberg"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "connection_type"
                                                            ],
                                                            "allOf": [
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Local"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "GCS"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "S3"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Kafka"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bootstrap_servers": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "topic": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "group_id": {
                                                                                "type": "string",
                                                                                "default": "pyflink-consumer-group"
                                                                            },
                                                                            "auto_offset_reset": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "earliest",
                                                                                    "latest"
                                                                                ],
                                                                                "default": "earliest"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bootstrap_servers",
                                                                            "topic"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "BigQuery"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "supportsIncremental": true,
                                                                        "supported_sync_modes": [
                                                                            "overwrite",
                                                                            "append",
                                                                            "append_dedup"
                                                                        ],
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "BigQuery Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "project_id",
                                                                                "credentials_json"
                                                                            ],
                                                                            "properties": {
                                                                                "project_id": {
                                                                                    "type": "string",
                                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                                    "title": "Project ID"
                                                                                },
                                                                                "dataset_id": {
                                                                                    "type": "string",
                                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                                    "title": "Default Dataset ID"
                                                                                },
                                                                                "credentials_json": {
                                                                                    "type": "string",
                                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                                    "title": "Credentials JSON",
                                                                                    "bh_secret": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "PostgreSQL"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Postgres Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "port",
                                                                                "database",
                                                                                "username"
                                                                            ],
                                                                            "properties": {
                                                                                "host": {
                                                                                    "title": "Host",
                                                                                    "description": "Hostname of the database.",
                                                                                    "type": "string",
                                                                                    "order": 0,
                                                                                    "group": "db"
                                                                                },
                                                                                "port": {
                                                                                    "title": "Port",
                                                                                    "description": "Port of the database.",
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 65536,
                                                                                    "default": 5432,
                                                                                    "examples": [
                                                                                        "5432"
                                                                                    ],
                                                                                    "order": 1,
                                                                                    "group": "db"
                                                                                },
                                                                                "database": {
                                                                                    "title": "Database Name",
                                                                                    "description": "Name of the database.",
                                                                                    "type": "string",
                                                                                    "order": 2,
                                                                                    "group": "db"
                                                                                },
                                                                                "schemas": {
                                                                                    "title": "Schemas",
                                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "minItems": 0,
                                                                                    "uniqueItems": true,
                                                                                    "default": [
                                                                                        "public"
                                                                                    ],
                                                                                    "order": 3,
                                                                                    "group": "db"
                                                                                },
                                                                                "username": {
                                                                                    "title": "Username",
                                                                                    "description": "Username to access the database.",
                                                                                    "type": "string",
                                                                                    "order": 4,
                                                                                    "group": "auth"
                                                                                },
                                                                                "password": {
                                                                                    "title": "Password",
                                                                                    "description": "Password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "order": 5,
                                                                                    "group": "auth",
                                                                                    "always_show": true
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                                    "type": "string",
                                                                                    "order": 6,
                                                                                    "group": "advanced",
                                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                                },
                                                                                "ssl_mode": {
                                                                                    "title": "SSL Modes",
                                                                                    "description": "SSL connection modes.",
                                                                                    "type": "object",
                                                                                    "order": 8,
                                                                                    "group": "security",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "disable",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "disable",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "allow",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Enables encryption only when required by the source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "allow",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "prefer",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "prefer",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "require",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "require",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-ca",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-ca",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-full",
                                                                                            "additionalProperties": true,
                                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-full",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "replication_method": {
                                                                                    "type": "object",
                                                                                    "title": "Update Method",
                                                                                    "description": "Configures how data is extracted from the database.",
                                                                                    "order": 9,
                                                                                    "group": "advanced",
                                                                                    "default": "CDC",
                                                                                    "display_type": "radio",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                                            "required": [
                                                                                                "method",
                                                                                                "replication_slot",
                                                                                                "publication"
                                                                                            ],
                                                                                            "additionalProperties": true,
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "CDC",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "plugin": {
                                                                                                    "type": "string",
                                                                                                    "title": "Plugin",
                                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                                    "enum": [
                                                                                                        "pgoutput"
                                                                                                    ],
                                                                                                    "default": "pgoutput",
                                                                                                    "order": 2
                                                                                                },
                                                                                                "replication_slot": {
                                                                                                    "type": "string",
                                                                                                    "title": "Replication Slot",
                                                                                                    "description": "A plugin logical replication slot.",
                                                                                                    "order": 3
                                                                                                },
                                                                                                "publication": {
                                                                                                    "type": "string",
                                                                                                    "title": "Publication",
                                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                                    "order": 4
                                                                                                },
                                                                                                "initial_waiting_seconds": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                                    "default": 1200,
                                                                                                    "order": 5,
                                                                                                    "min": 120,
                                                                                                    "max": 2400
                                                                                                },
                                                                                                "queue_size": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Size of the queue (Advanced)",
                                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                                    "default": 10000,
                                                                                                    "order": 6,
                                                                                                    "min": 1000,
                                                                                                    "max": 10000
                                                                                                },
                                                                                                "lsn_commit_behaviour": {
                                                                                                    "type": "string",
                                                                                                    "title": "LSN commit behaviour",
                                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                                    "enum": [
                                                                                                        "While reading Data",
                                                                                                        "After loading Data in the destination"
                                                                                                    ],
                                                                                                    "default": "After loading Data in the destination",
                                                                                                    "order": 7
                                                                                                },
                                                                                                "heartbeat_action_query": {
                                                                                                    "type": "string",
                                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                                    "default": "",
                                                                                                    "order": 8
                                                                                                },
                                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                                    "type": "string",
                                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                                    "enum": [
                                                                                                        "Fail sync",
                                                                                                        "Re-sync data"
                                                                                                    ],
                                                                                                    "default": "Fail sync",
                                                                                                    "order": 9
                                                                                                },
                                                                                                "initial_load_timeout_hours": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                                    "default": 8,
                                                                                                    "min": 4,
                                                                                                    "max": 24,
                                                                                                    "order": 10
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Detect Changes with Xmin System Column",
                                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Xmin",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Standard",
                                                                                                    "order": 8
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "groups": [
                                                                                {
                                                                                    "id": "db"
                                                                                },
                                                                                {
                                                                                    "id": "auth"
                                                                                },
                                                                                {
                                                                                    "id": "security",
                                                                                    "title": "Security"
                                                                                },
                                                                                {
                                                                                    "id": "advanced",
                                                                                    "title": "Advanced"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Snowflake"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Snowflake Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "role",
                                                                                "warehouse",
                                                                                "database"
                                                                            ],
                                                                            "properties": {
                                                                                "credentials": {
                                                                                    "title": "Authorization Method",
                                                                                    "type": "object",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "type": "object",
                                                                                            "title": "OAuth2.0",
                                                                                            "order": 0,
                                                                                            "required": [
                                                                                                "client_id",
                                                                                                "client_secret",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "bh_hidden": true,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "OAuth",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "client_id": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client ID",
                                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_secret": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Secret",
                                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "access_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Access Token",
                                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                },
                                                                                                "refresh_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Refresh Token",
                                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Key Pair Authentication",
                                                                                            "type": "object",
                                                                                            "order": 1,
                                                                                            "required": [
                                                                                                "username",
                                                                                                "private_key"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Key Pair Authentication",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "private_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Private Key",
                                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                                    "multiline": true,
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "private_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Passphrase",
                                                                                                    "description": "Passphrase for private key",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Username and Password",
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "username",
                                                                                                "password",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "order": 2,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "username/password",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "password": {
                                                                                                    "description": "The password associated with the username.",
                                                                                                    "type": "string",
                                                                                                    "bh_secret": true,
                                                                                                    "title": "Password",
                                                                                                    "order": 2
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "order": 0
                                                                                },
                                                                                "host": {
                                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                                    "examples": [
                                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Account Name",
                                                                                    "order": 1
                                                                                },
                                                                                "role": {
                                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                                    "examples": [
                                                                                        "BH_ROLE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Role",
                                                                                    "order": 2
                                                                                },
                                                                                "warehouse": {
                                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_WAREHOUSE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Warehouse",
                                                                                    "order": 3
                                                                                },
                                                                                "database": {
                                                                                    "description": "The database you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_DATABASE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Database",
                                                                                    "order": 4
                                                                                },
                                                                                "schema": {
                                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                                    "examples": [
                                                                                        "BH_SCHEMA"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Schema",
                                                                                    "order": 5
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                                    "title": "JDBC URL Params",
                                                                                    "type": "string",
                                                                                    "order": 6
                                                                                }
                                                                            }
                                                                        },
                                                                        "advanced_auth": {
                                                                            "auth_flow_type": "oauth2.0",
                                                                            "predicate_key": [
                                                                                "credentials",
                                                                                "auth_type"
                                                                            ],
                                                                            "predicate_value": "OAuth",
                                                                            "oauth_config_specification": {
                                                                                "oauth_user_input_from_connector_config_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "host"
                                                                                            ]
                                                                                        },
                                                                                        "role": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "role"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "access_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "access_token"
                                                                                            ]
                                                                                        },
                                                                                        "refresh_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "refresh_token"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_input_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_id"
                                                                                            ]
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_secret"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Iceberg"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "warehouse_path": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "catalog_name": {
                                                                                "type": "string",
                                                                                "default": "iceberg"
                                                                            },
                                                                            "namespace": {
                                                                                "type": "string",
                                                                                "default": "default"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "warehouse_path"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "load_mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "append",
                                                            "overwrite"
                                                        ],
                                                        "default": "append"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "target_type",
                                                    "connection"
                                                ],
                                                "allOf": [
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "file_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "format": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "csv",
                                                                        "json",
                                                                        "parquet"
                                                                    ],
                                                                    "default": "csv"
                                                                },
                                                                "partition_by": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "required": [
                                                                "file_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "Kafka"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "connection": {
                                                                    "type": "object",
                                                                    "items": {
                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                        "title": "Connection",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "connection_type": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "Local",
                                                                                    "GCS",
                                                                                    "S3",
                                                                                    "BigQuery",
                                                                                    "PostgreSQL",
                                                                                    "Snowflake",
                                                                                    "Kafka",
                                                                                    "Iceberg"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "connection_type"
                                                                        ],
                                                                        "allOf": [
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "connection_type": {
                                                                                            "const": "Local"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "properties": {
                                                                                        "file_path_prefix": {
                                                                                            "type": "string",
                                                                                            "default": ""
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "file_path_prefix"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "connection_type": {
                                                                                            "const": "GCS"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "properties": {
                                                                                        "bucket": {
                                                                                            "type": "string",
                                                                                            "minLength": 1
                                                                                        },
                                                                                        "file_path_prefix": {
                                                                                            "type": "string",
                                                                                            "default": ""
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "bucket",
                                                                                        "file_path_prefix"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "connection_type": {
                                                                                            "const": "S3"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "properties": {
                                                                                        "bucket": {
                                                                                            "type": "string",
                                                                                            "minLength": 1
                                                                                        },
                                                                                        "file_path_prefix": {
                                                                                            "type": "string",
                                                                                            "default": ""
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "bucket",
                                                                                        "file_path_prefix"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "connection_type": {
                                                                                            "const": "Kafka"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "properties": {
                                                                                        "bootstrap_servers": {
                                                                                            "type": "string",
                                                                                            "minLength": 1
                                                                                        },
                                                                                        "topic": {
                                                                                            "type": "string",
                                                                                            "minLength": 1
                                                                                        },
                                                                                        "group_id": {
                                                                                            "type": "string",
                                                                                            "default": "pyflink-consumer-group"
                                                                                        },
                                                                                        "auto_offset_reset": {
                                                                                            "type": "string",
                                                                                            "enum": [
                                                                                                "earliest",
                                                                                                "latest"
                                                                                            ],
                                                                                            "default": "earliest"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "bootstrap_servers",
                                                                                        "topic"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "connection_type": {
                                                                                            "const": "BigQuery"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "documentationUrl": "N/A",
                                                                                    "supportsIncremental": true,
                                                                                    "supported_sync_modes": [
                                                                                        "overwrite",
                                                                                        "append",
                                                                                        "append_dedup"
                                                                                    ],
                                                                                    "connectionSpecification": {
                                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                        "title": "BigQuery Source Spec",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "project_id",
                                                                                            "credentials_json"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "project_id": {
                                                                                                "type": "string",
                                                                                                "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                                                "title": "Project ID"
                                                                                            },
                                                                                            "dataset_id": {
                                                                                                "type": "string",
                                                                                                "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                                                "title": "Default Dataset ID"
                                                                                            },
                                                                                            "credentials_json": {
                                                                                                "type": "string",
                                                                                                "description": "The contents of your Service Account Key JSON file.",
                                                                                                "title": "Credentials JSON",
                                                                                                "bh_secret": true
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "connection_type": {
                                                                                            "const": "PostgreSQL"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "documentationUrl": "N/A",
                                                                                    "connectionSpecification": {
                                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                        "title": "Postgres Source Spec",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "host",
                                                                                            "port",
                                                                                            "database",
                                                                                            "username"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "host": {
                                                                                                "title": "Host",
                                                                                                "description": "Hostname of the database.",
                                                                                                "type": "string",
                                                                                                "order": 0,
                                                                                                "group": "db"
                                                                                            },
                                                                                            "port": {
                                                                                                "title": "Port",
                                                                                                "description": "Port of the database.",
                                                                                                "type": "integer",
                                                                                                "minimum": 0,
                                                                                                "maximum": 65536,
                                                                                                "default": 5432,
                                                                                                "examples": [
                                                                                                    "5432"
                                                                                                ],
                                                                                                "order": 1,
                                                                                                "group": "db"
                                                                                            },
                                                                                            "database": {
                                                                                                "title": "Database Name",
                                                                                                "description": "Name of the database.",
                                                                                                "type": "string",
                                                                                                "order": 2,
                                                                                                "group": "db"
                                                                                            },
                                                                                            "schemas": {
                                                                                                "title": "Schemas",
                                                                                                "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "minItems": 0,
                                                                                                "uniqueItems": true,
                                                                                                "default": [
                                                                                                    "public"
                                                                                                ],
                                                                                                "order": 3,
                                                                                                "group": "db"
                                                                                            },
                                                                                            "username": {
                                                                                                "title": "Username",
                                                                                                "description": "Username to access the database.",
                                                                                                "type": "string",
                                                                                                "order": 4,
                                                                                                "group": "auth"
                                                                                            },
                                                                                            "password": {
                                                                                                "title": "Password",
                                                                                                "description": "Password associated with the username.",
                                                                                                "type": "string",
                                                                                                "bh_secret": true,
                                                                                                "order": 5,
                                                                                                "group": "auth",
                                                                                                "always_show": true
                                                                                            },
                                                                                            "jdbc_url_params": {
                                                                                                "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                                                "title": "JDBC URL Parameters (Advanced)",
                                                                                                "type": "string",
                                                                                                "order": 6,
                                                                                                "group": "advanced",
                                                                                                "pattern_descriptor": "key1=value1&key2=value2"
                                                                                            },
                                                                                            "ssl_mode": {
                                                                                                "title": "SSL Modes",
                                                                                                "description": "SSL connection modes.",
                                                                                                "type": "object",
                                                                                                "order": 8,
                                                                                                "group": "security",
                                                                                                "oneOf": [
                                                                                                    {
                                                                                                        "title": "disable",
                                                                                                        "additionalProperties": true,
                                                                                                        "description": "Disables encryption of communication between BigHammer and source database.",
                                                                                                        "required": [
                                                                                                            "mode"
                                                                                                        ],
                                                                                                        "properties": {
                                                                                                            "mode": {
                                                                                                                "type": "string",
                                                                                                                "const": "disable",
                                                                                                                "order": 0
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "title": "allow",
                                                                                                        "additionalProperties": true,
                                                                                                        "description": "Enables encryption only when required by the source database.",
                                                                                                        "required": [
                                                                                                            "mode"
                                                                                                        ],
                                                                                                        "properties": {
                                                                                                            "mode": {
                                                                                                                "type": "string",
                                                                                                                "const": "allow",
                                                                                                                "order": 0
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "title": "prefer",
                                                                                                        "additionalProperties": true,
                                                                                                        "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                                                        "required": [
                                                                                                            "mode"
                                                                                                        ],
                                                                                                        "properties": {
                                                                                                            "mode": {
                                                                                                                "type": "string",
                                                                                                                "const": "prefer",
                                                                                                                "order": 0
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "title": "require",
                                                                                                        "additionalProperties": true,
                                                                                                        "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                                                        "required": [
                                                                                                            "mode"
                                                                                                        ],
                                                                                                        "properties": {
                                                                                                            "mode": {
                                                                                                                "type": "string",
                                                                                                                "const": "require",
                                                                                                                "order": 0
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "title": "verify-ca",
                                                                                                        "additionalProperties": true,
                                                                                                        "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                                                        "required": [
                                                                                                            "mode",
                                                                                                            "ca_certificate"
                                                                                                        ],
                                                                                                        "properties": {
                                                                                                            "mode": {
                                                                                                                "type": "string",
                                                                                                                "const": "verify-ca",
                                                                                                                "order": 0
                                                                                                            },
                                                                                                            "ca_certificate": {
                                                                                                                "type": "string",
                                                                                                                "title": "CA Certificate",
                                                                                                                "description": "CA certificate",
                                                                                                                "bh_secret": true,
                                                                                                                "multiline": true,
                                                                                                                "order": 1
                                                                                                            },
                                                                                                            "client_certificate": {
                                                                                                                "type": "string",
                                                                                                                "title": "Client Certificate",
                                                                                                                "description": "Client certificate",
                                                                                                                "bh_secret": true,
                                                                                                                "multiline": true,
                                                                                                                "order": 2,
                                                                                                                "always_show": true
                                                                                                            },
                                                                                                            "client_key": {
                                                                                                                "type": "string",
                                                                                                                "title": "Client Key",
                                                                                                                "description": "Client key",
                                                                                                                "bh_secret": true,
                                                                                                                "multiline": true,
                                                                                                                "order": 3,
                                                                                                                "always_show": true
                                                                                                            },
                                                                                                            "client_key_password": {
                                                                                                                "type": "string",
                                                                                                                "title": "Client key password",
                                                                                                                "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                                "bh_secret": true,
                                                                                                                "order": 4
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "title": "verify-full",
                                                                                                        "additionalProperties": true,
                                                                                                        "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                                                        "required": [
                                                                                                            "mode",
                                                                                                            "ca_certificate"
                                                                                                        ],
                                                                                                        "properties": {
                                                                                                            "mode": {
                                                                                                                "type": "string",
                                                                                                                "const": "verify-full",
                                                                                                                "order": 0
                                                                                                            },
                                                                                                            "ca_certificate": {
                                                                                                                "type": "string",
                                                                                                                "title": "CA Certificate",
                                                                                                                "description": "CA certificate",
                                                                                                                "bh_secret": true,
                                                                                                                "multiline": true,
                                                                                                                "order": 1
                                                                                                            },
                                                                                                            "client_certificate": {
                                                                                                                "type": "string",
                                                                                                                "title": "Client Certificate",
                                                                                                                "description": "Client certificate",
                                                                                                                "bh_secret": true,
                                                                                                                "multiline": true,
                                                                                                                "order": 2,
                                                                                                                "always_show": true
                                                                                                            },
                                                                                                            "client_key": {
                                                                                                                "type": "string",
                                                                                                                "title": "Client Key",
                                                                                                                "description": "Client key",
                                                                                                                "bh_secret": true,
                                                                                                                "multiline": true,
                                                                                                                "order": 3,
                                                                                                                "always_show": true
                                                                                                            },
                                                                                                            "client_key_password": {
                                                                                                                "type": "string",
                                                                                                                "title": "Client key password",
                                                                                                                "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                                "bh_secret": true,
                                                                                                                "order": 4
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "replication_method": {
                                                                                                "type": "object",
                                                                                                "title": "Update Method",
                                                                                                "description": "Configures how data is extracted from the database.",
                                                                                                "order": 9,
                                                                                                "group": "advanced",
                                                                                                "default": "CDC",
                                                                                                "display_type": "radio",
                                                                                                "oneOf": [
                                                                                                    {
                                                                                                        "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                                                        "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                                                        "required": [
                                                                                                            "method",
                                                                                                            "replication_slot",
                                                                                                            "publication"
                                                                                                        ],
                                                                                                        "additionalProperties": true,
                                                                                                        "properties": {
                                                                                                            "method": {
                                                                                                                "type": "string",
                                                                                                                "const": "CDC",
                                                                                                                "order": 1
                                                                                                            },
                                                                                                            "plugin": {
                                                                                                                "type": "string",
                                                                                                                "title": "Plugin",
                                                                                                                "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                                                "enum": [
                                                                                                                    "pgoutput"
                                                                                                                ],
                                                                                                                "default": "pgoutput",
                                                                                                                "order": 2
                                                                                                            },
                                                                                                            "replication_slot": {
                                                                                                                "type": "string",
                                                                                                                "title": "Replication Slot",
                                                                                                                "description": "A plugin logical replication slot.",
                                                                                                                "order": 3
                                                                                                            },
                                                                                                            "publication": {
                                                                                                                "type": "string",
                                                                                                                "title": "Publication",
                                                                                                                "description": "A Postgres publication used for consuming changes.",
                                                                                                                "order": 4
                                                                                                            },
                                                                                                            "initial_waiting_seconds": {
                                                                                                                "type": "integer",
                                                                                                                "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                                                "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                                                "default": 1200,
                                                                                                                "order": 5,
                                                                                                                "min": 120,
                                                                                                                "max": 2400
                                                                                                            },
                                                                                                            "queue_size": {
                                                                                                                "type": "integer",
                                                                                                                "title": "Size of the queue (Advanced)",
                                                                                                                "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                                                "default": 10000,
                                                                                                                "order": 6,
                                                                                                                "min": 1000,
                                                                                                                "max": 10000
                                                                                                            },
                                                                                                            "lsn_commit_behaviour": {
                                                                                                                "type": "string",
                                                                                                                "title": "LSN commit behaviour",
                                                                                                                "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                                                "enum": [
                                                                                                                    "While reading Data",
                                                                                                                    "After loading Data in the destination"
                                                                                                                ],
                                                                                                                "default": "After loading Data in the destination",
                                                                                                                "order": 7
                                                                                                            },
                                                                                                            "heartbeat_action_query": {
                                                                                                                "type": "string",
                                                                                                                "title": "Debezium heartbeat query (Advanced)",
                                                                                                                "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                                                "default": "",
                                                                                                                "order": 8
                                                                                                            },
                                                                                                            "invalid_cdc_cursor_position_behavior": {
                                                                                                                "type": "string",
                                                                                                                "title": "Invalid CDC position behavior (Advanced)",
                                                                                                                "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                                                "enum": [
                                                                                                                    "Fail sync",
                                                                                                                    "Re-sync data"
                                                                                                                ],
                                                                                                                "default": "Fail sync",
                                                                                                                "order": 9
                                                                                                            },
                                                                                                            "initial_load_timeout_hours": {
                                                                                                                "type": "integer",
                                                                                                                "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                                                "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                                                "default": 8,
                                                                                                                "min": 4,
                                                                                                                "max": 24,
                                                                                                                "order": 10
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "title": "Detect Changes with Xmin System Column",
                                                                                                        "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                                                        "required": [
                                                                                                            "method"
                                                                                                        ],
                                                                                                        "properties": {
                                                                                                            "method": {
                                                                                                                "type": "string",
                                                                                                                "const": "Xmin",
                                                                                                                "order": 0
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "title": "Scan Changes with User Defined Cursor",
                                                                                                        "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                                                        "required": [
                                                                                                            "method"
                                                                                                        ],
                                                                                                        "properties": {
                                                                                                            "method": {
                                                                                                                "type": "string",
                                                                                                                "const": "Standard",
                                                                                                                "order": 8
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        "groups": [
                                                                                            {
                                                                                                "id": "db"
                                                                                            },
                                                                                            {
                                                                                                "id": "auth"
                                                                                            },
                                                                                            {
                                                                                                "id": "security",
                                                                                                "title": "Security"
                                                                                            },
                                                                                            {
                                                                                                "id": "advanced",
                                                                                                "title": "Advanced"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "connection_type": {
                                                                                            "const": "Snowflake"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "documentationUrl": "N/A",
                                                                                    "connectionSpecification": {
                                                                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                        "title": "Snowflake Source Spec",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "host",
                                                                                            "role",
                                                                                            "warehouse",
                                                                                            "database"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "credentials": {
                                                                                                "title": "Authorization Method",
                                                                                                "type": "object",
                                                                                                "oneOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "title": "OAuth2.0",
                                                                                                        "order": 0,
                                                                                                        "required": [
                                                                                                            "client_id",
                                                                                                            "client_secret",
                                                                                                            "auth_type"
                                                                                                        ],
                                                                                                        "bh_hidden": true,
                                                                                                        "properties": {
                                                                                                            "auth_type": {
                                                                                                                "type": "string",
                                                                                                                "const": "OAuth",
                                                                                                                "order": 0
                                                                                                            },
                                                                                                            "client_id": {
                                                                                                                "type": "string",
                                                                                                                "title": "Client ID",
                                                                                                                "description": "The Client ID of your Snowflake developer application.",
                                                                                                                "bh_secret": true,
                                                                                                                "order": 1
                                                                                                            },
                                                                                                            "client_secret": {
                                                                                                                "type": "string",
                                                                                                                "title": "Client Secret",
                                                                                                                "description": "The Client Secret of your Snowflake developer application.",
                                                                                                                "bh_secret": true,
                                                                                                                "order": 2
                                                                                                            },
                                                                                                            "access_token": {
                                                                                                                "type": "string",
                                                                                                                "title": "Access Token",
                                                                                                                "description": "Access Token for making authenticated requests.",
                                                                                                                "bh_secret": true,
                                                                                                                "order": 3
                                                                                                            },
                                                                                                            "refresh_token": {
                                                                                                                "type": "string",
                                                                                                                "title": "Refresh Token",
                                                                                                                "description": "Refresh Token for making authenticated requests.",
                                                                                                                "bh_secret": true,
                                                                                                                "order": 4
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "title": "Key Pair Authentication",
                                                                                                        "type": "object",
                                                                                                        "order": 1,
                                                                                                        "required": [
                                                                                                            "username",
                                                                                                            "private_key"
                                                                                                        ],
                                                                                                        "properties": {
                                                                                                            "auth_type": {
                                                                                                                "type": "string",
                                                                                                                "const": "Key Pair Authentication",
                                                                                                                "order": 0
                                                                                                            },
                                                                                                            "username": {
                                                                                                                "description": "The username you created to allow BigHammer to access the database.",
                                                                                                                "examples": [
                                                                                                                    "BH_USER"
                                                                                                                ],
                                                                                                                "type": "string",
                                                                                                                "title": "Username",
                                                                                                                "order": 1
                                                                                                            },
                                                                                                            "private_key": {
                                                                                                                "type": "string",
                                                                                                                "title": "Private Key",
                                                                                                                "description": "RSA Private key to use for Snowflake connection.",
                                                                                                                "multiline": true,
                                                                                                                "bh_secret": true,
                                                                                                                "order": 2
                                                                                                            },
                                                                                                            "private_key_password": {
                                                                                                                "type": "string",
                                                                                                                "title": "Passphrase",
                                                                                                                "description": "Passphrase for private key",
                                                                                                                "bh_secret": true,
                                                                                                                "order": 3
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "title": "Username and Password",
                                                                                                        "type": "object",
                                                                                                        "required": [
                                                                                                            "username",
                                                                                                            "password",
                                                                                                            "auth_type"
                                                                                                        ],
                                                                                                        "order": 2,
                                                                                                        "properties": {
                                                                                                            "auth_type": {
                                                                                                                "type": "string",
                                                                                                                "const": "username/password",
                                                                                                                "order": 0
                                                                                                            },
                                                                                                            "username": {
                                                                                                                "description": "The username you created to allow BigHammer to access the database.",
                                                                                                                "examples": [
                                                                                                                    "BH_USER"
                                                                                                                ],
                                                                                                                "type": "string",
                                                                                                                "title": "Username",
                                                                                                                "order": 1
                                                                                                            },
                                                                                                            "password": {
                                                                                                                "description": "The password associated with the username.",
                                                                                                                "type": "string",
                                                                                                                "bh_secret": true,
                                                                                                                "title": "Password",
                                                                                                                "order": 2
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ],
                                                                                                "order": 0
                                                                                            },
                                                                                            "host": {
                                                                                                "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                                                "examples": [
                                                                                                    "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                                                ],
                                                                                                "type": "string",
                                                                                                "title": "Account Name",
                                                                                                "order": 1
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "The role you created for BigHammer to access Snowflake.",
                                                                                                "examples": [
                                                                                                    "BH_ROLE"
                                                                                                ],
                                                                                                "type": "string",
                                                                                                "title": "Role",
                                                                                                "order": 2
                                                                                            },
                                                                                            "warehouse": {
                                                                                                "description": "The warehouse you created for BigHammer to access data.",
                                                                                                "examples": [
                                                                                                    "BH_WAREHOUSE"
                                                                                                ],
                                                                                                "type": "string",
                                                                                                "title": "Warehouse",
                                                                                                "order": 3
                                                                                            },
                                                                                            "database": {
                                                                                                "description": "The database you created for BigHammer to access data.",
                                                                                                "examples": [
                                                                                                    "BH_DATABASE"
                                                                                                ],
                                                                                                "type": "string",
                                                                                                "title": "Database",
                                                                                                "order": 4
                                                                                            },
                                                                                            "schema": {
                                                                                                "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                                                "examples": [
                                                                                                    "BH_SCHEMA"
                                                                                                ],
                                                                                                "type": "string",
                                                                                                "title": "Schema",
                                                                                                "order": 5
                                                                                            },
                                                                                            "jdbc_url_params": {
                                                                                                "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                                                "title": "JDBC URL Params",
                                                                                                "type": "string",
                                                                                                "order": 6
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "advanced_auth": {
                                                                                        "auth_flow_type": "oauth2.0",
                                                                                        "predicate_key": [
                                                                                            "credentials",
                                                                                            "auth_type"
                                                                                        ],
                                                                                        "predicate_value": "OAuth",
                                                                                        "oauth_config_specification": {
                                                                                            "oauth_user_input_from_connector_config_specification": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "host": {
                                                                                                        "type": "string",
                                                                                                        "path_in_connector_config": [
                                                                                                            "host"
                                                                                                        ]
                                                                                                    },
                                                                                                    "role": {
                                                                                                        "type": "string",
                                                                                                        "path_in_connector_config": [
                                                                                                            "role"
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "complete_oauth_output_specification": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "access_token": {
                                                                                                        "type": "string",
                                                                                                        "path_in_connector_config": [
                                                                                                            "credentials",
                                                                                                            "access_token"
                                                                                                        ]
                                                                                                    },
                                                                                                    "refresh_token": {
                                                                                                        "type": "string",
                                                                                                        "path_in_connector_config": [
                                                                                                            "credentials",
                                                                                                            "refresh_token"
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "complete_oauth_server_input_specification": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "client_id": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "client_secret": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "complete_oauth_server_output_specification": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "client_id": {
                                                                                                        "type": "string",
                                                                                                        "path_in_connector_config": [
                                                                                                            "credentials",
                                                                                                            "client_id"
                                                                                                        ]
                                                                                                    },
                                                                                                    "client_secret": {
                                                                                                        "type": "string",
                                                                                                        "path_in_connector_config": [
                                                                                                            "credentials",
                                                                                                            "client_secret"
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "connection_type": {
                                                                                            "const": "Iceberg"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "properties": {
                                                                                        "warehouse_path": {
                                                                                            "type": "string",
                                                                                            "minLength": 1
                                                                                        },
                                                                                        "catalog_name": {
                                                                                            "type": "string",
                                                                                            "default": "iceberg"
                                                                                        },
                                                                                        "namespace": {
                                                                                            "type": "string",
                                                                                            "default": "default"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "warehouse_path"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "format": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "json",
                                                                        "csv",
                                                                        "avro"
                                                                    ],
                                                                    "default": "json"
                                                                },
                                                                "key_field": {
                                                                    "type": "string",
                                                                    "description": "Field to use as Kafka key"
                                                                }
                                                            },
                                                            "required": [
                                                                "connection"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "table_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "table_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "Iceberg"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "table_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "catalog_name": {
                                                                    "type": "string",
                                                                    "default": "iceberg"
                                                                },
                                                                "namespace": {
                                                                    "type": "string",
                                                                    "default": "default"
                                                                },
                                                                "warehouse_path": {
                                                                    "type": "string"
                                                                },
                                                                "partition_by": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "required": [
                                                                "table_name"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "target"
                                        ],
                                        "allOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "target": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "file_type": {
                                                            "type": "string",
                                                            "description": "File Type",
                                                            "enum": [
                                                                "CSV",
                                                                "JSON",
                                                                "Parquet"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "file_type"
                                                    ],
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "CSV"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "write_options": {
                                                                        "allOf": [
                                                                            {
                                                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                "type": "object",
                                                                                "title": "CSV Writer Options",
                                                                                "properties": {
                                                                                    "format": {
                                                                                        "type": "string",
                                                                                        "description": "Specify what format to use, here should be 'csv'.",
                                                                                        "default": "csv"
                                                                                    },
                                                                                    "csv.field-delimiter": {
                                                                                        "type": "string",
                                                                                        "description": "Field delimiter character (',' by default), must be single character. You can use backslash to specify special characters, e.g. '\\t' represents the tab character. You can also use unicode to specify them in plain SQL, e.g. 'csv.field-delimiter' = U&'\\u00001' represents the 0x01 character.",
                                                                                        "default": ","
                                                                                    },
                                                                                    "csv.disable-quote-character": {
                                                                                        "type": "boolean",
                                                                                        "description": "Disabled quote character for enclosing field values (false by default). If true, option 'csv.quote-character' can not be set.",
                                                                                        "default": false
                                                                                    },
                                                                                    "csv.quote-character": {
                                                                                        "type": "string",
                                                                                        "description": "Quote character for enclosing field values (\" by default).",
                                                                                        "default": "\""
                                                                                    },
                                                                                    "csv.allow-comments": {
                                                                                        "type": "boolean",
                                                                                        "description": "Ignore comment lines that start with '#' (disabled by default). If enabled, make sure to also ignore parse errors to allow empty rows.",
                                                                                        "default": false
                                                                                    },
                                                                                    "csv.ignore-parse-errors": {
                                                                                        "type": "boolean",
                                                                                        "description": "Skip fields and rows with parse errors instead of failing. Fields are set to null in case of errors.",
                                                                                        "default": false
                                                                                    },
                                                                                    "csv.array-element-delimiter": {
                                                                                        "type": "string",
                                                                                        "description": "Array element delimiter string for separating array and row element values (';' by default).",
                                                                                        "default": ";"
                                                                                    },
                                                                                    "csv.escape-character": {
                                                                                        "type": "string",
                                                                                        "description": "Escape character for escaping values (disabled by default).",
                                                                                        "default": null
                                                                                    },
                                                                                    "csv.null-literal": {
                                                                                        "type": "string",
                                                                                        "description": "Null literal string that is interpreted as a null value (disabled by default).",
                                                                                        "default": null
                                                                                    },
                                                                                    "csv.write-bigdecimal-in-scientific-notation": {
                                                                                        "type": "boolean",
                                                                                        "description": "Enables representation of BigDecimal data type in scientific notation (default is true). For example, 100000 is encoded as 1E+5 by default, and will be written as 100000 if set this option to false. Note: Only when the value is not 0 and a multiple of 10 is converted to scientific notation.",
                                                                                        "default": true
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "format"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "schema": {
                                                                                        "type": "object",
                                                                                        "description": "Schema definition for the data",
                                                                                        "properties": {
                                                                                            "fields": {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "name": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "string",
                                                                                                                "int",
                                                                                                                "double",
                                                                                                                "boolean",
                                                                                                                "timestamp"
                                                                                                            ]
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "write_options"
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "JSON"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "write_options": {
                                                                        "allOf": [
                                                                            {
                                                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                "type": "object",
                                                                                "title": "JSON Writer Options",
                                                                                "properties": {
                                                                                    "format": {
                                                                                        "type": "string",
                                                                                        "description": "Specify what format to use, here should be 'json'.",
                                                                                        "default": "json"
                                                                                    },
                                                                                    "json.fail-on-missing-field": {
                                                                                        "type": "boolean",
                                                                                        "description": "Whether to fail if a field is missing or not.",
                                                                                        "default": false
                                                                                    },
                                                                                    "json.ignore-parse-errors": {
                                                                                        "type": "boolean",
                                                                                        "description": "Skip fields and rows with parse errors instead of failing. Fields are set to null in case of errors.",
                                                                                        "default": false
                                                                                    },
                                                                                    "json.timestamp-format.standard": {
                                                                                        "type": "string",
                                                                                        "description": "Specify the input and output timestamp format for TIMESTAMP and TIMESTAMP_LTZ type. Currently supported values are 'SQL' and 'ISO-8601'. 'SQL' parses input TIMESTAMP in 'yyyy-MM-dd HH:mm:ss.s{precision}' format and TIMESTAMP_LTZ in 'yyyy-MM-dd HH:mm:ss.s{precision}'Z'' format and outputs in the same format. 'ISO-8601' parses input TIMESTAMP in 'yyyy-MM-ddTHH:mm:ss.s{precision}' format and TIMESTAMP_LTZ in 'yyyy-MM-ddTHH:mm:ss.s{precision}'Z'' format and outputs in the same format.",
                                                                                        "default": "SQL",
                                                                                        "enum": [
                                                                                            "SQL",
                                                                                            "ISO-8601"
                                                                                        ]
                                                                                    },
                                                                                    "json.map-null-key.mode": {
                                                                                        "type": "string",
                                                                                        "description": "Specify the handling mode when serializing null keys for map data. Supported values: 'FAIL' (throws exception), 'DROP' (drops null key entries), 'LITERAL' (replaces null key with string literal defined by json.map-null-key.literal).",
                                                                                        "default": "FAIL",
                                                                                        "enum": [
                                                                                            "FAIL",
                                                                                            "DROP",
                                                                                            "LITERAL"
                                                                                        ]
                                                                                    },
                                                                                    "json.map-null-key.literal": {
                                                                                        "type": "string",
                                                                                        "description": "Specify string literal to replace null key when 'json.map-null-key.mode' is LITERAL.",
                                                                                        "default": "null"
                                                                                    },
                                                                                    "json.encode.decimal-as-plain-number": {
                                                                                        "type": "boolean",
                                                                                        "description": "Encode all decimals as plain numbers instead of possible scientific notations. For example, 0.000000027 is encoded as 2.7E-8 by default, and will be written as 0.000000027 if true.",
                                                                                        "default": false
                                                                                    },
                                                                                    "json.encode.ignore-null-fields": {
                                                                                        "type": "boolean",
                                                                                        "description": "Encode only non-null fields. By default, all fields will be included.",
                                                                                        "default": false
                                                                                    },
                                                                                    "decode.json-parser.enabled": {
                                                                                        "type": "boolean",
                                                                                        "description": "Whether to use the Jackson JsonParser to decode json. JsonParser is a streaming API that is faster and consumes less memory than the JsonNode approach.",
                                                                                        "default": true
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "format"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "schema": {
                                                                                        "type": "object",
                                                                                        "description": "Schema definition for the data",
                                                                                        "properties": {
                                                                                            "fields": {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "name": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "string",
                                                                                                                "int",
                                                                                                                "double",
                                                                                                                "boolean",
                                                                                                                "timestamp"
                                                                                                            ]
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "write_options"
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "Parquet"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "write_options": {
                                                                        "allOf": [
                                                                            {
                                                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                                                "type": "object",
                                                                                "title": "Parquet Writer Options",
                                                                                "properties": {
                                                                                    "format": {
                                                                                        "type": "string",
                                                                                        "description": "Specify what format to use, here should be 'parquet'.",
                                                                                        "default": "parquet"
                                                                                    },
                                                                                    "parquet.utc-timezone": {
                                                                                        "type": "boolean",
                                                                                        "description": "Use UTC timezone or local timezone to the conversion between epoch time and LocalDateTime. Hive 0.x/1.x/2.x use local timezone. But Hive 3.x use UTC timezone.",
                                                                                        "default": false
                                                                                    },
                                                                                    "timestamp.time.unit": {
                                                                                        "type": "string",
                                                                                        "description": "Store parquet int64/LogicalTypes timestamps in this time unit, value is nanos/micros/millis.",
                                                                                        "default": "micros",
                                                                                        "enum": [
                                                                                            "nanos",
                                                                                            "micros",
                                                                                            "millis"
                                                                                        ]
                                                                                    },
                                                                                    "write.int64.timestamp": {
                                                                                        "type": "boolean",
                                                                                        "description": "Write parquet timestamp as int64/LogicalTypes instead of int96/OriginalTypes. Note: Timestamp will be time zone agnostic (NEVER converted to a different time zone).",
                                                                                        "default": false
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "format"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "schema": {
                                                                                        "type": "object",
                                                                                        "description": "Schema definition for the data",
                                                                                        "properties": {
                                                                                            "fields": {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "name": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "string",
                                                                                                                "int",
                                                                                                                "double",
                                                                                                                "boolean",
                                                                                                                "timestamp"
                                                                                                            ]
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "write_options"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "target": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "write_options": {
                                                            "allOf": [
                                                                {
                                                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                                                    "type": "object",
                                                                    "title": "JDBC Writer Options",
                                                                    "properties": {
                                                                        "connector": {
                                                                            "type": "string",
                                                                            "description": "Specify what connector to use, here should be 'jdbc'.",
                                                                            "default": "jdbc"
                                                                        },
                                                                        "url": {
                                                                            "type": "string",
                                                                            "description": "The JDBC database url.",
                                                                            "default": null
                                                                        },
                                                                        "table-name": {
                                                                            "type": "string",
                                                                            "description": "The name of JDBC table to connect.",
                                                                            "default": null
                                                                        },
                                                                        "driver": {
                                                                            "type": "string",
                                                                            "description": "The class name of the JDBC driver to use to connect to this URL, if not set, it will automatically be derived from the URL.",
                                                                            "default": null
                                                                        },
                                                                        "compatible-mode": {
                                                                            "type": "string",
                                                                            "description": "The compatible mode of database.",
                                                                            "default": null
                                                                        },
                                                                        "username": {
                                                                            "type": "string",
                                                                            "description": "The JDBC user name. 'username' and 'password' must both be specified if any of them is specified.",
                                                                            "default": null
                                                                        },
                                                                        "password": {
                                                                            "type": "string",
                                                                            "description": "The JDBC password.",
                                                                            "default": null
                                                                        },
                                                                        "connection.max-retry-timeout": {
                                                                            "type": "string",
                                                                            "description": "Maximum timeout between retries. The timeout should be in second granularity and shouldn't be smaller than 1 second.",
                                                                            "default": "60s"
                                                                        },
                                                                        "sink.buffer-flush.max-rows": {
                                                                            "type": "integer",
                                                                            "description": "The max size of buffered records before flush. Can be set to zero to disable it.",
                                                                            "default": 100
                                                                        },
                                                                        "sink.buffer-flush.interval": {
                                                                            "type": "string",
                                                                            "description": "The flush interval mills, over this time, asynchronous threads will flush data. Can be set to '0' to disable it. Note, 'sink.buffer-flush.max-rows' can be set to '0' with the flush interval set allowing for complete async processing of buffered actions.",
                                                                            "default": "1s"
                                                                        },
                                                                        "sink.max-retries": {
                                                                            "type": "integer",
                                                                            "description": "The max retry times if writing records to database failed.",
                                                                            "default": 3
                                                                        },
                                                                        "sink.parallelism": {
                                                                            "type": "integer",
                                                                            "description": "Defines the parallelism of the JDBC sink operator. By default, the parallelism is determined by the framework using the same parallelism of the upstream chained operator.",
                                                                            "default": null
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "connector",
                                                                        "url",
                                                                        "table-name"
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "schema": {
                                                                            "type": "object",
                                                                            "description": "Schema definition for the data",
                                                                            "properties": {
                                                                                "fields": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "string",
                                                                                                    "int",
                                                                                                    "double",
                                                                                                    "boolean",
                                                                                                    "timestamp"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "write_options"
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "target": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "Kafka"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "write_options": {
                                                            "allOf": [
                                                                {
                                                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                                                    "type": "object",
                                                                    "title": "Kafka Writer Options",
                                                                    "properties": {
                                                                        "connector": {
                                                                            "type": "string",
                                                                            "description": "Specify what connector to use, for Kafka use 'kafka'.",
                                                                            "default": "kafka"
                                                                        },
                                                                        "topic": {
                                                                            "type": "string",
                                                                            "description": "Topic name(s) to read data from or to write data into. Supports topic list separated by semicolon. Only one of 'topic' and 'topic-pattern' can be specified.",
                                                                            "default": null
                                                                        },
                                                                        "topic-pattern": {
                                                                            "type": "string",
                                                                            "description": "Regular expression pattern for topic names to subscribe or write to. Supports dynamic topic discovery.",
                                                                            "default": null
                                                                        },
                                                                        "properties.bootstrap.servers": {
                                                                            "type": "string",
                                                                            "description": "Comma separated list of Kafka brokers.",
                                                                            "default": null
                                                                        },
                                                                        "format": {
                                                                            "type": "string",
                                                                            "description": "Format used to deserialize and serialize the value part of Kafka messages. Synonym for 'value.format'.",
                                                                            "default": null
                                                                        },
                                                                        "key.format": {
                                                                            "type": "string",
                                                                            "description": "Format used to deserialize and serialize the key part of Kafka messages.",
                                                                            "enum": [
                                                                                "json",
                                                                                "csv",
                                                                                "avro"
                                                                            ],
                                                                            "default": "json"
                                                                        },
                                                                        "key.fields": {
                                                                            "type": "array",
                                                                            "description": "Explicit list of physical columns from the table schema configuring the data type for the key format.",
                                                                            "default": [],
                                                                            "items": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "key.fields-prefix": {
                                                                            "type": "string",
                                                                            "description": "Custom prefix for all fields of the key format to avoid name clashes with the value format fields.",
                                                                            "default": null
                                                                        },
                                                                        "value.format": {
                                                                            "type": "string",
                                                                            "description": "Format used to deserialize and serialize the value part of Kafka messages.",
                                                                            "default": null
                                                                        },
                                                                        "value.fields-include": {
                                                                            "type": "string",
                                                                            "description": "Strategy to deal with key columns in the data type of the value format.",
                                                                            "default": "ALL",
                                                                            "enum": [
                                                                                "ALL",
                                                                                "EXCEPT_KEY"
                                                                            ]
                                                                        },
                                                                        "sink.partitioner": {
                                                                            "type": "string",
                                                                            "description": "Output partitioning strategy from Flink's partitions into Kafka partitions.",
                                                                            "default": "default"
                                                                        },
                                                                        "sink.semantic": {
                                                                            "type": "string",
                                                                            "description": "Deprecated: use sink.delivery-guarantee.",
                                                                            "default": "at-least-once"
                                                                        },
                                                                        "sink.delivery-guarantee": {
                                                                            "type": "string",
                                                                            "description": "Delivery semantic for Kafka sink: 'at-least-once', 'exactly-once', or 'none'.",
                                                                            "default": "at-least-once",
                                                                            "enum": [
                                                                                "at-least-once",
                                                                                "exactly-once",
                                                                                "none"
                                                                            ]
                                                                        },
                                                                        "sink.transactional-id-prefix": {
                                                                            "type": "string",
                                                                            "description": "Prefix identifier for Kafka transactions when exactly-once delivery is configured.",
                                                                            "default": null
                                                                        },
                                                                        "sink.parallelism": {
                                                                            "type": "integer",
                                                                            "description": "Parallelism of the Kafka sink operator.",
                                                                            "default": null
                                                                        }
                                                                    },
                                                                    "patternProperties": {
                                                                        "^properties\\..*$": {
                                                                            "type": "string",
                                                                            "description": "Kafka properties (e.g., properties.bootstrap.servers, properties.security.protocol, etc.)"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "connector",
                                                                        "properties.bootstrap.servers",
                                                                        "format"
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "schema": {
                                                                            "type": "object",
                                                                            "description": "Schema definition for the data",
                                                                            "properties": {
                                                                                "fields": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "string",
                                                                                                    "int",
                                                                                                    "double",
                                                                                                    "boolean",
                                                                                                    "timestamp"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "write_options"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Lookup"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "https://json-schema.org/draft-07/schema#",
                                        "description": "Schema for Lookup transformation (PyFlink)",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Lookup",
                                            "color": "#4a6bdf",
                                            "icon": "/assets/buildPipeline/squre/3.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the transformation."
                                            },
                                            "dependent_on": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of transformations this transformation depends on."
                                            },
                                            "transformation": {
                                                "type": "string",
                                                "enum": [
                                                    "Lookup"
                                                ],
                                                "description": "The type of transformation."
                                            },
                                            "lookup_type": {
                                                "type": "string",
                                                "enum": [
                                                    "Column Based",
                                                    "Literal"
                                                ],
                                                "description": "The type of lookup to perform."
                                            },
                                            "lookup_config": {
                                                "type": "object",
                                                "description": "Configuration for reading the lookup data (only for Column Based lookup).",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The name of the lookup configuration."
                                                    },
                                                    "source": {
                                                        "type": "object",
                                                        "description": "Reference to the source of the lookup data."
                                                    },
                                                    "read_options": {
                                                        "type": "object",
                                                        "description": "Options for reading the lookup data.",
                                                        "properties": {
                                                            "header": {
                                                                "type": "boolean",
                                                                "default": true,
                                                                "description": "Whether the lookup data has a header row."
                                                            }
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "source"
                                                ]
                                            },
                                            "lookup_data": {
                                                "type": "array",
                                                "description": "Literal data for lookup (only for Literal lookup).",
                                                "items": {
                                                    "type": "object",
                                                    "description": "A row of literal data."
                                                }
                                            },
                                            "lookup_conditions": {
                                                "description": "Conditions for joining the main Table with the lookup Table.",
                                                "oneOf": [
                                                    {
                                                        "type": "array",
                                                        "description": "Conditions for Column Based lookup.",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "column_name": {
                                                                    "type": "string",
                                                                    "description": "The column in the main Table to join on."
                                                                },
                                                                "lookup_with": {
                                                                    "type": "string",
                                                                    "description": "The column in the lookup Table to join with."
                                                                }
                                                            },
                                                            "required": [
                                                                "column_name",
                                                                "lookup_with"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "object",
                                                        "description": "Condition for Literal lookup.",
                                                        "properties": {
                                                            "column_name": {
                                                                "type": "string",
                                                                "description": "The column in the main Table to join on."
                                                            },
                                                            "lookup_with": {
                                                                "type": "string",
                                                                "description": "The column in the literal data to join with."
                                                            }
                                                        },
                                                        "required": [
                                                            "column_name",
                                                            "lookup_with"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "lookup_columns": {
                                                "type": "array",
                                                "description": "Columns to select and rename after the lookup.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "column": {
                                                            "type": "string",
                                                            "description": "The column to select."
                                                        },
                                                        "out_column_name": {
                                                            "type": "string",
                                                            "description": "The name of the output column."
                                                        }
                                                    },
                                                    "required": [
                                                        "column",
                                                        "out_column_name"
                                                    ]
                                                }
                                            },
                                            "keep": {
                                                "type": "string",
                                                "enum": [
                                                    "First",
                                                    "Last",
                                                    "All"
                                                ],
                                                "description": "(Optional) Specifies which rows to keep when there are multiple matches in the lookup. Only supported for batch mode or upsert sinks."
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "dependent_on",
                                            "transformation",
                                            "lookup_columns",
                                            "lookup_type",
                                            "lookup_conditions"
                                        ],
                                        "additionalProperties": false,
                                        "if": {
                                            "properties": {
                                                "lookup_type": {
                                                    "const": "Column Based"
                                                }
                                            }
                                        },
                                        "then": {
                                            "required": [
                                                "lookup_config",
                                                "lookup_conditions"
                                            ]
                                        },
                                        "else": {
                                            "required": [
                                                "lookup_data",
                                                "lookup_conditions"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Joiner"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "Joiner",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Joiner",
                                            "color": "#ff7396",
                                            "icon": "/assets/buildPipeline/display/join.svg",
                                            "ports": {
                                                "inputs": 2,
                                                "outputs": 1,
                                                "maxInputs": "unlimited"
                                            }
                                        },
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "dependent_on": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "transformation": {
                                                "type": "string",
                                                "enum": [
                                                    "Joiner"
                                                ]
                                            },
                                            "driving_input": {
                                                "type": "string"
                                            },
                                            "conditions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "join_category": {
                                                            "type": "string"
                                                        },
                                                        "join_type": {
                                                            "type": "string"
                                                        },
                                                        "join_input": {
                                                            "type": "string"
                                                        },
                                                        "join_condition": {
                                                            "oneOf": [
                                                                {
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "window": {
                                                            "type": "object"
                                                        },
                                                        "event_time_column": {
                                                            "type": "string"
                                                        },
                                                        "time_type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "join_category",
                                                        "join_type",
                                                        "join_input",
                                                        "join_condition"
                                                    ]
                                                }
                                            },
                                            "expressions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "target_column": {
                                                            "type": "string"
                                                        },
                                                        "expression": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "target_column",
                                                        "expression"
                                                    ]
                                                }
                                            },
                                            "advanced": {
                                                "type": "object",
                                                "properties": {
                                                    "hints": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "hint_type": {
                                                                    "type": "string"
                                                                },
                                                                "tables": {
                                                                    "oneOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "hint_type",
                                                                "tables"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "transformation",
                                            "conditions"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Expression"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Schema transformation with function registry support for PyFlink",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Expression",
                                            "color": "#32D1A4",
                                            "icon": "/assets/buildPipeline/28.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "derived_fields": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 0,
                                                "items": {
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "expression": {
                                                            "type": "string",
                                                            "ui-hint": "expression",
                                                            "minLength": 1
                                                        },
                                                        "functions": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "minLength": 1,
                                                                        "description": "Name of the registered function to apply"
                                                                    },
                                                                    "parameters": {
                                                                        "type": "object",
                                                                        "description": "Parameters to pass to the function",
                                                                        "additionalProperties": true
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "anyOf": [
                                                        {
                                                            "required": [
                                                                "expression"
                                                            ]
                                                        },
                                                        {
                                                            "required": [
                                                                "functions"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "select_columns": {
                                                "type": "array",
                                                "description": "List of column names to select from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "drop_columns": {
                                                "type": "array",
                                                "description": "List of column names to drop from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "rename_columns": {
                                                "type": "object",
                                                "description": "Mapping of old column names to new column names",
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        },
                                        "anyOf": [
                                            {
                                                "required": [
                                                    "derived_fields"
                                                ]
                                            },
                                            {
                                                "required": [
                                                    "select_columns"
                                                ]
                                            },
                                            {
                                                "required": [
                                                    "drop_columns"
                                                ]
                                            },
                                            {
                                                "required": [
                                                    "rename_columns"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "minItems": 1
                    }
                }
            }
        },
        {
            "if": {
                "properties": {
                    "engine_type": {
                        "const": "pandas"
                    }
                }
            },
            "then": {
                "properties": {
                    "transformations": {
                        "type": "array",
                        "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "Transformation",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "description": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "dependent_on": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "transformation": {
                                    "type": "string",
                                    "minLength": 1,
                                    "enum": [
                                        "Reader",
                                        "Filter",
                                        "Router",
                                        "Joiner",
                                        "Mapper",
                                        "Writer",
                                        "Union",
                                        "Sequence",
                                        "Aggregator",
                                        "DataQuality",
                                        "SQL",
                                        "Sorter",
                                        "Deduplicator",
                                        "Lookup",
                                        "Set",
                                        "Expression"
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "default": 0,
                                    "minimum": 0
                                },
                                "drop_columns": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": []
                                },
                                "input_selection": {
                                    "type": "object",
                                    "description": "Specifies which outputs from predecessor transformations to use as input",
                                    "patternProperties": {
                                        "^[a-zA-Z0-9_]+$": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "List of output names from the specified predecessor transformation"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "required": [
                                "name",
                                "transformation"
                            ],
                            "allOf": [
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Reader"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Reader",
                                            "color": "#f7a01f",
                                            "icon": "/assets/buildPipeline/6.svg",
                                            "ports": {
                                                "inputs": 0,
                                                "outputs": 1,
                                                "maxInputs": 0
                                            }
                                        },
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "source": {
                                                "type": "object",
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "description": "Schema for Source",
                                                "title": "Source",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Source Name",
                                                        "minLength": 1
                                                    },
                                                    "source_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "File",
                                                            "Relational"
                                                        ]
                                                    },
                                                    "connection": {
                                                        "type": "object",
                                                        "items": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Connection",
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "connection_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Local",
                                                                        "GCS",
                                                                        "S3",
                                                                        "BigQuery",
                                                                        "PostgreSQL",
                                                                        "Snowflake",
                                                                        "MySQL"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "connection_type"
                                                            ],
                                                            "allOf": [
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Local"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "GCS"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "S3"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "BigQuery"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "supportsIncremental": true,
                                                                        "supported_sync_modes": [
                                                                            "overwrite",
                                                                            "append",
                                                                            "append_dedup"
                                                                        ],
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "BigQuery Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "project_id",
                                                                                "credentials_json"
                                                                            ],
                                                                            "properties": {
                                                                                "project_id": {
                                                                                    "type": "string",
                                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                                    "title": "Project ID"
                                                                                },
                                                                                "dataset_id": {
                                                                                    "type": "string",
                                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                                    "title": "Default Dataset ID"
                                                                                },
                                                                                "credentials_json": {
                                                                                    "type": "string",
                                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                                    "title": "Credentials JSON",
                                                                                    "bh_secret": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "PostgreSQL"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Postgres Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "port",
                                                                                "database",
                                                                                "username"
                                                                            ],
                                                                            "properties": {
                                                                                "host": {
                                                                                    "title": "Host",
                                                                                    "description": "Hostname of the database.",
                                                                                    "type": "string",
                                                                                    "order": 0,
                                                                                    "group": "db"
                                                                                },
                                                                                "port": {
                                                                                    "title": "Port",
                                                                                    "description": "Port of the database.",
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 65536,
                                                                                    "default": 5432,
                                                                                    "examples": [
                                                                                        "5432"
                                                                                    ],
                                                                                    "order": 1,
                                                                                    "group": "db"
                                                                                },
                                                                                "database": {
                                                                                    "title": "Database Name",
                                                                                    "description": "Name of the database.",
                                                                                    "type": "string",
                                                                                    "order": 2,
                                                                                    "group": "db"
                                                                                },
                                                                                "schemas": {
                                                                                    "title": "Schemas",
                                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "minItems": 0,
                                                                                    "uniqueItems": true,
                                                                                    "default": [
                                                                                        "public"
                                                                                    ],
                                                                                    "order": 3,
                                                                                    "group": "db"
                                                                                },
                                                                                "username": {
                                                                                    "title": "Username",
                                                                                    "description": "Username to access the database.",
                                                                                    "type": "string",
                                                                                    "order": 4,
                                                                                    "group": "auth"
                                                                                },
                                                                                "password": {
                                                                                    "title": "Password",
                                                                                    "description": "Password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "order": 5,
                                                                                    "group": "auth",
                                                                                    "always_show": true
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                                    "type": "string",
                                                                                    "order": 6,
                                                                                    "group": "advanced",
                                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                                },
                                                                                "ssl_mode": {
                                                                                    "title": "SSL Modes",
                                                                                    "description": "SSL connection modes.",
                                                                                    "type": "object",
                                                                                    "order": 8,
                                                                                    "group": "security",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "disable",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "disable",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "allow",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Enables encryption only when required by the source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "allow",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "prefer",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "prefer",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "require",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "require",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-ca",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-ca",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-full",
                                                                                            "additionalProperties": true,
                                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-full",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "replication_method": {
                                                                                    "type": "object",
                                                                                    "title": "Update Method",
                                                                                    "description": "Configures how data is extracted from the database.",
                                                                                    "order": 9,
                                                                                    "group": "advanced",
                                                                                    "default": "CDC",
                                                                                    "display_type": "radio",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                                            "required": [
                                                                                                "method",
                                                                                                "replication_slot",
                                                                                                "publication"
                                                                                            ],
                                                                                            "additionalProperties": true,
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "CDC",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "plugin": {
                                                                                                    "type": "string",
                                                                                                    "title": "Plugin",
                                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                                    "enum": [
                                                                                                        "pgoutput"
                                                                                                    ],
                                                                                                    "default": "pgoutput",
                                                                                                    "order": 2
                                                                                                },
                                                                                                "replication_slot": {
                                                                                                    "type": "string",
                                                                                                    "title": "Replication Slot",
                                                                                                    "description": "A plugin logical replication slot.",
                                                                                                    "order": 3
                                                                                                },
                                                                                                "publication": {
                                                                                                    "type": "string",
                                                                                                    "title": "Publication",
                                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                                    "order": 4
                                                                                                },
                                                                                                "initial_waiting_seconds": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                                    "default": 1200,
                                                                                                    "order": 5,
                                                                                                    "min": 120,
                                                                                                    "max": 2400
                                                                                                },
                                                                                                "queue_size": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Size of the queue (Advanced)",
                                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                                    "default": 10000,
                                                                                                    "order": 6,
                                                                                                    "min": 1000,
                                                                                                    "max": 10000
                                                                                                },
                                                                                                "lsn_commit_behaviour": {
                                                                                                    "type": "string",
                                                                                                    "title": "LSN commit behaviour",
                                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                                    "enum": [
                                                                                                        "While reading Data",
                                                                                                        "After loading Data in the destination"
                                                                                                    ],
                                                                                                    "default": "After loading Data in the destination",
                                                                                                    "order": 7
                                                                                                },
                                                                                                "heartbeat_action_query": {
                                                                                                    "type": "string",
                                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                                    "default": "",
                                                                                                    "order": 8
                                                                                                },
                                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                                    "type": "string",
                                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                                    "enum": [
                                                                                                        "Fail sync",
                                                                                                        "Re-sync data"
                                                                                                    ],
                                                                                                    "default": "Fail sync",
                                                                                                    "order": 9
                                                                                                },
                                                                                                "initial_load_timeout_hours": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                                    "default": 8,
                                                                                                    "min": 4,
                                                                                                    "max": 24,
                                                                                                    "order": 10
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Detect Changes with Xmin System Column",
                                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Xmin",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Standard",
                                                                                                    "order": 8
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "groups": [
                                                                                {
                                                                                    "id": "db"
                                                                                },
                                                                                {
                                                                                    "id": "auth"
                                                                                },
                                                                                {
                                                                                    "id": "security",
                                                                                    "title": "Security"
                                                                                },
                                                                                {
                                                                                    "id": "advanced",
                                                                                    "title": "Advanced"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Snowflake"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Snowflake Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "role",
                                                                                "warehouse",
                                                                                "database"
                                                                            ],
                                                                            "properties": {
                                                                                "credentials": {
                                                                                    "title": "Authorization Method",
                                                                                    "type": "object",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "type": "object",
                                                                                            "title": "OAuth2.0",
                                                                                            "order": 0,
                                                                                            "required": [
                                                                                                "client_id",
                                                                                                "client_secret",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "bh_hidden": true,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "OAuth",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "client_id": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client ID",
                                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_secret": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Secret",
                                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "access_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Access Token",
                                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                },
                                                                                                "refresh_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Refresh Token",
                                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Key Pair Authentication",
                                                                                            "type": "object",
                                                                                            "order": 1,
                                                                                            "required": [
                                                                                                "username",
                                                                                                "private_key"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Key Pair Authentication",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "private_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Private Key",
                                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                                    "multiline": true,
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "private_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Passphrase",
                                                                                                    "description": "Passphrase for private key",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Username and Password",
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "username",
                                                                                                "password",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "order": 2,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "username/password",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "password": {
                                                                                                    "description": "The password associated with the username.",
                                                                                                    "type": "string",
                                                                                                    "bh_secret": true,
                                                                                                    "title": "Password",
                                                                                                    "order": 2
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "order": 0
                                                                                },
                                                                                "host": {
                                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                                    "examples": [
                                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Account Name",
                                                                                    "order": 1
                                                                                },
                                                                                "role": {
                                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                                    "examples": [
                                                                                        "BH_ROLE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Role",
                                                                                    "order": 2
                                                                                },
                                                                                "warehouse": {
                                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_WAREHOUSE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Warehouse",
                                                                                    "order": 3
                                                                                },
                                                                                "database": {
                                                                                    "description": "The database you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_DATABASE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Database",
                                                                                    "order": 4
                                                                                },
                                                                                "schema": {
                                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                                    "examples": [
                                                                                        "BH_SCHEMA"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Schema",
                                                                                    "order": 5
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                                    "title": "JDBC URL Params",
                                                                                    "type": "string",
                                                                                    "order": 6
                                                                                }
                                                                            }
                                                                        },
                                                                        "advanced_auth": {
                                                                            "auth_flow_type": "oauth2.0",
                                                                            "predicate_key": [
                                                                                "credentials",
                                                                                "auth_type"
                                                                            ],
                                                                            "predicate_value": "OAuth",
                                                                            "oauth_config_specification": {
                                                                                "oauth_user_input_from_connector_config_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "host"
                                                                                            ]
                                                                                        },
                                                                                        "role": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "role"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "access_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "access_token"
                                                                                            ]
                                                                                        },
                                                                                        "refresh_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "refresh_token"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_input_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_id"
                                                                                            ]
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_secret"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "source_type",
                                                    "connection"
                                                ],
                                                "allOf": [
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "file_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "file_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "table_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "table_name"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "select_columns": {
                                                "type": "array",
                                                "description": "List of column names to select from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "drop_columns": {
                                                "type": "array",
                                                "description": "List of column names to drop from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "rename_columns": {
                                                "type": "object",
                                                "description": "Mapping of old column names to new column names",
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "source"
                                        ],
                                        "allOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "source": {
                                                            "properties": {
                                                                "source_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "file_type": {
                                                            "type": "string",
                                                            "description": "File Type",
                                                            "enum": [
                                                                "CSV",
                                                                "JSON",
                                                                "Parquet",
                                                                "ORC",
                                                                "Avro",
                                                                "Excel",
                                                                "XML",
                                                                "FixedWidth"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "file_type"
                                                    ],
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "CSV"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "read_options": {
                                                                        "type": "object",
                                                                        "items": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "type": "object",
                                                                            "title": "CSV Reader Options",
                                                                            "properties": {
                                                                                "filepath_or_buffer": {
                                                                                    "type": "string",
                                                                                    "description": "Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, gs, and file. For file URLs, a host is expected. A local file could be: file://localhost/path/to/table.csv . If you want to pass in a path object, pandas accepts any os.PathLike . By file-like object, we refer to objects with a read() method, such as a file handle (e.g. via builtin open function) or StringIO .",
                                                                                    "default": null
                                                                                },
                                                                                "sep": {
                                                                                    "type": "string",
                                                                                    "description": "Character or regex pattern to treat as the delimiter. If sep=None , the C engine cannot automatically detect the separator, but the Python parsing engine can, meaning the latter will be used and automatically detect the separator from only the first valid row of the file by Pythons builtin sniffer tool, csv.Sniffer . In addition, separators longer than 1 character and different from '\\s+' will be interpreted as regular expressions and will also force the use of the Python parsing engine. Note that regex delimiters are prone to ignoring quoted data. Regex example: '\\r\\t' .",
                                                                                    "default": ","
                                                                                },
                                                                                "delimiter": {
                                                                                    "type": "string",
                                                                                    "description": "Alias for sep .",
                                                                                    "default": null
                                                                                },
                                                                                "header": {
                                                                                    "type": "integer",
                                                                                    "description": "Row number(s) containing column labels and marking the start of the data (zero-indexed). Default behavior is to infer the column names: if no names are passed the behavior is identical to header=0 and column names are inferred from the first line of the file, if column names are passed explicitly to names then the behavior is identical to header=None . Explicitly pass header=0 to be able to replace existing names. The header can be a list of integers that specify row locations for a MultiIndex on the columns e.g. [0, 1, 3] . Intervening rows that are not specified will be skipped (e.g. 2 in this example is skipped). Note that this parameter ignores commented lines and empty lines if skip_blank_lines=True , so header=0 denotes the first line of data rather than the first line of the file.",
                                                                                    "default": "infer"
                                                                                },
                                                                                "names": {
                                                                                    "type": "array",
                                                                                    "description": "Sequence of column labels to apply. If the file contains a header row, then you should explicitly pass header=0 to override the column names. Duplicates in this list are not allowed.",
                                                                                    "default": null,
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "index_col": {
                                                                                    "type": [
                                                                                        "integer",
                                                                                        "array",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "description": "Column(s) to use as row label(s), denoted either by column labels or column indices. If a sequence of labels or indices is given, MultiIndex will be formed for the row labels. Note: index_col=False can be used to force pandas to not use the first column as the index, e.g., when you have a malformed file with delimiters at the end of each line.",
                                                                                    "default": null
                                                                                },
                                                                                "usecols": {
                                                                                    "type": [
                                                                                        "array",
                                                                                        "string"
                                                                                    ],
                                                                                    "description": "Subset of columns to select, denoted either by column labels or column indices. If list-like, all elements must either be positional (i.e. integer indices into the document columns) or strings that correspond to column names provided either by the user in names or inferred from the document header row(s). If names are given, the document header row(s) are not taken into account. For example, a valid list-like usecols parameter would be [0, 1, 2] or ['foo', 'bar', 'baz'] . Element order is ignored, so usecols=[0, 1] is the same as [1, 0] . To instantiate a DataFrame from data with element order preserved use pd.read_csv(data, usecols=['foo', 'bar'])[['foo', 'bar']] for columns in ['foo', 'bar'] order or pd.read_csv(data, usecols=['foo', 'bar'])[['bar', 'foo']] for ['bar', 'foo'] order. If callable, the callable function will be evaluated against the column names, returning names where the callable function evaluates to True . An example of a valid callable argument would be lambda x: x.upper() in ['AAA', 'BBB', 'DDD'] . Using this parameter results in much faster parsing time and lower memory usage.",
                                                                                    "default": null,
                                                                                    "items": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "integer"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "dtype": {
                                                                                    "type": "object",
                                                                                    "description": "Data type(s) to apply to either the whole dataset or individual columns. E.g., {'a': np.float64, 'b': np.int32, 'c': 'Int64'} Use str or object together with suitable na_values settings to preserve and not interpret dtype . If converters are specified, they will be applied INSTEAD of dtype conversion. Added in version 1.5.0: Support for defaultdict was added. Specify a defaultdict as input where the default determines the dtype of the columns which are not explicitly listed.",
                                                                                    "default": null
                                                                                },
                                                                                "engine": {
                                                                                    "type": "string",
                                                                                    "description": "Parser engine to use. The C and pyarrow engines are faster, while the python engine is currently more feature-complete. Multithreading is currently only supported by the pyarrow engine. Added in version 1.4.0: The pyarrow engine was added as an experimental engine, and some features are unsupported, or may not work correctly, with this engine.",
                                                                                    "default": null,
                                                                                    "enum": [
                                                                                        "c",
                                                                                        "python",
                                                                                        "pyarrow"
                                                                                    ]
                                                                                },
                                                                                "converters": {
                                                                                    "type": "object",
                                                                                    "description": "Functions for converting values in specified columns. Keys can either be column labels or column indices.",
                                                                                    "default": null
                                                                                },
                                                                                "true_values": {
                                                                                    "type": "array",
                                                                                    "description": "Values to consider as True in addition to case-insensitive variants of True.",
                                                                                    "default": null,
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "false_values": {
                                                                                    "type": "array",
                                                                                    "description": "Values to consider as False in addition to case-insensitive variants of False.",
                                                                                    "default": null,
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "skipinitialspace": {
                                                                                    "type": "boolean",
                                                                                    "description": "Skip spaces after delimiter.",
                                                                                    "default": false
                                                                                },
                                                                                "skiprows": {
                                                                                    "type": [
                                                                                        "integer",
                                                                                        "array"
                                                                                    ],
                                                                                    "description": "Line numbers to skip (0-indexed) or number of lines to skip ( int ) at the start of the file. If callable, the callable function will be evaluated against the row indices, returning True if the row should be skipped and False otherwise. An example of a valid callable argument would be lambda x: x in [0, 2] .",
                                                                                    "default": null,
                                                                                    "items": {
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "skipfooter": {
                                                                                    "type": "integer",
                                                                                    "description": "Number of lines at bottom of file to skip (Unsupported with engine='c' ).",
                                                                                    "default": 0
                                                                                },
                                                                                "nrows": {
                                                                                    "type": "integer",
                                                                                    "description": "Number of rows of file to read. Useful for reading pieces of large files.",
                                                                                    "default": null
                                                                                },
                                                                                "na_values": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "array",
                                                                                        "object"
                                                                                    ],
                                                                                    "description": "Additional strings to recognize as NA / NaN . If dict passed, specific per-column NA values. By default the following values are interpreted as NaN : \" \", \"#N/A\", \"#N/A N/A\", \"#NA\", \"-1.#IND\", \"-1.#QNAN\", \"-NaN\", \"-nan\", \"1.#IND\", \"1.#QNAN\", \"<NA>\", \"N/A\", \"NA\", \"NULL\", \"NaN\", \"None\", \"n/a\", \"nan\", \"null \".",
                                                                                    "default": null
                                                                                },
                                                                                "keep_default_na": {
                                                                                    "type": "boolean",
                                                                                    "description": "Whether or not to include the default NaN values when parsing the data, depending on the choice of na_values .",
                                                                                    "default": true
                                                                                },
                                                                                "na_filter": {
                                                                                    "type": "boolean",
                                                                                    "description": "Detect missing value markers (empty strings and the value of na_values ). In data without any NAs, passing na_filter=False can improve the performance of reading a large file.",
                                                                                    "default": true
                                                                                },
                                                                                "verbose": {
                                                                                    "type": "boolean",
                                                                                    "description": "Indicate number of NA values placed in non-numeric columns.",
                                                                                    "default": false
                                                                                },
                                                                                "skip_blank_lines": {
                                                                                    "type": "boolean",
                                                                                    "description": "If True , skip over blank lines rather than interpreting as NaN values.",
                                                                                    "default": true
                                                                                },
                                                                                "parse_dates": {
                                                                                    "type": [
                                                                                        "boolean",
                                                                                        "array",
                                                                                        "object"
                                                                                    ],
                                                                                    "description": "The behavior is as follows: boolean. If True -> try parsing the index. list of int or names. e.g. If [1, 2, 3] -> try parsing columns 1, 2, 3 each as a separate date column. list of lists. e.g. If [[1, 3]] -> combine columns 1 and 3 and parse as a single date column. dict , e.g. {'foo' : [1, 3]} -> parse columns 1, 3 as date and call result 'foo' If a column or index contains an unparseable date, the entire column or index will be returned unaltered as an object data type. For non-standard datetime parsing, use pd.to_datetime after pd.read_csv . Note: A fast-path exists for iso8601-formatted dates.",
                                                                                    "default": false
                                                                                },
                                                                                "infer_datetime_format": {
                                                                                    "type": "boolean",
                                                                                    "description": "If True and parse_dates is enabled, pandas will attempt to infer the format of the datetime strings in the columns, and if it can be inferred, switch to a faster method of parsing them. In some cases this can increase the parsing speed by 5-10x .",
                                                                                    "default": false
                                                                                },
                                                                                "keep_date_col": {
                                                                                    "type": "boolean",
                                                                                    "description": "If True and parse_dates specifies combining multiple columns then keep the original columns.",
                                                                                    "default": false
                                                                                },
                                                                                "date_parser": {
                                                                                    "type": "string",
                                                                                    "description": "Function to use for converting a sequence of string columns to an array of datetime instances. The default uses dateutil.parser.parser to do the conversion. Pandas will try to call date_parser in three different ways, advancing to the next if an exception occurs: 1) Pass one or more arrays (as defined by parse_dates ) as arguments; 2) concatenate (row-wise) the string values from the columns defined by parse_dates into a single array and pass that; and 3) call date_parser once for each row using one or more strings (corresponding to the columns defined by parse_dates ) as arguments.",
                                                                                    "default": null
                                                                                },
                                                                                "dayfirst": {
                                                                                    "type": "boolean",
                                                                                    "description": "DD/MM format dates, international and European format.",
                                                                                    "default": false
                                                                                },
                                                                                "cache_dates": {
                                                                                    "type": "boolean",
                                                                                    "description": "If True , use a cache of unique, converted dates to apply the datetime conversion. May produce significant speed-up when parsing duplicate date strings, especially ones with timezone offsets. The cache is only used when there are at least 50 values. The presence of out-of-bounds values will render the cache unusable and may slow down parsing.",
                                                                                    "default": true
                                                                                },
                                                                                "iterator": {
                                                                                    "type": "boolean",
                                                                                    "description": "Return TextFileReader object for iteration or getting chunks with get_chunk() .",
                                                                                    "default": false
                                                                                },
                                                                                "chunksize": {
                                                                                    "type": "integer",
                                                                                    "description": "Return TextFileReader object for iteration. See the IO Tools docs for more information on iterator and chunksize .",
                                                                                    "default": null
                                                                                },
                                                                                "compression": {
                                                                                    "type": "string",
                                                                                    "description": "For on-the-fly decompression of on-disk data. If 'infer' and filepath_or_buffer is a path-like, then detect compression from the following extensions: '.gz' , '.bz2' , '.zip' , '.xz' , '.zst' , '.tar' , '.tar.gz' , '.tar.xz' or '.tar.bz2' (otherwise no compression). If using 'zip' , the ZIP file must contain only one data file to be read in. Set to None for no decompression. Can also be a dict with key 'method' set to one of {'zip' , 'gzip' , 'bz2' , 'zstd' , 'tar'} and other key-value pairs are forwarded to zipfile.ZipFile , gzip.GzipFile , bz2.BZ2File , zstandard.ZstdDecompressor or tarfile.TarFile , respectively. As an example, the following could be passed for Zstandard decompression using a custom compression dictionary: compression={'method': 'zstd', 'dict_data': my_compression_dict} .",
                                                                                    "default": "infer",
                                                                                    "enum": [
                                                                                        "infer",
                                                                                        "gzip",
                                                                                        "bz2",
                                                                                        "zip",
                                                                                        "xz",
                                                                                        "zstd",
                                                                                        "tar",
                                                                                        null
                                                                                    ]
                                                                                },
                                                                                "thousands": {
                                                                                    "type": "string",
                                                                                    "description": "Thousands separator.",
                                                                                    "default": null
                                                                                },
                                                                                "decimal": {
                                                                                    "type": "string",
                                                                                    "description": "Character to recognize as decimal point (e.g. use ',' for European data).",
                                                                                    "default": "."
                                                                                },
                                                                                "lineterminator": {
                                                                                    "type": "string",
                                                                                    "description": "Character to break file into lines. Only valid with C parser.",
                                                                                    "default": null
                                                                                },
                                                                                "quotechar": {
                                                                                    "type": "string",
                                                                                    "description": "The character used to denote the start and end of a quoted item. Quoted items can include the delimiter and it will be ignored.",
                                                                                    "default": "\""
                                                                                },
                                                                                "quoting": {
                                                                                    "type": "integer",
                                                                                    "description": "Control field quoting behavior per csv.QUOTE_* constants. Use one of QUOTE_MINIMAL (0) , QUOTE_ALL (1) , QUOTE_NONNUMERIC (2) or QUOTE_NONE (3) .",
                                                                                    "default": 0,
                                                                                    "enum": [
                                                                                        0,
                                                                                        1,
                                                                                        2,
                                                                                        3
                                                                                    ]
                                                                                },
                                                                                "doublequote": {
                                                                                    "type": "boolean",
                                                                                    "description": "When quotechar is specified and quoting is not QUOTE_NONE , indicate whether or not to interpret two consecutive quotechar characters INSIDE a field as a single quotechar character.",
                                                                                    "default": true
                                                                                },
                                                                                "escapechar": {
                                                                                    "type": "string",
                                                                                    "description": "One-character string used to escape other characters.",
                                                                                    "default": null
                                                                                },
                                                                                "comment": {
                                                                                    "type": "string",
                                                                                    "description": "Indicates remainder of line should not be parsed. If found at the beginning of a line, the line will be ignored altogether. This parameter must be a single character. Like empty lines (as long as skip_blank_lines=True ), fully commented lines are ignored by the parameter header but not by skiprows . For example, if comment='#' , parsing #empty\\na,b,c\\n1,2,3 with header=0 will result in 'a,b,c' being treated as the header.",
                                                                                    "default": null
                                                                                },
                                                                                "encoding": {
                                                                                    "type": "string",
                                                                                    "description": "Encoding to use for UTF when reading/writing (ex. 'utf-8' ). List of Python standard encodings .",
                                                                                    "default": null
                                                                                },
                                                                                "encoding_errors": {
                                                                                    "type": "string",
                                                                                    "description": "How encoding errors are handled. List of possible values .",
                                                                                    "default": "strict",
                                                                                    "enum": [
                                                                                        "strict",
                                                                                        "ignore",
                                                                                        "replace",
                                                                                        "xmlcharrefreplace",
                                                                                        "backslashreplace",
                                                                                        "namereplace",
                                                                                        "surrogateescape",
                                                                                        "surrogatepass"
                                                                                    ]
                                                                                },
                                                                                "dialect": {
                                                                                    "type": "string",
                                                                                    "description": "If provided, this parameter will override values (default or not) for the following parameters: delimiter , doublequote , escapechar , skipinitialspace , quotechar , and quoting . If it is necessary to override values, a ParserWarning will be issued. See csv.Dialect documentation for more details.",
                                                                                    "default": null
                                                                                },
                                                                                "on_bad_lines": {
                                                                                    "type": "string",
                                                                                    "description": "Specifies what to do upon encountering a bad line (a line with too many fields). Allowed values are: 'error' , which will raise an Exception when a bad line is encountered. 'warn' , which raises a warning when a bad line is encountered and skips that line. 'skip' which will skip bad lines without raising or warning when they are encountered. None , which will raise an Exception when a bad line is encountered and will be the default behavior in the future. Changed in version 1.3.0: Support for 'skip' was added. Changed in version 1.4.0: The default value will change to None in a future version.",
                                                                                    "default": "error",
                                                                                    "enum": [
                                                                                        "error",
                                                                                        "warn",
                                                                                        "skip"
                                                                                    ]
                                                                                },
                                                                                "delim_whitespace": {
                                                                                    "type": "boolean",
                                                                                    "description": "Specifies whether or not whitespace (e.g. ' ' or '\\t' ) will be used as the sep . Equivalent to setting sep='\\s+' . If this option is set to True , nothing should be passed in for the delimiter parameter.",
                                                                                    "default": false
                                                                                },
                                                                                "low_memory": {
                                                                                    "type": "boolean",
                                                                                    "description": "Internally process the file in chunks, resulting in lower memory use while parsing, but possibly mixed type inference. To ensure no mixed types either set False , or specify the type with the dtype parameter. Note that the entire file is read into a single DataFrame regardless, so the chunksize parameter can cause the lines not to be split by the delimiter in the chunk. Only valid with C parser.",
                                                                                    "default": true
                                                                                },
                                                                                "memory_map": {
                                                                                    "type": "boolean",
                                                                                    "description": "If a filepath is provided for filepath_or_buffer , map the file object directly onto memory and access the data directly from there. Using this option can improve performance because there is no longer any I/O overhead.",
                                                                                    "default": false
                                                                                },
                                                                                "float_precision": {
                                                                                    "type": "string",
                                                                                    "description": "Specifies which converter the C engine should use for floating-point values. The options are None for the ordinary converter, high for the high-precision converter, and legacy for the legacy low-precision converter.",
                                                                                    "default": null,
                                                                                    "enum": [
                                                                                        "legacy",
                                                                                        "high",
                                                                                        null
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "filepath_or_buffer"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "required": [
                                                                    "read_options"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "source": {
                                                            "properties": {
                                                                "type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "query": {
                                                            "type": "string",
                                                            "description": "Query",
                                                            "minLength": 1
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Mapper"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_type": "tab-container",
                                        "ui_properties": {
                                            "module_name": "Mapper",
                                            "color": "#32D1A4",
                                            "icon": "/assets/buildPipeline/28.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "derived_fields": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "function_name",
                                                        "parameters"
                                                    ],
                                                    "properties": {
                                                        "function_name": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "description": "Function name to execute"
                                                        },
                                                        "parameters": {
                                                            "type": "object",
                                                            "description": "Function parameters including input_fields and output_fields",
                                                            "properties": {
                                                                "input_fields": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "List of input field names"
                                                                },
                                                                "output_fields": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "List of output field names"
                                                                }
                                                            },
                                                            "additionalProperties": true
                                                        }
                                                    }
                                                }
                                            },
                                            "select_columns": {
                                                "type": "array",
                                                "description": "List of column names to select from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "drop_columns": {
                                                "type": "array",
                                                "description": "List of column names to drop from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "rename_columns": {
                                                "type": "object",
                                                "description": "Mapping of old column names to new column names",
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        },
                                        "required": [
                                            "derived_fields"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Filter"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Filter",
                                            "color": "#f5bc2a",
                                            "icon": "/assets/buildPipeline/display/filter.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "condition": {
                                                "type": "string",
                                                "minLength": 1
                                            }
                                        },
                                        "required": [
                                            "condition"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Sorter"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Sorter",
                                            "color": "#219fe7",
                                            "icon": "/assets/buildPipeline/squre/1.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "sort_columns": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "column": {
                                                            "type": "string"
                                                        },
                                                        "order": {
                                                            "type": "string",
                                                            "enum": [
                                                                "asc",
                                                                "desc"
                                                            ],
                                                            "default": "asc"
                                                        }
                                                    },
                                                    "required": [
                                                        "column",
                                                        "order"
                                                    ]
                                                },
                                                "minItems": 1
                                            }
                                        },
                                        "required": [
                                            "sort_columns"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Joiner"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Joiner",
                                            "color": "#ff7396",
                                            "icon": "/assets/buildPipeline/display/join.svg",
                                            "ports": {
                                                "inputs": 2,
                                                "outputs": 1,
                                                "maxInputs": "unlimited"
                                            }
                                        },
                                        "properties": {
                                            "conditions": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "items": {
                                                    "join_input": {
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "description": "The name of input dataframe to join"
                                                    },
                                                    "join_condition": {
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "ui-hint": "expression"
                                                    },
                                                    "join_type": {
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "enum": [
                                                            "inner",
                                                            "left",
                                                            "right",
                                                            "full",
                                                            "left_semi",
                                                            "left_anti"
                                                        ]
                                                    }
                                                }
                                            },
                                            "expressions": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "items": {
                                                    "target_column": {
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "expression": {
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "ui-hint": "expression"
                                                    }
                                                }
                                            },
                                            "advanced": {
                                                "type": "object",
                                                "properties": {
                                                    "hints": {
                                                        "type": "array",
                                                        "uniqueItems": true,
                                                        "items": {
                                                            "join_input": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "hint_type": {
                                                                "type": "string",
                                                                "minLength": 1,
                                                                "enum": [
                                                                    "broadcast",
                                                                    "merge",
                                                                    "shuffle_hash",
                                                                    "shuffle_replicate_nl",
                                                                    "None"
                                                                ]
                                                            },
                                                            "propagate_all_columns": {
                                                                "type": "boolean",
                                                                "default": false
                                                            }
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "hints"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "conditions"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Aggregator"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "description": "",
                                        "type": "object",
                                        "properties": {
                                            "aggregate": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "target_column": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "expression": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "ui-hint": "expression"
                                                        }
                                                    }
                                                }
                                            },
                                            "group_by": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            },
                                            "pivot": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "pivot_column": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "pivot_values": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "minLength": 1
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "required": [
                                            "group_by",
                                            "aggregate"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Router"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "",
                                        "type": "object",
                                        "properties": {
                                            "conditions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "condition": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "condition"
                                                    ]
                                                },
                                                "minItems": 1
                                            }
                                        },
                                        "required": [
                                            "conditions"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Writer"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Target",
                                            "color": "#07a260",
                                            "icon": "/assets/buildPipeline/7.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 0,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "target": {
                                                "type": "object",
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "description": "Schema for Target",
                                                "title": "Target",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Target Name",
                                                        "minLength": 1
                                                    },
                                                    "target_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "File",
                                                            "Relational",
                                                            "Iceberg"
                                                        ]
                                                    },
                                                    "connection": {
                                                        "type": "object",
                                                        "items": {
                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                            "title": "Connection",
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "connection_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Local",
                                                                        "GCS",
                                                                        "S3",
                                                                        "BigQuery",
                                                                        "PostgreSQL",
                                                                        "Snowflake",
                                                                        "MySQL"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "connection_type"
                                                            ],
                                                            "allOf": [
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Local"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "GCS"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "S3"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "properties": {
                                                                            "bucket": {
                                                                                "type": "string",
                                                                                "minLength": 1
                                                                            },
                                                                            "file_path_prefix": {
                                                                                "type": "string",
                                                                                "default": ""
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "bucket",
                                                                            "file_path_prefix"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "BigQuery"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "supportsIncremental": true,
                                                                        "supported_sync_modes": [
                                                                            "overwrite",
                                                                            "append",
                                                                            "append_dedup"
                                                                        ],
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "BigQuery Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "project_id",
                                                                                "credentials_json"
                                                                            ],
                                                                            "properties": {
                                                                                "project_id": {
                                                                                    "type": "string",
                                                                                    "description": "The GCP project ID for the project containing the target BigQuery dataset.",
                                                                                    "title": "Project ID"
                                                                                },
                                                                                "dataset_id": {
                                                                                    "type": "string",
                                                                                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
                                                                                    "title": "Default Dataset ID"
                                                                                },
                                                                                "credentials_json": {
                                                                                    "type": "string",
                                                                                    "description": "The contents of your Service Account Key JSON file.",
                                                                                    "title": "Credentials JSON",
                                                                                    "bh_secret": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "PostgreSQL"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Postgres Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "port",
                                                                                "database",
                                                                                "username"
                                                                            ],
                                                                            "properties": {
                                                                                "host": {
                                                                                    "title": "Host",
                                                                                    "description": "Hostname of the database.",
                                                                                    "type": "string",
                                                                                    "order": 0,
                                                                                    "group": "db"
                                                                                },
                                                                                "port": {
                                                                                    "title": "Port",
                                                                                    "description": "Port of the database.",
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 65536,
                                                                                    "default": 5432,
                                                                                    "examples": [
                                                                                        "5432"
                                                                                    ],
                                                                                    "order": 1,
                                                                                    "group": "db"
                                                                                },
                                                                                "database": {
                                                                                    "title": "Database Name",
                                                                                    "description": "Name of the database.",
                                                                                    "type": "string",
                                                                                    "order": 2,
                                                                                    "group": "db"
                                                                                },
                                                                                "schemas": {
                                                                                    "title": "Schemas",
                                                                                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "minItems": 0,
                                                                                    "uniqueItems": true,
                                                                                    "default": [
                                                                                        "public"
                                                                                    ],
                                                                                    "order": 3,
                                                                                    "group": "db"
                                                                                },
                                                                                "username": {
                                                                                    "title": "Username",
                                                                                    "description": "Username to access the database.",
                                                                                    "type": "string",
                                                                                    "order": 4,
                                                                                    "group": "auth"
                                                                                },
                                                                                "password": {
                                                                                    "title": "Password",
                                                                                    "description": "Password associated with the username.",
                                                                                    "type": "string",
                                                                                    "bh_secret": true,
                                                                                    "order": 5,
                                                                                    "group": "auth",
                                                                                    "always_show": true
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href=\"https://jdbc.postgresql.org/documentation/head/connect.html\">JDBC URL parameters</a>.",
                                                                                    "title": "JDBC URL Parameters (Advanced)",
                                                                                    "type": "string",
                                                                                    "order": 6,
                                                                                    "group": "advanced",
                                                                                    "pattern_descriptor": "key1=value1&key2=value2"
                                                                                },
                                                                                "ssl_mode": {
                                                                                    "title": "SSL Modes",
                                                                                    "description": "SSL connection modes.",
                                                                                    "type": "object",
                                                                                    "order": 8,
                                                                                    "group": "security",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "disable",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Disables encryption of communication between BigHammer and source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "disable",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "allow",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Enables encryption only when required by the source database.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "allow",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "prefer",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Allows unencrypted connection only if the source database does not support encryption.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "prefer",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "require",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption. If the source database server does not support encryption, connection will fail.",
                                                                                            "required": [
                                                                                                "mode"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "require",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-ca",
                                                                                            "additionalProperties": true,
                                                                                            "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-ca",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "verify-full",
                                                                                            "additionalProperties": true,
                                                                                            "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.",
                                                                                            "required": [
                                                                                                "mode",
                                                                                                "ca_certificate"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "mode": {
                                                                                                    "type": "string",
                                                                                                    "const": "verify-full",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "ca_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "CA Certificate",
                                                                                                    "description": "CA certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_certificate": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Certificate",
                                                                                                    "description": "Client certificate",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 2,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Key",
                                                                                                    "description": "Client key",
                                                                                                    "bh_secret": true,
                                                                                                    "multiline": true,
                                                                                                    "order": 3,
                                                                                                    "always_show": true
                                                                                                },
                                                                                                "client_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client key password",
                                                                                                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "replication_method": {
                                                                                    "type": "object",
                                                                                    "title": "Update Method",
                                                                                    "description": "Configures how data is extracted from the database.",
                                                                                    "order": 9,
                                                                                    "group": "advanced",
                                                                                    "default": "CDC",
                                                                                    "display_type": "radio",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "title": "Read Changes using Write-Ahead Log (CDC)",
                                                                                            "description": "<i>Recommended</i> - Incrementally reads new inserts, updates, and deletes using the Postgres. This needs to be configured on the source database itself. Recommended for tables of any size.",
                                                                                            "required": [
                                                                                                "method",
                                                                                                "replication_slot",
                                                                                                "publication"
                                                                                            ],
                                                                                            "additionalProperties": true,
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "CDC",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "plugin": {
                                                                                                    "type": "string",
                                                                                                    "title": "Plugin",
                                                                                                    "description": "A logical decoding plugin installed on the PostgreSQL server.",
                                                                                                    "enum": [
                                                                                                        "pgoutput"
                                                                                                    ],
                                                                                                    "default": "pgoutput",
                                                                                                    "order": 2
                                                                                                },
                                                                                                "replication_slot": {
                                                                                                    "type": "string",
                                                                                                    "title": "Replication Slot",
                                                                                                    "description": "A plugin logical replication slot.",
                                                                                                    "order": 3
                                                                                                },
                                                                                                "publication": {
                                                                                                    "type": "string",
                                                                                                    "title": "Publication",
                                                                                                    "description": "A Postgres publication used for consuming changes.",
                                                                                                    "order": 4
                                                                                                },
                                                                                                "initial_waiting_seconds": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Waiting Time in Seconds (Advanced)",
                                                                                                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds.",
                                                                                                    "default": 1200,
                                                                                                    "order": 5,
                                                                                                    "min": 120,
                                                                                                    "max": 2400
                                                                                                },
                                                                                                "queue_size": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Size of the queue (Advanced)",
                                                                                                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful.",
                                                                                                    "default": 10000,
                                                                                                    "order": 6,
                                                                                                    "min": 1000,
                                                                                                    "max": 10000
                                                                                                },
                                                                                                "lsn_commit_behaviour": {
                                                                                                    "type": "string",
                                                                                                    "title": "LSN commit behaviour",
                                                                                                    "description": "Determines when BigHammer should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync.",
                                                                                                    "enum": [
                                                                                                        "While reading Data",
                                                                                                        "After loading Data in the destination"
                                                                                                    ],
                                                                                                    "default": "After loading Data in the destination",
                                                                                                    "order": 7
                                                                                                },
                                                                                                "heartbeat_action_query": {
                                                                                                    "type": "string",
                                                                                                    "title": "Debezium heartbeat query (Advanced)",
                                                                                                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message.",
                                                                                                    "default": "",
                                                                                                    "order": 8
                                                                                                },
                                                                                                "invalid_cdc_cursor_position_behavior": {
                                                                                                    "type": "string",
                                                                                                    "title": "Invalid CDC position behavior (Advanced)",
                                                                                                    "description": "Determines whether BigHammer should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, BigHammer will automatically trigger a refresh but could lead to higher cloud costs and data loss.",
                                                                                                    "enum": [
                                                                                                        "Fail sync",
                                                                                                        "Re-sync data"
                                                                                                    ],
                                                                                                    "default": "Fail sync",
                                                                                                    "order": 9
                                                                                                },
                                                                                                "initial_load_timeout_hours": {
                                                                                                    "type": "integer",
                                                                                                    "title": "Initial Load Timeout in Hours (Advanced)",
                                                                                                    "description": "The amount of time an initial load is allowed to continue for before catching up on CDC logs.",
                                                                                                    "default": 8,
                                                                                                    "min": 4,
                                                                                                    "max": 24,
                                                                                                    "order": 10
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Detect Changes with Xmin System Column",
                                                                                            "description": "Recommended - Incrementally reads new inserts and updates via Postgres Xmin system column. Suitable for databases that have low transaction pressure.",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Xmin",
                                                                                                    "order": 0
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Scan Changes with User Defined Cursor",
                                                                                            "description": "Incrementally detects new inserts and updates using the cursor column chosen when configuring a connection (e.g. created_at, updated_at).",
                                                                                            "required": [
                                                                                                "method"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "method": {
                                                                                                    "type": "string",
                                                                                                    "const": "Standard",
                                                                                                    "order": 8
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "groups": [
                                                                                {
                                                                                    "id": "db"
                                                                                },
                                                                                {
                                                                                    "id": "auth"
                                                                                },
                                                                                {
                                                                                    "id": "security",
                                                                                    "title": "Security"
                                                                                },
                                                                                {
                                                                                    "id": "advanced",
                                                                                    "title": "Advanced"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "connection_type": {
                                                                                "const": "Snowflake"
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "documentationUrl": "N/A",
                                                                        "connectionSpecification": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "title": "Snowflake Source Spec",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "host",
                                                                                "role",
                                                                                "warehouse",
                                                                                "database"
                                                                            ],
                                                                            "properties": {
                                                                                "credentials": {
                                                                                    "title": "Authorization Method",
                                                                                    "type": "object",
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "type": "object",
                                                                                            "title": "OAuth2.0",
                                                                                            "order": 0,
                                                                                            "required": [
                                                                                                "client_id",
                                                                                                "client_secret",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "bh_hidden": true,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "OAuth",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "client_id": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client ID",
                                                                                                    "description": "The Client ID of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 1
                                                                                                },
                                                                                                "client_secret": {
                                                                                                    "type": "string",
                                                                                                    "title": "Client Secret",
                                                                                                    "description": "The Client Secret of your Snowflake developer application.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "access_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Access Token",
                                                                                                    "description": "Access Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                },
                                                                                                "refresh_token": {
                                                                                                    "type": "string",
                                                                                                    "title": "Refresh Token",
                                                                                                    "description": "Refresh Token for making authenticated requests.",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 4
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Key Pair Authentication",
                                                                                            "type": "object",
                                                                                            "order": 1,
                                                                                            "required": [
                                                                                                "username",
                                                                                                "private_key"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Key Pair Authentication",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "private_key": {
                                                                                                    "type": "string",
                                                                                                    "title": "Private Key",
                                                                                                    "description": "RSA Private key to use for Snowflake connection.",
                                                                                                    "multiline": true,
                                                                                                    "bh_secret": true,
                                                                                                    "order": 2
                                                                                                },
                                                                                                "private_key_password": {
                                                                                                    "type": "string",
                                                                                                    "title": "Passphrase",
                                                                                                    "description": "Passphrase for private key",
                                                                                                    "bh_secret": true,
                                                                                                    "order": 3
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "title": "Username and Password",
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "username",
                                                                                                "password",
                                                                                                "auth_type"
                                                                                            ],
                                                                                            "order": 2,
                                                                                            "properties": {
                                                                                                "auth_type": {
                                                                                                    "type": "string",
                                                                                                    "const": "username/password",
                                                                                                    "order": 0
                                                                                                },
                                                                                                "username": {
                                                                                                    "description": "The username you created to allow BigHammer to access the database.",
                                                                                                    "examples": [
                                                                                                        "BH_USER"
                                                                                                    ],
                                                                                                    "type": "string",
                                                                                                    "title": "Username",
                                                                                                    "order": 1
                                                                                                },
                                                                                                "password": {
                                                                                                    "description": "The password associated with the username.",
                                                                                                    "type": "string",
                                                                                                    "bh_secret": true,
                                                                                                    "title": "Password",
                                                                                                    "order": 2
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "order": 0
                                                                                },
                                                                                "host": {
                                                                                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
                                                                                    "examples": [
                                                                                        "accountname.us-east-2.aws.snowflakecomputing.com"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Account Name",
                                                                                    "order": 1
                                                                                },
                                                                                "role": {
                                                                                    "description": "The role you created for BigHammer to access Snowflake.",
                                                                                    "examples": [
                                                                                        "BH_ROLE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Role",
                                                                                    "order": 2
                                                                                },
                                                                                "warehouse": {
                                                                                    "description": "The warehouse you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_WAREHOUSE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Warehouse",
                                                                                    "order": 3
                                                                                },
                                                                                "database": {
                                                                                    "description": "The database you created for BigHammer to access data.",
                                                                                    "examples": [
                                                                                        "BH_DATABASE"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Database",
                                                                                    "order": 4
                                                                                },
                                                                                "schema": {
                                                                                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.",
                                                                                    "examples": [
                                                                                        "BH_SCHEMA"
                                                                                    ],
                                                                                    "type": "string",
                                                                                    "title": "Schema",
                                                                                    "order": 5
                                                                                },
                                                                                "jdbc_url_params": {
                                                                                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
                                                                                    "title": "JDBC URL Params",
                                                                                    "type": "string",
                                                                                    "order": 6
                                                                                }
                                                                            }
                                                                        },
                                                                        "advanced_auth": {
                                                                            "auth_flow_type": "oauth2.0",
                                                                            "predicate_key": [
                                                                                "credentials",
                                                                                "auth_type"
                                                                            ],
                                                                            "predicate_value": "OAuth",
                                                                            "oauth_config_specification": {
                                                                                "oauth_user_input_from_connector_config_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "host"
                                                                                            ]
                                                                                        },
                                                                                        "role": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "role"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "access_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "access_token"
                                                                                            ]
                                                                                        },
                                                                                        "refresh_token": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "refresh_token"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_input_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "complete_oauth_server_output_specification": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "client_id": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_id"
                                                                                            ]
                                                                                        },
                                                                                        "client_secret": {
                                                                                            "type": "string",
                                                                                            "path_in_connector_config": [
                                                                                                "credentials",
                                                                                                "client_secret"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "load_mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "append",
                                                            "merge",
                                                            "overwrite",
                                                            "ignore",
                                                            "error"
                                                        ],
                                                        "default": "append"
                                                    },
                                                    "merge_keys": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "target_type",
                                                    "connection",
                                                    "load_mode"
                                                ],
                                                "allOf": [
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "load_mode": {
                                                                    "const": "merge"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "required": [
                                                                "merge_keys"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "file_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "file_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "Relational"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "table_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "table_name"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "Iceberg"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "properties": {
                                                                "table_name": {
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                }
                                                            },
                                                            "required": [
                                                                "table_name"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "target"
                                        ],
                                        "allOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "target": {
                                                            "properties": {
                                                                "target_type": {
                                                                    "const": "File"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "properties": {
                                                        "file_type": {
                                                            "type": "string",
                                                            "description": "File Type",
                                                            "enum": [
                                                                "CSV",
                                                                "JSON",
                                                                "Parquet",
                                                                "ORC",
                                                                "Avro",
                                                                "Excel",
                                                                "XML",
                                                                "FixedWidth"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "file_type"
                                                    ],
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "file_type": {
                                                                        "const": "CSV"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "write_options": {
                                                                        "type": "object",
                                                                        "items": {
                                                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                                                            "type": "object",
                                                                            "title": "CSV Writer Options",
                                                                            "properties": {
                                                                                "path_or_buf": {
                                                                                    "type": "string",
                                                                                    "description": "String, path object (implementing os.PathLike[str] ), or file-like object implementing a write() function. If None, the result is returned as a string. If a non-binary file object is passed, it should be opened with newline='' , disabling universal newlines. If a binary file object is passed, mode might need to contain a 'b' .",
                                                                                    "default": null
                                                                                },
                                                                                "sep": {
                                                                                    "type": "string",
                                                                                    "description": "String of length 1. Field delimiter for the output file.",
                                                                                    "default": ","
                                                                                },
                                                                                "na_rep": {
                                                                                    "type": "string",
                                                                                    "description": "Missing data representation.",
                                                                                    "default": ""
                                                                                },
                                                                                "float_format": {
                                                                                    "type": "string",
                                                                                    "description": "Format string for floating point numbers. If a Callable is given, it takes precedence over other numeric formatting parameters, like decimal.",
                                                                                    "default": null
                                                                                },
                                                                                "columns": {
                                                                                    "type": "array",
                                                                                    "description": "Columns to write.",
                                                                                    "default": null,
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "header": {
                                                                                    "type": [
                                                                                        "boolean",
                                                                                        "array"
                                                                                    ],
                                                                                    "description": "Write out the column names. If a list of strings is given it is assumed to be aliases for the column names.",
                                                                                    "default": true
                                                                                },
                                                                                "index": {
                                                                                    "type": "boolean",
                                                                                    "description": "Write row names (index).",
                                                                                    "default": true
                                                                                },
                                                                                "index_label": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "array"
                                                                                    ],
                                                                                    "description": "Column label for index column(s) if desired. If None is given, and header and index are True, then the index names are used. A sequence should be given if the object uses MultiIndex. If False do not print fields for index names. Use index_label=False for easier importing in R.",
                                                                                    "default": null
                                                                                },
                                                                                "mode": {
                                                                                    "type": "string",
                                                                                    "description": "Forwarded to either open(mode=) or fsspec.open(mode=) to control the file opening. Typical values include: w, truncate the file first. x, exclusive creation, failing if the file already exists. a, append to the end of file if it exists.",
                                                                                    "default": "w",
                                                                                    "enum": [
                                                                                        "w",
                                                                                        "x",
                                                                                        "a"
                                                                                    ]
                                                                                },
                                                                                "encoding": {
                                                                                    "type": "string",
                                                                                    "description": "A string representing the encoding to use in the output file, defaults to 'utf-8' . encoding is not supported if path_or_buf is a non-binary file object.",
                                                                                    "default": "utf-8"
                                                                                },
                                                                                "compression": {
                                                                                    "type": "string",
                                                                                    "description": "Compression mode. Can be 'infer' , 'gzip' , 'bz2' , 'zip' , 'xz' , 'zstd' , or 'tar' . Can also be a dict with key 'method' set to one of {'zip' , 'gzip' , 'bz2' , 'zstd' , 'tar'} and other key-value pairs are forwarded to zipfile.ZipFile , gzip.GzipFile , bz2.BZ2File , zstandard.ZstdCompressor or tarfile.TarFile , respectively. As an example, the following could be passed for Zstandard compression using a custom compression dictionary: compression={'method': 'zstd', 'dict_data': my_compression_dict} .",
                                                                                    "default": "infer",
                                                                                    "enum": [
                                                                                        "infer",
                                                                                        "gzip",
                                                                                        "bz2",
                                                                                        "zip",
                                                                                        "xz",
                                                                                        "zstd",
                                                                                        "tar"
                                                                                    ]
                                                                                },
                                                                                "quoting": {
                                                                                    "type": "integer",
                                                                                    "description": "Control field quoting behavior per csv.QUOTE_* constants. Use one of QUOTE_MINIMAL (0) , QUOTE_ALL (1) , QUOTE_NONNUMERIC (2) or QUOTE_NONE (3) .",
                                                                                    "default": 0,
                                                                                    "enum": [
                                                                                        0,
                                                                                        1,
                                                                                        2,
                                                                                        3
                                                                                    ]
                                                                                },
                                                                                "quotechar": {
                                                                                    "type": "string",
                                                                                    "description": "String of length 1. Character used to quote fields.",
                                                                                    "default": "\""
                                                                                },
                                                                                "lineterminator": {
                                                                                    "type": "string",
                                                                                    "description": "The newline character or character sequence to use in the output file. Defaults to os.linesep , which depends on the OS in which this method is called ( '\\n' for linux, '\\r\\n' for Windows, i.e.).",
                                                                                    "default": null
                                                                                },
                                                                                "chunksize": {
                                                                                    "type": "integer",
                                                                                    "description": "Rows to write at a time.",
                                                                                    "default": null
                                                                                },
                                                                                "date_format": {
                                                                                    "type": "string",
                                                                                    "description": "Format string for datetime objects.",
                                                                                    "default": null
                                                                                },
                                                                                "doublequote": {
                                                                                    "type": "boolean",
                                                                                    "description": "Control quoting of quotechar inside a field.",
                                                                                    "default": true
                                                                                },
                                                                                "escapechar": {
                                                                                    "type": "string",
                                                                                    "description": "String of length 1. Character used to escape sep and quotechar when appropriate.",
                                                                                    "default": null
                                                                                },
                                                                                "decimal": {
                                                                                    "type": "string",
                                                                                    "description": "Character recognized as decimal separator. E.g. use ',' for European data.",
                                                                                    "default": "."
                                                                                },
                                                                                "errors": {
                                                                                    "type": "string",
                                                                                    "description": "Specifies how encoding and decoding errors are handled. See the errors argument for open() for a full list of options.",
                                                                                    "default": "strict",
                                                                                    "enum": [
                                                                                        "strict",
                                                                                        "ignore",
                                                                                        "replace",
                                                                                        "xmlcharrefreplace",
                                                                                        "backslashreplace",
                                                                                        "namereplace",
                                                                                        "surrogateescape",
                                                                                        "surrogatepass"
                                                                                    ]
                                                                                },
                                                                                "storage_options": {
                                                                                    "type": "object",
                                                                                    "description": "Extra options that make sense for a particular storage connection, e.g. host, port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded to urllib.request.Request as header options. For other URLs (e.g. starting with 's3://', 'gcs://') the key-value pairs are forwarded to fsspec.open . Please see fsspec and urllib for more details, and for more examples on storage options refer here .",
                                                                                    "default": null
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "path_or_buf"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "required": [
                                                                    "write_options"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Deduplicator"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Schema for Dedup transformation",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Deduplicator",
                                            "color": "#614EA7",
                                            "icon": "/assets/buildPipeline/squre/5.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "keep": {
                                                "type": "string",
                                                "minLength": 1,
                                                "enum": [
                                                    "any",
                                                    "first",
                                                    "last"
                                                ],
                                                "default": "any"
                                            },
                                            "dedup_by": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "ui-hint": "auto-complete",
                                                    "minLength": 1
                                                }
                                            },
                                            "order_by": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "column": {
                                                            "type": "string",
                                                            "ui-hint": "auto-complete",
                                                            "minLength": 1
                                                        },
                                                        "order": {
                                                            "type": "string",
                                                            "enum": [
                                                                "asc",
                                                                "desc"
                                                            ],
                                                            "default": "asc"
                                                        }
                                                    },
                                                    "required": [
                                                        "column"
                                                    ],
                                                    "additionalProperties": false
                                                }
                                            }
                                        },
                                        "required": [
                                            "keep",
                                            "dedup_by"
                                        ],
                                        "allOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "keep": {
                                                            "const": "first"
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "required": [
                                                        "order_by"
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "keep": {
                                                            "const": "last"
                                                        }
                                                    }
                                                },
                                                "then": {
                                                    "required": [
                                                        "order_by"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Lookup"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "https://json-schema.org/draft-07/schema#",
                                        "description": "Schema for Lookup transformation",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Lookup",
                                            "color": "#4a6bdf",
                                            "icon": "/assets/buildPipeline/squre/3.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the transformation."
                                            },
                                            "dependent_on": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of transformations this transformation depends on."
                                            },
                                            "transformation": {
                                                "type": "string",
                                                "enum": [
                                                    "Lookup"
                                                ],
                                                "description": "The type of transformation."
                                            },
                                            "lookup_type": {
                                                "type": "string",
                                                "enum": [
                                                    "Column Based",
                                                    "Literal"
                                                ],
                                                "description": "The type of lookup to perform."
                                            },
                                            "lookup_config": {
                                                "type": "object",
                                                "description": "Configuration for reading the lookup data (only for Column Based lookup).",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The name of the lookup configuration."
                                                    },
                                                    "source": {
                                                        "type": "object",
                                                        "description": "Reference to the source of the lookup data."
                                                    },
                                                    "read_options": {
                                                        "type": "object",
                                                        "description": "Options for reading the lookup data.",
                                                        "properties": {
                                                            "header": {
                                                                "type": "boolean",
                                                                "default": true,
                                                                "description": "Whether the lookup data has a header row."
                                                            }
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "source"
                                                ]
                                            },
                                            "lookup_data": {
                                                "type": "array",
                                                "description": "Literal data for lookup (only for Literal lookup).",
                                                "items": {
                                                    "type": "object",
                                                    "description": "A row of literal data."
                                                }
                                            },
                                            "lookup_conditions": {
                                                "description": "Conditions for joining the main DataFrame with the lookup DataFrame.",
                                                "oneOf": [
                                                    {
                                                        "type": "array",
                                                        "description": "Conditions for Column Based lookup.",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "column_name": {
                                                                    "type": "string",
                                                                    "description": "The column in the main DataFrame to join on."
                                                                },
                                                                "lookup_with": {
                                                                    "type": "string",
                                                                    "description": "The column in the lookup DataFrame to join with."
                                                                }
                                                            },
                                                            "required": [
                                                                "column_name",
                                                                "lookup_with"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "object",
                                                        "description": "Condition for Literal lookup.",
                                                        "properties": {
                                                            "column_name": {
                                                                "type": "string",
                                                                "description": "The column in the main DataFrame to join on."
                                                            },
                                                            "lookup_with": {
                                                                "type": "string",
                                                                "description": "The column in the literal data to join with."
                                                            }
                                                        },
                                                        "required": [
                                                            "column_name",
                                                            "lookup_with"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "lookup_columns": {
                                                "type": "array",
                                                "description": "Columns to select and rename after the lookup.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "column": {
                                                            "type": "string",
                                                            "description": "The column to select."
                                                        },
                                                        "out_column_name": {
                                                            "type": "string",
                                                            "description": "The name of the output column."
                                                        }
                                                    },
                                                    "required": [
                                                        "column",
                                                        "out_column_name"
                                                    ]
                                                }
                                            },
                                            "keep": {
                                                "type": "string",
                                                "enum": [
                                                    "First",
                                                    "Last",
                                                    "All"
                                                ],
                                                "description": "Specifies which rows to keep when there are multiple matches in the lookup."
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "dependent_on",
                                            "transformation",
                                            "lookup_columns",
                                            "lookup_type",
                                            "lookup_conditions"
                                        ],
                                        "additionalProperties": false,
                                        "if": {
                                            "properties": {
                                                "lookup_type": {
                                                    "const": "Column Based"
                                                }
                                            }
                                        },
                                        "then": {
                                            "required": [
                                                "lookup_config",
                                                "lookup_conditions"
                                            ]
                                        },
                                        "else": {
                                            "required": [
                                                "lookup_data",
                                                "lookup_conditions"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Repartition"
                                            }
                                        }
                                    },
                                    "then": {
                                        "id": "file://repartition_schema.json",
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Repartition",
                                            "color": "#32D1A4",
                                            "icon": "/assets/buildPipeline/squre/6.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "repartition_type": {
                                                "type": "string",
                                                "minLength": 1,
                                                "enum": [
                                                    "repartition",
                                                    "coalesce",
                                                    "hash_repartition",
                                                    "repartition_by_range"
                                                ],
                                                "default": "repartition"
                                            },
                                            "repartition_value": {
                                                "type": "number"
                                            },
                                            "override_partition": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "repartition_expression": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "items": {
                                                    "required": [
                                                        "expression",
                                                        "sort_order",
                                                        "order"
                                                    ],
                                                    "properties": {
                                                        "expression": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "sort_order": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "order": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            },
                                            "limit": {
                                                "type": "number"
                                            }
                                        },
                                        "required": [
                                            "repartition_type",
                                            "override_partition"
                                        ],
                                        "anyOf": [
                                            {
                                                "if": {
                                                    "properties": {
                                                        "repartition_type": {
                                                            "const": "repartition"
                                                        }
                                                    },
                                                    "required": [
                                                        "repartition_type"
                                                    ]
                                                },
                                                "then": {
                                                    "required": [
                                                        "repartition_value"
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "repartition_type": {
                                                            "const": "coalesce"
                                                        }
                                                    },
                                                    "required": [
                                                        "repartition_type"
                                                    ]
                                                },
                                                "then": {
                                                    "required": [
                                                        "repartition_value"
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "repartition_type": {
                                                            "const": "hash_repartition"
                                                        }
                                                    },
                                                    "required": [
                                                        "repartition_type"
                                                    ]
                                                },
                                                "then": {
                                                    "required": [
                                                        "repartition_expression",
                                                        "repartition_value"
                                                    ]
                                                }
                                            },
                                            {
                                                "if": {
                                                    "properties": {
                                                        "repartition_type": {
                                                            "const": "repartition_by_range"
                                                        }
                                                    },
                                                    "required": [
                                                        "repartition_type"
                                                    ]
                                                },
                                                "then": {
                                                    "required": [
                                                        "repartition_expression",
                                                        "repartition_value"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Set"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "https://json-schema.org/draft-07/schema#",
                                        "description": "Schema for Set transformation",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Set",
                                            "color": "#E82948",
                                            "icon": "/assets/buildPipeline/squre/8.svg",
                                            "ports": {
                                                "inputs": 2,
                                                "outputs": 1,
                                                "maxInputs": "unlimited"
                                            }
                                        },
                                        "properties": {
                                            "operation_type": {
                                                "type": "string",
                                                "enum": [
                                                    "Union",
                                                    "Union All",
                                                    "Union By Name",
                                                    "Intersect",
                                                    "Intersect All",
                                                    "Except",
                                                    "Except All"
                                                ],
                                                "description": "The type of set operation to perform."
                                            },
                                            "allow_missing_columns": {
                                                "type": "boolean",
                                                "description": "Whether to allow missing columns in the input datasets. Only applicable for 'Union By Name'.",
                                                "default": false
                                            }
                                        },
                                        "required": [
                                            "operation_type"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Python"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "Schema for Custom transformation",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Python",
                                            "color": "#614EA7",
                                            "icon": "/assets/buildPipeline/squre/4.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": "unlimited"
                                            }
                                        },
                                        "properties": {
                                            "user_code": {
                                                "type": "string",
                                                "minLength": 1,
                                                "description": "The Python code to execute for the custom transformation."
                                            }
                                        },
                                        "required": [
                                            "user_code"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "transformation": {
                                                "const": "Expression"
                                            }
                                        }
                                    },
                                    "then": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "description": "",
                                        "type": "object",
                                        "ui_properties": {
                                            "module_name": "Expression",
                                            "color": "#32D1A4",
                                            "icon": "/assets/buildPipeline/28.svg",
                                            "ports": {
                                                "inputs": 1,
                                                "outputs": 1,
                                                "maxInputs": 1
                                            }
                                        },
                                        "properties": {
                                            "derived_fields": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "items": {
                                                    "required": [
                                                        "name",
                                                        "expression"
                                                    ],
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "ui-hint": "expression"
                                                        },
                                                        "expression": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        }
                                                    }
                                                }
                                            },
                                            "select_columns": {
                                                "type": "array",
                                                "description": "List of column names to select from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "drop_columns": {
                                                "type": "array",
                                                "description": "List of column names to drop from the dataset",
                                                "items": {
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "uniqueItems": true
                                            },
                                            "rename_columns": {
                                                "type": "object",
                                                "description": "Mapping of old column names to new column names",
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        },
                                        "required": [
                                            "derived_fields"
                                        ]
                                    }
                                }
                            ]
                        },
                        "minItems": 1
                    }
                }
            }
        }
    ]
}