{
  "projectName": "Data Platform",
  "technologies": [
    "React 18",
    "TypeScript",
    "Redux Toolkit",
    "TanStack Query",
    "TanStack Table",
    "Tailwind CSS",
    "dnd-kit",
    "reactflow",
    "Vite",
    "Radix UI",
    "Keycloak",
    "React Hook Form",
    "Zod",
    "Recharts",
    "Axios"
  ],
  "codingConventions": {
    "keyPrinciples": [
      "Write concise, technical code with accurate TypeScript types",
      "Use functional, declarative programming. Avoid classes",
      "Prefer iteration and modularization over duplication",
      "Use descriptive variable names with auxiliary verbs (e.g., isLoading)",
      "Use lowercase with dashes for directories (e.g., components/data-catalog)",
      "Favor named exports for components",
      "Handle errors and edge cases at the beginning of functions"
    ],
    "javascriptTypeScript": [
      "Use 'function' keyword for pure functions. Omit semicolons",
      "Use TypeScript for all code. Prefer interfaces over types. Avoid enums, use constant objects",
      "File structure: Exported component, subcomponents, helpers, static content, types",
      "Handle errors and edge cases at the beginning of functions",
      "Use early returns for error conditions",
      "Place the happy path last in the function for improved readability",
      "Avoid unnecessary else statements; use if-return pattern instead"
    ],
    "projectStructure": {
      "src/": {
        "api/": "API services and configurations",
        "components/": "UI components",
        "features/": "Feature modules",
        "hooks/": "Custom React hooks",
        "lib/": "Utility functions",
        "store/": "Redux state management",
        "types/": "TypeScript type definitions"
      }
    },
    "reactVite": [
      "Use functional components with TypeScript interfaces",
      "Use Redux Toolkit for global state, React hooks for component state",
      "Use React Hook Form with Zod schemas for form validation",
      "Use TanStack Query for server state management",
      "Implement responsive design with Tailwind CSS"
    ]
  }
}
